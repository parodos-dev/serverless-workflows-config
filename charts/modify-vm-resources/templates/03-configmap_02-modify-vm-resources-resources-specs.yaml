apiVersion: v1
data:
  jira-openapi.json: "{\n  \"openapi\": \"3.0.1\",\n  \"info\": {\n    \"title\":
    \"JIRA Actions for BS API\",\n    \"description\": \"JIRA Actions BS API\",\n
    \   \"version\": \"0.0.1\"\n  },\n  \"paths\": {\n    \"/rest/api/2/issue/{issueIdOrKey}\":{\n
    \     \"get\":{\n          \"deprecated\": false,\n          \"security\": [\n
    \           {\n              \"basicAuth\": []\n            }\n          ],\n
    \        \"description\":\"Returns the details for an issue.\\n\\nThe issue is
    identified by its ID or key, however, if the identifier doesn't match an issue,
    a case-insensitive search and check for moved issues is performed. If a matching
    issue is found its details are returned, a 302 or other redirect is **not** returned.
    The issue key returned in the response is the key of the issue found.\\n\\nThis
    operation can be accessed anonymously.\\n\\n**[Permissions](#permissions) required:**\\n\\n
    *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg)
    for the project that the issue is in.\\n *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg)
    is configured, issue-level security permission to view the issue.\",\n         \"operationId\":\"getIssue\",\n
    \        \"parameters\":[\n            {\n               \"description\":\"The
    ID or key of the issue.\",\n               \"in\":\"path\",\n               \"name\":\"issueIdOrKey\",\n
    \              \"required\":true,\n               \"schema\":{\n                  \"type\":\"string\"\n
    \              }\n            },\n            {\n               \"description\":\"A
    list of fields to return for the issue. This parameter accepts a comma-separated
    list. Use it to retrieve a subset of fields. Allowed values:\\n\\n *  `*all` Returns
    all fields.\\n *  `*navigable` Returns navigable fields.\\n *  Any issue field,
    prefixed with a minus to exclude.\\n\\nExamples:\\n\\n *  `summary,comment` Returns
    only the summary and comments fields.\\n *  `-description` Returns all (default)
    fields except description.\\n *  `*navigable,-comment` Returns all navigable fields
    except comment.\\n\\nThis parameter may be specified multiple times. For example,
    `fields=field1,field2& fields=field3`.\\n\\nNote: All fields are returned by default.
    This differs from [Search for issues using JQL (GET)](#api-rest-api-2-search-get)
    and [Search for issues using JQL (POST)](#api-rest-api-2-search-post) where the
    default is all navigable fields.\",\n               \"in\":\"query\",\n               \"name\":\"fields\",\n
    \              \"schema\":{\n                  \"items\":{\n                     \"default\":\"*all\",\n
    \                    \"type\":\"string\"\n                  },\n                  \"type\":\"array\"\n
    \              }\n            },\n            {\n               \"description\":\"Whether
    fields in `fields` are referenced by keys rather than IDs. This parameter is useful
    where fields have been added by a connect app and a field's key may differ from
    its ID.\",\n               \"in\":\"query\",\n               \"name\":\"fieldsByKeys\",\n
    \              \"schema\":{\n                  \"default\":false,\n                  \"type\":\"boolean\"\n
    \              }\n            },\n            {\n               \"description\":\"Use
    [expand](#expansion) to include additional information about the issues in the
    response. This parameter accepts a comma-separated list. Expand options include:\\n\\n
    *  `renderedFields` Returns field values rendered in HTML format.\\n *  `names`
    Returns the display name of each field.\\n *  `schema` Returns the schema describing
    a field type.\\n *  `transitions` Returns all possible transitions for the issue.\\n
    *  `editmeta` Returns information about how each field can be edited.\\n *  `changelog`
    Returns a list of recent updates to an issue, sorted by date, starting from the
    most recent.\\n *  `versionedRepresentations` Returns a JSON array for each version
    of a field's value, with the highest number representing the most recent version.
    Note: When included in the request, the `fields` parameter is ignored.\",\n               \"in\":\"query\",\n
    \              \"name\":\"expand\",\n               \"schema\":{\n                  \"type\":\"string\"\n
    \              }\n            },\n            {\n               \"description\":\"A
    list of issue properties to return for the issue. This parameter accepts a comma-separated
    list. Allowed values:\\n\\n *  `*all` Returns all issue properties.\\n *  Any
    issue property key, prefixed with a minus to exclude.\\n\\nExamples:\\n\\n *  `*all`
    Returns all properties.\\n *  `*all,-prop1` Returns all properties except `prop1`.\\n
    *  `prop1,prop2` Returns `prop1` and `prop2` properties.\\n\\nThis parameter may
    be specified multiple times. For example, `properties=prop1,prop2& properties=prop3`.\",\n
    \              \"in\":\"query\",\n               \"name\":\"properties\",\n               \"schema\":{\n
    \                 \"items\":{\n                     \"default\":\"null\",\n                     \"type\":\"string\"\n
    \                 },\n                  \"type\":\"array\"\n               }\n
    \           },\n            {\n               \"description\":\"Whether the project
    in which the issue is created is added to the user's **Recently viewed** project
    list, as shown under **Projects** in Jira. This also populates the [JQL issues
    search](#api-rest-api-2-search-get) `lastViewed` field.\",\n               \"in\":\"query\",\n
    \              \"name\":\"updateHistory\",\n               \"schema\":{\n                  \"default\":false,\n
    \                 \"type\":\"boolean\"\n               }\n            }\n         ],\n
    \        \"responses\":{\n            \"200\":{\n               \"content\":{\n
    \                 \"application/json\":{\n                     \"example\":\"{\\\"fields\\\":{\\\"watcher\\\":{\\\"isWatching\\\":false,\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/2/issue/EX-1/watchers\\\",\\\"watchCount\\\":1,\\\"watchers\\\":[{\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"active\\\":false,\\\"displayName\\\":\\\"Mia
    Krystof\\\",\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/2/user?accountId=5b10a2844c20165700ede21g\\\"}]},\\\"attachment\\\":[{\\\"author\\\":{\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"accountType\\\":\\\"atlassian\\\",\\\"active\\\":false,\\\"avatarUrls\\\":{\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\\\",\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\\\",\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\\\"},\\\"displayName\\\":\\\"Mia
    Krystof\\\",\\\"key\\\":\\\"\\\",\\\"name\\\":\\\"\\\",\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/2/user?accountId=5b10a2844c20165700ede21g\\\"},\\\"content\\\":\\\"https://your-domain.atlassian.net/jira/rest/api/3/attachment/content/10001\\\",\\\"created\\\":\\\"2023-06-24T19:24:50.000+0000\\\",\\\"filename\\\":\\\"debuglog.txt\\\",\\\"id\\\":10001,\\\"mimeType\\\":\\\"text/plain\\\",\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/2/attachments/10001\\\",\\\"size\\\":2460}],\\\"sub-tasks\\\":[{\\\"id\\\":\\\"10000\\\",\\\"outwardIssue\\\":{\\\"fields\\\":{\\\"status\\\":{\\\"iconUrl\\\":\\\"https://your-domain.atlassian.net/images/icons/statuses/open.png\\\",\\\"name\\\":\\\"Open\\\"}},\\\"id\\\":\\\"10003\\\",\\\"key\\\":\\\"ED-2\\\",\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/2/issue/ED-2\\\"},\\\"type\\\":{\\\"id\\\":\\\"10000\\\",\\\"inward\\\":\\\"Parent\\\",\\\"name\\\":\\\"\\\",\\\"outward\\\":\\\"Sub-task\\\"}}],\\\"description\\\":\\\"Main
    order flow broken\\\",\\\"project\\\":{\\\"avatarUrls\\\":{\\\"16x16\\\":\\\"https://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10000\\\",\\\"24x24\\\":\\\"https://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10000\\\",\\\"32x32\\\":\\\"https://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10000\\\",\\\"48x48\\\":\\\"https://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10000\\\"},\\\"id\\\":\\\"10000\\\",\\\"insight\\\":{\\\"lastIssueUpdateTime\\\":\\\"2021-04-22T05:37:05.000+0000\\\",\\\"totalIssueCount\\\":100},\\\"key\\\":\\\"EX\\\",\\\"name\\\":\\\"Example\\\",\\\"projectCategory\\\":{\\\"description\\\":\\\"First
    Project Category\\\",\\\"id\\\":\\\"10000\\\",\\\"name\\\":\\\"FIRST\\\",\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/2/projectCategory/10000\\\"},\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/2/project/EX\\\",\\\"simplified\\\":false,\\\"style\\\":\\\"classic\\\"},\\\"comment\\\":[{\\\"author\\\":{\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"active\\\":false,\\\"displayName\\\":\\\"Mia
    Krystof\\\",\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/2/user?accountId=5b10a2844c20165700ede21g\\\"},\\\"body\\\":\\\"Lorem
    ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque eget venenatis
    elit. Duis eu justo eget augue iaculis fermentum. Sed semper quam laoreet nisi
    egestas at posuere augue semper.\\\",\\\"created\\\":\\\"2021-01-17T12:34:00.000+0000\\\",\\\"id\\\":\\\"10000\\\",\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/2/issue/10010/comment/10000\\\",\\\"updateAuthor\\\":{\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"active\\\":false,\\\"displayName\\\":\\\"Mia
    Krystof\\\",\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/2/user?accountId=5b10a2844c20165700ede21g\\\"},\\\"updated\\\":\\\"2021-01-18T23:45:00.000+0000\\\",\\\"visibility\\\":{\\\"identifier\\\":\\\"Administrators\\\",\\\"type\\\":\\\"role\\\",\\\"value\\\":\\\"Administrators\\\"}}],\\\"issuelinks\\\":[{\\\"id\\\":\\\"10001\\\",\\\"outwardIssue\\\":{\\\"fields\\\":{\\\"status\\\":{\\\"iconUrl\\\":\\\"https://your-domain.atlassian.net/images/icons/statuses/open.png\\\",\\\"name\\\":\\\"Open\\\"}},\\\"id\\\":\\\"10004L\\\",\\\"key\\\":\\\"PR-2\\\",\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/2/issue/PR-2\\\"},\\\"type\\\":{\\\"id\\\":\\\"10000\\\",\\\"inward\\\":\\\"depends
    on\\\",\\\"name\\\":\\\"Dependent\\\",\\\"outward\\\":\\\"is depended by\\\"}},{\\\"id\\\":\\\"10002\\\",\\\"inwardIssue\\\":{\\\"fields\\\":{\\\"status\\\":{\\\"iconUrl\\\":\\\"https://your-domain.atlassian.net/images/icons/statuses/open.png\\\",\\\"name\\\":\\\"Open\\\"}},\\\"id\\\":\\\"10004\\\",\\\"key\\\":\\\"PR-3\\\",\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/2/issue/PR-3\\\"},\\\"type\\\":{\\\"id\\\":\\\"10000\\\",\\\"inward\\\":\\\"depends
    on\\\",\\\"name\\\":\\\"Dependent\\\",\\\"outward\\\":\\\"is depended by\\\"}}],\\\"worklog\\\":[{\\\"author\\\":{\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"active\\\":false,\\\"displayName\\\":\\\"Mia
    Krystof\\\",\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/2/user?accountId=5b10a2844c20165700ede21g\\\"},\\\"comment\\\":\\\"I
    did some work here.\\\",\\\"id\\\":\\\"100028\\\",\\\"issueId\\\":\\\"10002\\\",\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/2/issue/10010/worklog/10000\\\",\\\"started\\\":\\\"2021-01-17T12:34:00.000+0000\\\",\\\"timeSpent\\\":\\\"3h
    20m\\\",\\\"timeSpentSeconds\\\":12000,\\\"updateAuthor\\\":{\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"active\\\":false,\\\"displayName\\\":\\\"Mia
    Krystof\\\",\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/2/user?accountId=5b10a2844c20165700ede21g\\\"},\\\"updated\\\":\\\"2021-01-18T23:45:00.000+0000\\\",\\\"visibility\\\":{\\\"identifier\\\":\\\"276f955c-63d7-42c8-9520-92d01dca0625\\\",\\\"type\\\":\\\"group\\\",\\\"value\\\":\\\"jira-developers\\\"}}],\\\"updated\\\":1,\\\"timetracking\\\":{\\\"originalEstimate\\\":\\\"10m\\\",\\\"originalEstimateSeconds\\\":600,\\\"remainingEstimate\\\":\\\"3m\\\",\\\"remainingEstimateSeconds\\\":200,\\\"timeSpent\\\":\\\"6m\\\",\\\"timeSpentSeconds\\\":400}},\\\"id\\\":\\\"10002\\\",\\\"key\\\":\\\"ED-1\\\",\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/2/issue/10002\\\"}\",\n
    \                    \"schema\":{\n                        \"$ref\":\"#/components/schemas/IssueBean\"\n
    \                    }\n                  }\n               },\n               \"description\":\"Returned
    if the request is successful.\"\n            },\n            \"401\":{\n               \"description\":\"Returned
    if the authentication credentials are incorrect or missing.\"\n            },\n
    \           \"404\":{\n               \"description\":\"Returned if the issue
    is not found or the user does not have permission to view it.\"\n            }\n
    \        },\n         \"summary\":\"Get issue\",\n         \"tags\":[\n            \"Issues\"\n
    \        ],\n         \"x-atlassian-connect-scope\":\"READ\"\n      }\n    },\n
    \   \"/rest/api/2/issue\": {\n      \"post\": {\n        \"tags\": [\"Issues\"],\n
    \       \"summary\": \"Create issue\",\n        \"description\": \"Creates an
    issue or, where the option to create subtasks is enabled in Jira, a subtask. A
    transition may be applied, to move the issue or subtask to a workflow step other
    than the default start step, and issue properties set.\\n\\nThe content of the
    issue or subtask is defined using `update` and `fields`. The fields that can be
    set in the issue or subtask are determined using the [ Get create issue metadata](#api-rest-api-3-issue-createmeta-get).
    These are the same fields that appear on the issue's create screen. Note that
    the `description`, `environment`, and any `textarea` type custom fields (multi-line
    text fields) take Atlassian Document Format content. Single line custom fields
    (`textfield`) accept a string and don't handle Atlassian Document Format content.\\n\\nCreating
    a subtask differs from creating an issue as follows:\\n\\n *  `issueType` must
    be set to a subtask issue type (use [ Get create issue metadata](#api-rest-api-3-issue-createmeta-get)
    to find subtask issue types).\\n *  `parent` must contain the ID or key of the
    parent issue.\\n\\nIn a next-gen project any issue may be made a child providing
    that the parent and child are members of the same project.\\n\\n**[Permissions](#permissions)
    required:** *Browse projects* and *Create issues* [project permissions](https://confluence.atlassian.com/x/yodKLg)
    for the project in which the issue or subtask is created.\",\n        \"operationId\":
    \"createIssue\",\n        \"parameters\": [\n          {\n            \"name\":
    \"updateHistory\",\n            \"in\": \"query\",\n            \"description\":
    \"Whether the project in which the issue is created is added to the user's **Recently
    viewed** project list, as shown under **Projects** in Jira. When provided, the
    issue type and request type are added to the user's history for a project. These
    values are then used to provide defaults on the issue create screen.\",\n            \"schema\":
    {\n              \"type\": \"boolean\",\n              \"default\": false\n            }\n
    \         }\n        ],\n        \"requestBody\": {\n          \"description\":
    \"Input parameters for the action createIssue in BS\",\n          \"required\":
    true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\":
    {\n                \"$ref\": \"#/components/schemas/IssueUpdateDetails\"\n              }\n
    \           }\n          }\n        },\n        \"responses\": {\n          \"default\":
    {\n            \"description\": \"Create Issue Response\",\n            \"content\":
    {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\":
    \"object\"\n                }\n              }\n            }\n          }\n        },\n
    \       \"deprecated\": false,\n        \"security\": [\n          {\n            \"basicAuth\":
    []\n          }\n        ]\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\":
    {\n      \"ChangeDetails\":{\n        \"additionalProperties\":false,\n        \"description\":\"A
    change item.\",\n        \"properties\":{\n           \"field\":{\n              \"description\":\"The
    name of the field changed.\",\n              \"readOnly\":true,\n              \"type\":\"string\"\n
    \          },\n           \"fieldId\":{\n              \"description\":\"The ID
    of the field changed.\",\n              \"readOnly\":true,\n              \"type\":\"string\"\n
    \          },\n           \"fieldtype\":{\n              \"description\":\"The
    type of the field changed.\",\n              \"readOnly\":true,\n              \"type\":\"string\"\n
    \          },\n           \"from\":{\n              \"description\":\"The details
    of the original value.\",\n              \"readOnly\":true,\n              \"type\":\"string\"\n
    \          },\n           \"fromString\":{\n              \"description\":\"The
    details of the original value as a string.\",\n              \"readOnly\":true,\n
    \             \"type\":\"string\"\n           },\n           \"to\":{\n              \"description\":\"The
    details of the new value.\",\n              \"readOnly\":true,\n              \"type\":\"string\"\n
    \          },\n           \"toString\":{\n              \"description\":\"The
    details of the new value as a string.\",\n              \"readOnly\":true,\n              \"type\":\"string\"\n
    \          }\n        },\n        \"type\":\"object\"\n     },\n     \"HistoryMetadataParticipant\":{\n
    \       \"additionalProperties\":true,\n        \"description\":\"Details of user
    or system associated with a issue history metadata item.\",\n        \"properties\":{\n
    \          \"avatarUrl\":{\n              \"description\":\"The URL to an avatar
    for the user or system associated with a history record.\",\n              \"type\":\"string\"\n
    \          },\n           \"displayName\":{\n              \"description\":\"The
    display name of the user or system associated with a history record.\",\n              \"type\":\"string\"\n
    \          },\n           \"displayNameKey\":{\n              \"description\":\"The
    key of the display name of the user or system associated with a history record.\",\n
    \             \"type\":\"string\"\n           },\n           \"id\":{\n              \"description\":\"The
    ID of the user or system associated with a history record.\",\n              \"type\":\"string\"\n
    \          },\n           \"type\":{\n              \"description\":\"The type
    of the user or system associated with a history record.\",\n              \"type\":\"string\"\n
    \          },\n           \"url\":{\n              \"description\":\"The URL of
    the user or system associated with a history record.\",\n              \"type\":\"string\"\n
    \          }\n        },\n        \"type\":\"object\"\n     },\n     \"HistoryMetadata\":{\n
    \       \"additionalProperties\":true,\n        \"description\":\"Details of issue
    history metadata.\",\n        \"properties\":{\n           \"activityDescription\":{\n
    \             \"description\":\"The activity described in the history record.\",\n
    \             \"type\":\"string\"\n           },\n           \"activityDescriptionKey\":{\n
    \             \"description\":\"The key of the activity described in the history
    record.\",\n              \"type\":\"string\"\n           },\n           \"actor\":{\n
    \             \"allOf\":[\n                 {\n                    \"$ref\":\"#/components/schemas/HistoryMetadataParticipant\"\n
    \                }\n              ],\n              \"description\":\"Details
    of the user whose action created the history record.\"\n           },\n           \"cause\":{\n
    \             \"allOf\":[\n                 {\n                    \"$ref\":\"#/components/schemas/HistoryMetadataParticipant\"\n
    \                }\n              ],\n              \"description\":\"Details
    of the cause that triggered the creation the history record.\"\n           },\n
    \          \"description\":{\n              \"description\":\"The description
    of the history record.\",\n              \"type\":\"string\"\n           },\n
    \          \"descriptionKey\":{\n              \"description\":\"The description
    key of the history record.\",\n              \"type\":\"string\"\n           },\n
    \          \"emailDescription\":{\n              \"description\":\"The description
    of the email address associated the history record.\",\n              \"type\":\"string\"\n
    \          },\n           \"emailDescriptionKey\":{\n              \"description\":\"The
    description key of the email address associated the history record.\",\n              \"type\":\"string\"\n
    \          },\n           \"extraData\":{\n              \"additionalProperties\":{\n
    \                \"type\":\"string\"\n              },\n              \"description\":\"Additional
    arbitrary information about the history record.\",\n              \"type\":\"object\"\n
    \          },\n           \"generator\":{\n              \"allOf\":[\n                 {\n
    \                   \"$ref\":\"#/components/schemas/HistoryMetadataParticipant\"\n
    \                }\n              ],\n              \"description\":\"Details
    of the system that generated the history record.\"\n           },\n           \"type\":{\n
    \             \"description\":\"The type of the history record.\",\n              \"type\":\"string\"\n
    \          }\n        },\n        \"type\":\"object\"\n     },\n     \"AvatarUrlsBean\":{\n
    \       \"additionalProperties\":false,\n        \"properties\":{\n           \"16x16\":{\n
    \             \"description\":\"The URL of the item's 16x16 pixel avatar.\",\n
    \             \"format\":\"uri\",\n              \"type\":\"string\"\n           },\n
    \          \"24x24\":{\n              \"description\":\"The URL of the item's
    24x24 pixel avatar.\",\n              \"format\":\"uri\",\n              \"type\":\"string\"\n
    \          },\n           \"32x32\":{\n              \"description\":\"The URL
    of the item's 32x32 pixel avatar.\",\n              \"format\":\"uri\",\n              \"type\":\"string\"\n
    \          },\n           \"48x48\":{\n              \"description\":\"The URL
    of the item's 48x48 pixel avatar.\",\n              \"format\":\"uri\",\n              \"type\":\"string\"\n
    \          }\n        },\n        \"type\":\"object\"\n     },\n     \"UserDetails\":{\n
    \       \"additionalProperties\":false,\n        \"description\":\"User details
    permitted by the user's Atlassian Account privacy settings. However, be aware
    of these exceptions:\\n\\n *  User record deleted from Atlassian: This occurs
    as the result of a right to be forgotten request. In this case, `displayName`
    provides an indication and other parameters have default values or are blank (for
    example, email is blank).\\n *  User record corrupted: This occurs as a results
    of events such as a server import and can only happen to deleted users. In this
    case, `accountId` returns *unknown* and all other parameters have fallback values.\\n
    *  User record unavailable: This usually occurs due to an internal service outage.
    In this case, all parameters have fallback values.\",\n        \"properties\":{\n
    \          \"accountId\":{\n              \"description\":\"The account ID of
    the user, which uniquely identifies the user across all Atlassian products. For
    example, *5b10ac8d82e05b22cc7d4ef5*.\",\n              \"maxLength\":128,\n              \"type\":\"string\"\n
    \          },\n           \"accountType\":{\n              \"description\":\"The
    type of account represented by this user. This will be one of 'atlassian' (normal
    users), 'app' (application user) or 'customer' (Jira Service Desk customer user)\",\n
    \             \"readOnly\":true,\n              \"type\":\"string\"\n           },\n
    \          \"active\":{\n              \"description\":\"Whether the user is active.\",\n
    \             \"readOnly\":true,\n              \"type\":\"boolean\"\n           },\n
    \          \"avatarUrls\":{\n              \"allOf\":[\n                 {\n                    \"$ref\":\"#/components/schemas/AvatarUrlsBean\"\n
    \                }\n              ],\n              \"description\":\"The avatars
    of the user.\",\n              \"readOnly\":true\n           },\n           \"displayName\":{\n
    \             \"description\":\"The display name of the user. Depending on the
    user’s privacy settings, this may return an alternative value.\",\n              \"readOnly\":true,\n
    \             \"type\":\"string\"\n           },\n           \"emailAddress\":{\n
    \             \"description\":\"The email address of the user. Depending on the
    user’s privacy settings, this may be returned as null.\",\n              \"readOnly\":true,\n
    \             \"type\":\"string\"\n           },\n           \"key\":{\n              \"description\":\"This
    property is no longer available and will be removed from the documentation soon.
    See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/)
    for details.\",\n              \"readOnly\":true,\n              \"type\":\"string\"\n
    \          },\n           \"name\":{\n              \"description\":\"This property
    is no longer available and will be removed from the documentation soon. See the
    [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/)
    for details.\",\n              \"readOnly\":true,\n              \"type\":\"string\"\n
    \          },\n           \"self\":{\n              \"description\":\"The URL
    of the user.\",\n              \"readOnly\":true,\n              \"type\":\"string\"\n
    \          },\n           \"timeZone\":{\n              \"description\":\"The
    time zone specified in the user's profile. Depending on the user’s privacy settings,
    this may be returned as null.\",\n              \"readOnly\":true,\n              \"type\":\"string\"\n
    \          }\n        },\n        \"type\":\"object\"\n     },\n     \"Changelog\":{\n
    \       \"additionalProperties\":false,\n        \"description\":\"A log of changes
    made to issue fields. Changelogs related to workflow associations are currently
    being deprecated.\",\n        \"properties\":{\n           \"author\":{\n              \"allOf\":[\n
    \                {\n                    \"$ref\":\"#/components/schemas/UserDetails\"\n
    \                }\n              ],\n              \"description\":\"The user
    who made the change.\",\n              \"readOnly\":true\n           },\n           \"created\":{\n
    \             \"description\":\"The date on which the change took place.\",\n
    \             \"format\":\"date-time\",\n              \"readOnly\":true,\n              \"type\":\"string\"\n
    \          },\n           \"historyMetadata\":{\n              \"allOf\":[\n                 {\n
    \                   \"$ref\":\"#/components/schemas/HistoryMetadata\"\n                 }\n
    \             ],\n              \"description\":\"The history metadata associated
    with the changed.\",\n              \"readOnly\":true\n           },\n           \"id\":{\n
    \             \"description\":\"The ID of the changelog.\",\n              \"readOnly\":true,\n
    \             \"type\":\"string\"\n           },\n           \"items\":{\n              \"description\":\"The
    list of items changed.\",\n              \"items\":{\n                 \"$ref\":\"#/components/schemas/ChangeDetails\"\n
    \             },\n              \"readOnly\":true,\n              \"type\":\"array\"\n
    \          }\n        },\n        \"type\":\"object\"\n     },\n     \"PageOfChangelogs\":{\n
    \       \"additionalProperties\":false,\n        \"description\":\"A page of changelogs.\",\n
    \       \"properties\":{\n           \"histories\":{\n              \"description\":\"The
    list of changelogs.\",\n              \"items\":{\n                 \"$ref\":\"#/components/schemas/Changelog\"\n
    \             },\n              \"readOnly\":true,\n              \"type\":\"array\"\n
    \          },\n           \"maxResults\":{\n              \"description\":\"The
    maximum number of results that could be on the page.\",\n              \"format\":\"int32\",\n
    \             \"readOnly\":true,\n              \"type\":\"integer\"\n           },\n
    \          \"startAt\":{\n              \"description\":\"The index of the first
    item returned on the page.\",\n              \"format\":\"int32\",\n              \"readOnly\":true,\n
    \             \"type\":\"integer\"\n           },\n           \"total\":{\n              \"description\":\"The
    number of results on the page.\",\n              \"format\":\"int32\",\n              \"readOnly\":true,\n
    \             \"type\":\"integer\"\n           }\n        },\n        \"type\":\"object\"\n
    \    },\n     \"IssueUpdateMetadata\":{\n        \"description\":\"A list of editable
    field details.\",\n        \"properties\":{\n           \"fields\":{\n              \"additionalProperties\":{\n
    \                \"$ref\":\"#/components/schemas/FieldMetadata\"\n              },\n
    \             \"readOnly\":true,\n              \"type\":\"object\"\n           }\n
    \       },\n        \"type\":\"object\"\n     },\n     \"FieldMetadata\":{\n        \"additionalProperties\":false,\n
    \       \"description\":\"The metadata describing an issue field.\",\n        \"properties\":{\n
    \          \"allowedValues\":{\n              \"description\":\"The list of values
    allowed in the field.\",\n              \"items\":{\n                 \"readOnly\":true\n
    \             },\n              \"readOnly\":true,\n              \"type\":\"array\"\n
    \          },\n           \"autoCompleteUrl\":{\n              \"description\":\"The
    URL that can be used to automatically complete the field.\",\n              \"readOnly\":true,\n
    \             \"type\":\"string\"\n           },\n           \"configuration\":{\n
    \             \"additionalProperties\":{\n                 \"readOnly\":true\n
    \             },\n              \"description\":\"The configuration properties.\",\n
    \             \"readOnly\":true,\n              \"type\":\"object\"\n           },\n
    \          \"defaultValue\":{\n              \"description\":\"The default value
    of the field.\",\n              \"readOnly\":true\n           },\n           \"hasDefaultValue\":{\n
    \             \"description\":\"Whether the field has a default value.\",\n              \"readOnly\":true,\n
    \             \"type\":\"boolean\"\n           },\n           \"key\":{\n              \"description\":\"The
    key of the field.\",\n              \"readOnly\":true,\n              \"type\":\"string\"\n
    \          },\n           \"name\":{\n              \"description\":\"The name
    of the field.\",\n              \"readOnly\":true,\n              \"type\":\"string\"\n
    \          },\n           \"operations\":{\n              \"description\":\"The
    list of operations that can be performed on the field.\",\n              \"items\":{\n
    \                \"readOnly\":true,\n                 \"type\":\"string\"\n              },\n
    \             \"readOnly\":true,\n              \"type\":\"array\"\n           },\n
    \          \"required\":{\n              \"description\":\"Whether the field is
    required.\",\n              \"readOnly\":true,\n              \"type\":\"boolean\"\n
    \          },\n           \"schema\":{\n              \"allOf\":[\n                 {\n
    \                   \"$ref\":\"#/components/schemas/JsonTypeBean\"\n                 }\n
    \             ],\n              \"description\":\"The data type of the field.\",\n
    \             \"readOnly\":true\n           }\n        },\n        \"required\":[\n
    \          \"key\",\n           \"name\",\n           \"operations\",\n           \"required\",\n
    \          \"schema\"\n        ],\n        \"type\":\"object\",\n        \"xml\":{\n
    \          \"name\":\"availableField\"\n        }\n     },\n     \"JsonTypeBean\":{\n
    \       \"additionalProperties\":false,\n        \"description\":\"The schema
    of a field.\",\n        \"properties\":{\n           \"configuration\":{\n              \"additionalProperties\":{\n
    \                \"readOnly\":true\n              },\n              \"description\":\"If
    the field is a custom field, the configuration of the field.\",\n              \"readOnly\":true,\n
    \             \"type\":\"object\"\n           },\n           \"custom\":{\n              \"description\":\"If
    the field is a custom field, the URI of the field.\",\n              \"readOnly\":true,\n
    \             \"type\":\"string\"\n           },\n           \"customId\":{\n
    \             \"description\":\"If the field is a custom field, the custom ID
    of the field.\",\n              \"format\":\"int64\",\n              \"readOnly\":true,\n
    \             \"type\":\"integer\"\n           },\n           \"items\":{\n              \"description\":\"When
    the data type is an array, the name of the field items within the array.\",\n
    \             \"readOnly\":true,\n              \"type\":\"string\"\n           },\n
    \          \"system\":{\n              \"description\":\"If the field is a system
    field, the name of the field.\",\n              \"readOnly\":true,\n              \"type\":\"string\"\n
    \          },\n           \"type\":{\n              \"description\":\"The data
    type of the field.\",\n              \"readOnly\":true,\n              \"type\":\"string\"\n
    \          }\n        },\n        \"required\":[\n           \"type\"\n        ],\n
    \       \"type\":\"object\"\n     },\n     \"IncludedFields\":{\n        \"additionalProperties\":false,\n
    \       \"properties\":{\n           \"actuallyIncluded\":{\n              \"items\":{\n
    \                \"type\":\"string\"\n              },\n              \"type\":\"array\",\n
    \             \"uniqueItems\":true\n           },\n           \"excluded\":{\n
    \             \"items\":{\n                 \"type\":\"string\"\n              },\n
    \             \"type\":\"array\",\n              \"uniqueItems\":true\n           },\n
    \          \"included\":{\n              \"items\":{\n                 \"type\":\"string\"\n
    \             },\n              \"type\":\"array\",\n              \"uniqueItems\":true\n
    \          }\n        },\n        \"type\":\"object\"\n     },\n     \"Operations\":{\n
    \       \"additionalProperties\":true,\n        \"description\":\"Details of the
    operations that can be performed on the issue.\",\n        \"properties\":{\n
    \          \"linkGroups\":{\n              \"description\":\"Details of the link
    groups defining issue operations.\",\n              \"items\":{\n                 \"$ref\":\"#/components/schemas/LinkGroup\"\n
    \             },\n              \"readOnly\":true,\n              \"type\":\"array\"\n
    \          }\n        },\n        \"type\":\"object\"\n     },\n     \"LinkGroup\":{\n
    \       \"additionalProperties\":false,\n        \"description\":\"Details a link
    group, which defines issue operations.\",\n        \"properties\":{\n           \"groups\":{\n
    \             \"items\":{\n                 \"$ref\":\"#/components/schemas/LinkGroup\"\n
    \             },\n              \"type\":\"array\"\n           },\n           \"header\":{\n
    \             \"$ref\":\"#/components/schemas/SimpleLink\"\n           },\n           \"id\":{\n
    \             \"type\":\"string\"\n           },\n           \"links\":{\n              \"items\":{\n
    \                \"$ref\":\"#/components/schemas/SimpleLink\"\n              },\n
    \             \"type\":\"array\"\n           },\n           \"styleClass\":{\n
    \             \"type\":\"string\"\n           },\n           \"weight\":{\n              \"format\":\"int32\",\n
    \             \"type\":\"integer\"\n           }\n        },\n        \"type\":\"object\"\n
    \    },\n     \"SimpleLink\":{\n        \"additionalProperties\":false,\n        \"description\":\"Details
    about the operations available in this version.\",\n        \"properties\":{\n
    \          \"href\":{\n              \"type\":\"string\"\n           },\n           \"iconClass\":{\n
    \             \"type\":\"string\"\n           },\n           \"id\":{\n              \"type\":\"string\"\n
    \          },\n           \"label\":{\n              \"type\":\"string\"\n           },\n
    \          \"styleClass\":{\n              \"type\":\"string\"\n           },\n
    \          \"title\":{\n              \"type\":\"string\"\n           },\n           \"weight\":{\n
    \             \"format\":\"int32\",\n              \"type\":\"integer\"\n           }\n
    \       },\n        \"type\":\"object\",\n        \"xml\":{\n           \"name\":\"link\"\n
    \       }\n     },\n     \"IssueTransition\":{\n        \"additionalProperties\":true,\n
    \       \"description\":\"Details of an issue transition.\",\n        \"properties\":{\n
    \          \"expand\":{\n              \"description\":\"Expand options that include
    additional transition details in the response.\",\n              \"readOnly\":true,\n
    \             \"type\":\"string\"\n           },\n           \"fields\":{\n              \"additionalProperties\":{\n
    \                \"$ref\":\"#/components/schemas/FieldMetadata\"\n              },\n
    \             \"description\":\"Details of the fields associated with the issue
    transition screen. Use this information to populate `fields` and `update` in a
    transition request.\",\n              \"readOnly\":true,\n              \"type\":\"object\"\n
    \          },\n           \"hasScreen\":{\n              \"description\":\"Whether
    there is a screen associated with the issue transition.\",\n              \"readOnly\":true,\n
    \             \"type\":\"boolean\"\n           },\n           \"id\":{\n              \"description\":\"The
    ID of the issue transition. Required when specifying a transition to undertake.\",\n
    \             \"type\":\"string\"\n           },\n           \"isAvailable\":{\n
    \             \"description\":\"Whether the transition is available to be performed.\",\n
    \             \"readOnly\":true,\n              \"type\":\"boolean\"\n           },\n
    \          \"isConditional\":{\n              \"description\":\"Whether the issue
    has to meet criteria before the issue transition is applied.\",\n              \"readOnly\":true,\n
    \             \"type\":\"boolean\"\n           },\n           \"isGlobal\":{\n
    \             \"description\":\"Whether the issue transition is global, that is,
    the transition is applied to issues regardless of their status.\",\n              \"readOnly\":true,\n
    \             \"type\":\"boolean\"\n           },\n           \"isInitial\":{\n
    \             \"description\":\"Whether this is the initial issue transition for
    the workflow.\",\n              \"readOnly\":true,\n              \"type\":\"boolean\"\n
    \          },\n           \"looped\":{\n              \"type\":\"boolean\"\n           },\n
    \          \"name\":{\n              \"description\":\"The name of the issue transition.\",\n
    \             \"readOnly\":true,\n              \"type\":\"string\"\n           },\n
    \          \"to\":{\n              \"allOf\":[\n                 {\n                    \"$ref\":\"#/components/schemas/StatusDetails\"\n
    \                }\n              ],\n              \"description\":\"Details
    of the issue status after the transition.\",\n              \"readOnly\":true\n
    \          }\n        },\n        \"type\":\"object\"\n     },\n     \"StatusDetails\":{\n
    \       \"additionalProperties\":true,\n        \"description\":\"A status.\",\n
    \       \"properties\":{\n           \"description\":{\n              \"description\":\"The
    description of the status.\",\n              \"readOnly\":true,\n              \"type\":\"string\"\n
    \          },\n           \"iconUrl\":{\n              \"description\":\"The URL
    of the icon used to represent the status.\",\n              \"readOnly\":true,\n
    \             \"type\":\"string\"\n           },\n           \"id\":{\n              \"description\":\"The
    ID of the status.\",\n              \"readOnly\":true,\n              \"type\":\"string\"\n
    \          },\n           \"name\":{\n              \"description\":\"The name
    of the status.\",\n              \"readOnly\":true,\n              \"type\":\"string\"\n
    \          },\n           \"scope\":{\n              \"allOf\":[\n                 {\n
    \                   \"$ref\":\"#/components/schemas/Scope\"\n                 }\n
    \             ],\n              \"description\":\"The scope of the field.\",\n
    \             \"readOnly\":true\n           },\n           \"self\":{\n              \"description\":\"The
    URL of the status.\",\n              \"readOnly\":true,\n              \"type\":\"string\"\n
    \          },\n           \"statusCategory\":{\n              \"allOf\":[\n                 {\n
    \                   \"$ref\":\"#/components/schemas/StatusCategory\"\n                 }\n
    \             ],\n              \"description\":\"The category assigned to the
    status.\",\n              \"readOnly\":true\n           }\n        },\n        \"type\":\"object\"\n
    \    },\n     \"StatusCategory\":{\n        \"additionalProperties\":true,\n        \"description\":\"A
    status category.\",\n        \"properties\":{\n           \"colorName\":{\n              \"description\":\"The
    name of the color used to represent the status category.\",\n              \"readOnly\":true,\n
    \             \"type\":\"string\"\n           },\n           \"id\":{\n              \"description\":\"The
    ID of the status category.\",\n              \"format\":\"int64\",\n              \"readOnly\":true,\n
    \             \"type\":\"integer\"\n           },\n           \"key\":{\n              \"description\":\"The
    key of the status category.\",\n              \"readOnly\":true,\n              \"type\":\"string\"\n
    \          },\n           \"name\":{\n              \"description\":\"The name
    of the status category.\",\n              \"readOnly\":true,\n              \"type\":\"string\"\n
    \          },\n           \"self\":{\n              \"description\":\"The URL
    of the status category.\",\n              \"readOnly\":true,\n              \"type\":\"string\"\n
    \          }\n        },\n        \"type\":\"object\"\n     },\n     \"ProjectDetails\":{\n
    \       \"additionalProperties\":false,\n        \"description\":\"Details about
    a project.\",\n        \"properties\":{\n           \"avatarUrls\":{\n              \"allOf\":[\n
    \                {\n                    \"$ref\":\"#/components/schemas/AvatarUrlsBean\"\n
    \                }\n              ],\n              \"description\":\"The URLs
    of the project's avatars.\",\n              \"readOnly\":true\n           },\n
    \          \"id\":{\n              \"description\":\"The ID of the project.\",\n
    \             \"type\":\"string\"\n           },\n           \"key\":{\n              \"description\":\"The
    key of the project.\",\n              \"readOnly\":true,\n              \"type\":\"string\"\n
    \          },\n           \"name\":{\n              \"description\":\"The name
    of the project.\",\n              \"readOnly\":true,\n              \"type\":\"string\"\n
    \          },\n           \"projectCategory\":{\n              \"allOf\":[\n                 {\n
    \                   \"$ref\":\"#/components/schemas/UpdatedProjectCategory\"\n
    \                }\n              ],\n              \"description\":\"The category
    the project belongs to.\",\n              \"readOnly\":true\n           },\n           \"projectTypeKey\":{\n
    \             \"description\":\"The [project type](https://confluence.atlassian.com/x/GwiiLQ#Jiraapplicationsoverview-Productfeaturesandprojecttypes)
    of the project.\",\n              \"enum\":[\n                 \"software\",\n
    \                \"service_desk\",\n                 \"business\"\n              ],\n
    \             \"readOnly\":true,\n              \"type\":\"string\"\n           },\n
    \          \"self\":{\n              \"description\":\"The URL of the project
    details.\",\n              \"readOnly\":true,\n              \"type\":\"string\"\n
    \          },\n           \"simplified\":{\n              \"description\":\"Whether
    or not the project is simplified.\",\n              \"readOnly\":true,\n              \"type\":\"boolean\"\n
    \          }\n        },\n        \"type\":\"object\"\n     },\n     \"UpdatedProjectCategory\":{\n
    \       \"additionalProperties\":false,\n        \"description\":\"A project category.\",\n
    \       \"properties\":{\n           \"description\":{\n              \"description\":\"The
    name of the project category.\",\n              \"readOnly\":true,\n              \"type\":\"string\"\n
    \          },\n           \"id\":{\n              \"description\":\"The ID of
    the project category.\",\n              \"readOnly\":true,\n              \"type\":\"string\"\n
    \          },\n           \"name\":{\n              \"description\":\"The description
    of the project category.\",\n              \"readOnly\":true,\n              \"type\":\"string\"\n
    \          },\n           \"self\":{\n              \"description\":\"The URL
    of the project category.\",\n              \"readOnly\":true,\n              \"type\":\"string\"\n
    \          }\n        },\n        \"type\":\"object\"\n     },\n     \"Scope\":{\n
    \       \"additionalProperties\":true,\n        \"description\":\"The projects
    the item is associated with. Indicated for items associated with [next-gen projects](https://confluence.atlassian.com/x/loMyO).\",\n
    \       \"properties\":{\n           \"project\":{\n              \"allOf\":[\n
    \                {\n                    \"$ref\":\"#/components/schemas/ProjectDetails\"\n
    \                }\n              ],\n              \"description\":\"The project
    the item has scope in.\",\n              \"readOnly\":true\n           },\n           \"type\":{\n
    \             \"description\":\"The type of scope.\",\n              \"enum\":[\n
    \                \"PROJECT\",\n                 \"TEMPLATE\"\n              ],\n
    \             \"readOnly\":true,\n              \"type\":\"string\"\n           }\n
    \       },\n        \"type\":\"object\"\n     },\n     \"EntityProperty\":{\n
    \       \"additionalProperties\":false,\n        \"description\":\"An entity property,
    for more information see [Entity properties](https://developer.atlassian.com/cloud/jira/platform/jira-entity-properties/).\",\n
    \       \"properties\":{\n           \"key\":{\n              \"description\":\"The
    key of the property. Required on create and update.\",\n              \"type\":\"string\"\n
    \          },\n           \"value\":{\n              \"description\":\"The value
    of the property. Required on create and update.\"\n           }\n        },\n
    \       \"type\":\"object\"\n     },\n     \"FieldUpdateOperation\":{\n        \"additionalProperties\":false,\n
    \       \"description\":\"Details of an operation to perform on a field.\",\n
    \       \"properties\":{\n           \"add\":{\n              \"description\":\"The
    value to add to the field.\",\n              \"example\":\"triaged\"\n           },\n
    \          \"copy\":{\n              \"description\":\"The field value to copy
    from another issue.\",\n              \"example\":{\n                 \"issuelinks\":{\n
    \                   \"sourceIssues\":[\n                       {\n                          \"key\":\"FP-5\"\n
    \                      }\n                    ]\n                 }\n              }\n
    \          },\n           \"edit\":{\n              \"description\":\"The value
    to edit in the field.\",\n              \"example\":{\n                 \"originalEstimate\":\"1w
    1d\",\n                 \"remainingEstimate\":\"4d\"\n              }\n           },\n
    \          \"remove\":{\n              \"description\":\"The value to removed
    from the field.\",\n              \"example\":\"blocker\"\n           },\n           \"set\":{\n
    \             \"description\":\"The value to set in the field.\",\n              \"example\":\"A
    new summary\"\n           }\n        },\n        \"type\":\"object\"\n     },\n
    \    \"IssueUpdateDetails\":{\n        \"additionalProperties\":true,\n        \"description\":\"Details
    of an issue update request.\",\n        \"properties\":{\n           \"fields\":{\n
    \             \"additionalProperties\":{\n                 \n              },\n
    \             \"description\":\"List of issue screen fields to update, specifying
    the sub-field to update and its value for each field. This field provides a straightforward
    option when setting a sub-field. When multiple sub-fields or other operations
    are required, use `update`. Fields included in here cannot be included in `update`.\",\n
    \             \"type\":\"object\"\n           },\n           \"historyMetadata\":{\n
    \             \"allOf\":[\n                 {\n                    \"$ref\":\"#/components/schemas/HistoryMetadata\"\n
    \                }\n              ],\n              \"description\":\"Additional
    issue history details.\"\n           },\n           \"properties\":{\n              \"description\":\"Details
    of issue properties to be add or update.\",\n              \"items\":{\n                 \"$ref\":\"#/components/schemas/EntityProperty\"\n
    \             },\n              \"type\":\"array\"\n           },\n           \"transition\":{\n
    \             \"allOf\":[\n                 {\n                    \"$ref\":\"#/components/schemas/IssueTransition\"\n
    \                }\n              ],\n              \"description\":\"Details
    of a transition. Required when performing a transition, optional when creating
    or editing an issue.\"\n           },\n           \"update\":{\n              \"additionalProperties\":{\n
    \                \"items\":{\n                    \"$ref\":\"#/components/schemas/FieldUpdateOperation\"\n
    \                },\n                 \"type\":\"array\"\n              },\n              \"description\":\"A
    Map containing the field field name and a list of operations to perform on the
    issue screen field. Note that fields included in here cannot be included in `fields`.\",\n
    \             \"type\":\"object\"\n           }\n        },\n        \"type\":\"object\"\n
    \    },\n     \"IssueBean\":{\n        \"additionalProperties\":false,\n        \"description\":\"Details
    about an issue.\",\n        \"properties\":{\n           \"changelog\":{\n              \"allOf\":[\n
    \                {\n                    \"$ref\":\"#/components/schemas/PageOfChangelogs\"\n
    \                }\n              ],\n              \"description\":\"Details
    of changelogs associated with the issue.\",\n              \"readOnly\":true\n
    \          },\n           \"editmeta\":{\n              \"allOf\":[\n                 {\n
    \                   \"$ref\":\"#/components/schemas/IssueUpdateMetadata\"\n                 }\n
    \             ],\n              \"description\":\"The metadata for the fields
    on the issue that can be amended.\",\n              \"readOnly\":true\n           },\n
    \          \"expand\":{\n              \"description\":\"Expand options that include
    additional issue details in the response.\",\n              \"readOnly\":true,\n
    \             \"type\":\"string\",\n              \"xml\":{\n                 \"attribute\":true\n
    \             }\n           },\n           \"fields\":{\n              \"additionalProperties\":{\n
    \                \n              },\n              \"type\":\"object\"\n           },\n
    \          \"fieldsToInclude\":{\n              \"$ref\":\"#/components/schemas/IncludedFields\"\n
    \          },\n           \"id\":{\n              \"description\":\"The ID of
    the issue.\",\n              \"readOnly\":true,\n              \"type\":\"string\"\n
    \          },\n           \"key\":{\n              \"description\":\"The key of
    the issue.\",\n              \"readOnly\":true,\n              \"type\":\"string\"\n
    \          },\n           \"names\":{\n              \"additionalProperties\":{\n
    \                \"readOnly\":true,\n                 \"type\":\"string\"\n              },\n
    \             \"description\":\"The ID and name of each field present on the issue.\",\n
    \             \"readOnly\":true,\n              \"type\":\"object\"\n           },\n
    \          \"operations\":{\n              \"allOf\":[\n                 {\n                    \"$ref\":\"#/components/schemas/Operations\"\n
    \                }\n              ],\n              \"description\":\"The operations
    that can be performed on the issue.\",\n              \"readOnly\":true\n           },\n
    \          \"properties\":{\n              \"additionalProperties\":{\n                 \"readOnly\":true\n
    \             },\n              \"description\":\"Details of the issue properties
    identified in the request.\",\n              \"readOnly\":true,\n              \"type\":\"object\"\n
    \          },\n           \"renderedFields\":{\n              \"additionalProperties\":{\n
    \                \"readOnly\":true\n              },\n              \"description\":\"The
    rendered value of each field present on the issue.\",\n              \"readOnly\":true,\n
    \             \"type\":\"object\"\n           },\n           \"schema\":{\n              \"additionalProperties\":{\n
    \                \"$ref\":\"#/components/schemas/JsonTypeBean\"\n              },\n
    \             \"description\":\"The schema describing each field present on the
    issue.\",\n              \"readOnly\":true,\n              \"type\":\"object\"\n
    \          },\n           \"self\":{\n              \"description\":\"The URL
    of the issue details.\",\n              \"format\":\"uri\",\n              \"readOnly\":true,\n
    \             \"type\":\"string\"\n           },\n           \"transitions\":{\n
    \             \"description\":\"The transitions that can be performed on the issue.\",\n
    \             \"items\":{\n                 \"$ref\":\"#/components/schemas/IssueTransition\"\n
    \             },\n              \"readOnly\":true,\n              \"type\":\"array\"\n
    \          },\n           \"versionedRepresentations\":{\n              \"additionalProperties\":{\n
    \                \"additionalProperties\":{\n                    \"readOnly\":true\n
    \                },\n                 \"readOnly\":true,\n                 \"type\":\"object\"\n
    \             },\n              \"description\":\"The versions of each field on
    the issue.\",\n              \"readOnly\":true,\n              \"type\":\"object\"\n
    \          }\n        },\n        \"type\":\"object\",\n        \"xml\":{\n           \"name\":\"issue\"\n
    \       }\n     }\n    },\n    \"securitySchemes\": {\n      \"basicAuth\": {\n
    \       \"description\": \"You can access this resource via basic auth.\",\n        \"scheme\":
    \"basic\",\n        \"type\": \"http\"\n      }\n    }\n  }\n}"
  kubevirt-openapi.yaml: "openapi: 3.0.1\ninfo:\n  version: 1.2.0\n  title: KubeVirt
    API\n  description: This is KubeVirt API an add-on for Kubernetes.\n  contact:\n
    \   name: kubevirt-dev\n    url: https://github.com/kubevirt/kubevirt\n    email:
    kubevirt-dev@googlegroups.com\n  license:\n    name: Apache 2.0\n    url: https://www.apache.org/licenses/LICENSE-2.0\nservers:\n-
    url: /\npaths:\n  /apis/kubevirt.io/v1/namespaces/{namespace}/virtualmachines:\n
    \   post:\n      description: Create a VirtualMachine object.\n      operationId:
    createNamespacedVirtualMachine\n      parameters:\n      - name: namespace\n        in:
    path\n        description: \"Object name and auth scope, such as for teams and
    projects\"\n        required: true\n        schema:\n          type: string\n
    \     requestBody:\n        content:\n          application/json:\n            schema:\n
    \             $ref: '#/components/schemas/v1.VirtualMachine'\n          application/yaml:\n
    \           schema:\n              $ref: '#/components/schemas/v1.VirtualMachine'\n
    \       required: true\n      responses:\n        \"200\":\n          description:
    OK\n          content:\n            application/json:\n              schema:\n
    \               $ref: '#/components/schemas/v1.VirtualMachine'\n            application/yaml:\n
    \             schema:\n                $ref: '#/components/schemas/v1.VirtualMachine'\n
    \       \"201\":\n          description: Created\n          content:\n            application/json:\n
    \             schema:\n                $ref: '#/components/schemas/v1.VirtualMachine'\n
    \           application/yaml:\n              schema:\n                $ref: '#/components/schemas/v1.VirtualMachine'\n
    \       \"202\":\n          description: Accepted\n          content:\n            application/json:\n
    \             schema:\n                $ref: '#/components/schemas/v1.VirtualMachine'\n
    \           application/yaml:\n              schema:\n                $ref: '#/components/schemas/v1.VirtualMachine'\n
    \       \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n
    \             schema:\n                type: string\n            application/yaml:\n
    \             schema:\n                type: string\n      x-codegen-request-body-name:
    body\n      security:\n          - BearerToken: []\n  /apis/kubevirt.io/v1/namespaces/{namespace}/virtualmachines/{name}:\n
    \   get:\n      description: Get a VirtualMachine object.\n      operationId:
    readNamespacedVirtualMachine\n      parameters:\n      - name: name\n        in:
    path\n        description: Name of the resource\n        required: true\n        schema:\n
    \         type: string\n      - name: namespace\n        in: path\n        description:
    \"Object name and auth scope, such as for teams and projects\"\n        required:
    true\n        schema:\n          type: string\n      - name: exact\n        in:
    query\n        description: Should the export be exact. Exact export maintains
    cluster-specific\n          fields like 'Namespace'.\n        schema:\n          type:
    boolean\n      - name: export\n        in: query\n        description: Should
    this value be exported. Export strips fields that a user\n          can not specify.\n
    \       schema:\n          type: boolean\n      responses:\n        \"200\":\n
    \         description: OK\n          content:\n            application/json:\n
    \             schema:\n                $ref: '#/components/schemas/v1.VirtualMachine'\n
    \           application/yaml:\n              schema:\n                $ref: '#/components/schemas/v1.VirtualMachine'\n
    \           application/json;stream=watch:\n              schema:\n                $ref:
    '#/components/schemas/v1.VirtualMachine'\n        \"401\":\n          description:
    Unauthorized\n          content:\n            application/json:\n              schema:\n
    \               type: string\n            application/yaml:\n              schema:\n
    \               type: string\n            application/json;stream=watch:\n              schema:\n
    \               type: string\n      security:\n          - BearerToken: []\n    patch:\n
    \     description: Patch a VirtualMachine object.\n      operationId: patchNamespacedVirtualMachine\n
    \     parameters:\n      - name: name\n        in: path\n        description:
    Name of the resource\n        required: true\n        schema:\n          type:
    string\n      - name: namespace\n        in: path\n        description: \"Object
    name and auth scope, such as for teams and projects\"\n        required: true\n
    \       schema:\n          type: string\n      requestBody:\n        content:\n
    #         application/json-patch+json:\n #           schema:\n #             $ref:
    '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.Patch'\n          application/merge-patch+json:\n
    \           schema:\n              $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.Patch'\n
    \       required: true\n      responses:\n        \"200\":\n          description:
    OK\n          content:\n            application/json:\n              schema:\n
    \               $ref: '#/components/schemas/v1.VirtualMachine'\n        \"401\":\n
    \         description: Unauthorized\n          content:\n            application/json:\n
    \             schema:\n                type: string\n      x-codegen-request-body-name:
    body\n      security:\n          - BearerToken: [] \ncomponents:\n  schemas:\n
    \   k8s.io.api.core.v1.Affinity:\n      type: object\n      properties:\n        nodeAffinity:\n
    \         $ref: '#/components/schemas/k8s.io.api.core.v1.NodeAffinity'\n        podAffinity:\n
    \         $ref: '#/components/schemas/k8s.io.api.core.v1.PodAffinity'\n        podAntiAffinity:\n
    \         $ref: '#/components/schemas/k8s.io.api.core.v1.PodAntiAffinity'\n      description:
    Affinity is a group of affinity scheduling rules.\n    k8s.io.api.core.v1.DownwardAPIVolumeFile:\n
    \     required:\n      - path\n      type: object\n      properties:\n        fieldRef:\n
    \         $ref: '#/components/schemas/k8s.io.api.core.v1.ObjectFieldSelector'\n
    \       mode:\n          type: integer\n          description: \"Optional: mode
    bits used to set permissions on this file,\\\n            \\ must be an octal
    value between 0000 and 0777 or a decimal value between\\\n            \\ 0 and
    511. YAML accepts both octal and decimal values, JSON requires\\\n            \\
    decimal values for mode bits. If not specified, the volume defaultMode\\\n            \\
    will be used. This might be in conflict with other options that affect\\\n            \\
    the file mode, like fsGroup, and the result can be other mode bits set.\"\n          format:
    int32\n        path:\n          type: string\n          description: \"Required:
    Path is  the relative path name of the file to be\\\n            \\ created. Must
    not be absolute or contain the '..' path. Must be utf-8\\\n            \\ encoded.
    The first item of the relative path must not start with '..'\"\n          default:
    \"\"\n        resourceFieldRef:\n          $ref: '#/components/schemas/k8s.io.api.core.v1.ResourceFieldSelector'\n
    \     description: DownwardAPIVolumeFile represents information to create the
    file\n        containing the pod field\n    k8s.io.api.core.v1.ExecAction:\n      type:
    object\n      properties:\n        command:\n          type: array\n          description:
    \"Command is the command line to execute inside the container,\\\n            \\
    the working directory for the command  is root ('/') in the container's\\\n            \\
    filesystem. The command is simply exec'd, it is not run inside a shell,\\\n            \\
    so traditional shell instructions ('|', etc) won't work. To use a shell,\\\n            \\
    you need to explicitly call out to that shell. Exit status of 0 is treated\\\n
    \           \\ as live/healthy and non-zero is unhealthy.\"\n          items:\n
    \           type: string\n            default: \"\"\n      description: ExecAction
    describes a \"run in container\" action.\n    k8s.io.api.core.v1.HTTPGetAction:\n
    \     type: object\n      properties:\n        host:\n          type: string\n
    \         description: \"Host name to connect to, defaults to the pod IP. You
    probably\\\n            \\ want to set \\\"Host\\\" in httpHeaders instead.\"\n
    \       httpHeaders:\n          type: array\n          description: Custom headers
    to set in the request. HTTP allows repeated\n            headers.\n          items:\n
    \           $ref: '#/components/schemas/k8s.io.api.core.v1.HTTPHeader'\n        path:\n
    \         type: string\n          description: Path to access on the HTTP server.\n
    \       scheme:\n          type: string\n          description: |-\n            Scheme
    to use for connecting to the host. Defaults to HTTP.\n\n            Possible enum
    values:\n             - `\"HTTP\"` means that the scheme used will be http://\n
    \            - `\"HTTPS\"` means that the scheme used will be https://\n          enum:\n
    \         - HTTP\n          - HTTPS\n      description: HTTPGetAction describes
    an action based on HTTP Get requests.\n    k8s.io.api.core.v1.HTTPHeader:\n      required:\n
    \     - name\n      - value\n      type: object\n      properties:\n        name:\n
    \         type: string\n          description: The header field name\n          default:
    \"\"\n        value:\n          type: string\n          description: The header
    field value\n          default: \"\"\n      description: HTTPHeader describes
    a custom header to be used in HTTP probes\n    k8s.io.api.core.v1.LocalObjectReference:\n
    \     type: object\n      properties:\n        name:\n          type: string\n
    \         description: \"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"\n
    \     description: LocalObjectReference contains enough information to let you
    locate\n        the referenced object inside the same namespace.\n      x-kubernetes-map-type:
    atomic\n    k8s.io.api.core.v1.NodeAffinity:\n      type: object\n      properties:\n
    \       preferredDuringSchedulingIgnoredDuringExecution:\n          type: array\n
    \         description: \"The scheduler will prefer to schedule pods to nodes that
    satisfy\\\n            \\ the affinity expressions specified by this field, but
    it may choose\\\n            \\ a node that violates one or more of the expressions.
    The node that is\\\n            \\ most preferred is the one with the greatest
    sum of weights, i.e. for\\\n            \\ each node that meets all of the scheduling
    requirements (resource request,\\\n            \\ requiredDuringScheduling affinity
    expressions, etc.), compute a sum\\\n            \\ by iterating through the elements
    of this field and adding \\\"weight\\\"\\\n            \\ to the sum if the node
    matches the corresponding matchExpressions; the\\\n            \\ node(s) with
    the highest sum are the most preferred.\"\n          items:\n            $ref:
    '#/components/schemas/k8s.io.api.core.v1.PreferredSchedulingTerm'\n        requiredDuringSchedulingIgnoredDuringExecution:\n
    \         $ref: '#/components/schemas/k8s.io.api.core.v1.NodeSelector'\n      description:
    Node affinity is a group of node affinity scheduling rules.\n    k8s.io.api.core.v1.NodeSelector:\n
    \     required:\n      - nodeSelectorTerms\n      type: object\n      properties:\n
    \       nodeSelectorTerms:\n          type: array\n          description: Required.
    A list of node selector terms. The terms are ORed.\n          items:\n            $ref:
    '#/components/schemas/k8s.io.api.core.v1.NodeSelectorTerm'\n      description:
    \"A node selector represents the union of the results of one or\\\n        \\
    more label queries over a set of nodes; that is, it represents the OR of\\\n        \\
    the selectors represented by the node selector terms.\"\n      x-kubernetes-map-type:
    atomic\n    k8s.io.api.core.v1.NodeSelectorRequirement:\n      required:\n      -
    key\n      - operator\n      type: object\n      properties:\n        key:\n          type:
    string\n          description: The label key that the selector applies to.\n          default:
    \"\"\n        operator:\n          type: string\n          description: |-\n            Represents
    a key's relationship to a set of values. Valid operators are In, NotIn, Exists,
    DoesNotExist. Gt, and Lt.\n\n            Possible enum values:\n             -
    `\"DoesNotExist\"`\n             - `\"Exists\"`\n             - `\"Gt\"`\n             -
    `\"In\"`\n             - `\"Lt\"`\n             - `\"NotIn\"`\n          default:
    \"\"\n          enum:\n          - DoesNotExist\n          - Exists\n          -
    Gt\n          - In\n          - Lt\n          - NotIn\n        values:\n          type:
    array\n          description: \"An array of string values. If the operator is
    In or NotIn,\\\n            \\ the values array must be non-empty. If the operator
    is Exists or DoesNotExist,\\\n            \\ the values array must be empty. If
    the operator is Gt or Lt, the values\\\n            \\ array must have a single
    element, which will be interpreted as an integer.\\\n            \\ This array
    is replaced during a strategic merge patch.\"\n          items:\n            type:
    string\n            default: \"\"\n      description: \"A node selector requirement
    is a selector that contains values,\\\n        \\ a key, and an operator that
    relates the key and values.\"\n    k8s.io.api.core.v1.NodeSelectorTerm:\n      type:
    object\n      properties:\n        matchExpressions:\n          type: array\n
    \         description: A list of node selector requirements by node's labels.\n
    \         items:\n            $ref: '#/components/schemas/k8s.io.api.core.v1.NodeSelectorRequirement'\n
    \       matchFields:\n          type: array\n          description: A list of
    node selector requirements by node's fields.\n          items:\n            $ref:
    '#/components/schemas/k8s.io.api.core.v1.NodeSelectorRequirement'\n      description:
    A null or empty node selector term matches no objects. The requirements\n        of
    them are ANDed. The TopologySelectorTerm type implements a subset of the\n        NodeSelectorTerm.\n
    \     x-kubernetes-map-type: atomic\n    k8s.io.api.core.v1.ObjectFieldSelector:\n
    \     required:\n      - fieldPath\n      type: object\n      properties:\n        apiVersion:\n
    \         type: string\n          description: \"Version of the schema the FieldPath
    is written in terms of,\\\n            \\ defaults to \\\"v1\\\".\"\n        fieldPath:\n
    \         type: string\n          description: Path of the field to select in
    the specified API version.\n          default: \"\"\n      description: ObjectFieldSelector
    selects an APIVersioned field of an object.\n      x-kubernetes-map-type: atomic\n
    \   k8s.io.api.core.v1.PersistentVolumeClaimSpec:\n      type: object\n      properties:\n
    \       accessModes:\n          type: array\n          description: \"accessModes
    contains the desired access modes the volume should\\\n            \\ have. More
    info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1\"\n
    \         items:\n            type: string\n            default: \"\"\n        dataSource:\n
    \         $ref: '#/components/schemas/k8s.io.api.core.v1.TypedLocalObjectReference'\n
    \       dataSourceRef:\n          $ref: '#/components/schemas/k8s.io.api.core.v1.TypedObjectReference'\n
    \       resources:\n          $ref: '#/components/schemas/k8s.io.api.core.v1.ResourceRequirements'\n
    \       selector:\n          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector'\n
    \       storageClassName:\n          type: string\n          description: \"storageClassName
    is the name of the StorageClass required\\\n            \\ by the claim. More
    info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1\"\n
    \       volumeMode:\n          type: string\n          description: |-\n            volumeMode
    defines what type of volume is required by the claim. Value of Filesystem is implied
    when not included in claim spec.\n\n            Possible enum values:\n             -
    `\"Block\"` means the volume will not be formatted with a filesystem and will
    remain a raw block device.\n             - `\"Filesystem\"` means the volume will
    be or is formatted with a filesystem.\n          enum:\n          - Block\n          -
    Filesystem\n        volumeName:\n          type: string\n          description:
    volumeName is the binding reference to the PersistentVolume\n            backing
    this claim.\n      description: PersistentVolumeClaimSpec describes the common
    attributes of storage\n        devices and allows a Source for provider-specific
    attributes\n    k8s.io.api.core.v1.PersistentVolumeClaimVolumeSource:\n      required:\n
    \     - claimName\n      type: object\n      properties:\n        claimName:\n
    \         type: string\n          description: \"claimName is the name of a PersistentVolumeClaim
    in the same\\\n            \\ namespace as the pod using this volume. More info:
    https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims\"\n
    \         default: \"\"\n        readOnly:\n          type: boolean\n          description:
    readOnly Will force the ReadOnly setting in VolumeMounts. Default\n            false.\n
    \     description: \"PersistentVolumeClaimVolumeSource references the user's PVC
    in\\\n        \\ the same namespace. This volume finds the bound PV and mounts
    that volume\\\n        \\ for the pod. A PersistentVolumeClaimVolumeSource is,
    essentially, a wrapper\\\n        \\ around another type of volume that is owned
    by someone else (the system).\"\n    k8s.io.api.core.v1.PodAffinity:\n      type:
    object\n      properties:\n        preferredDuringSchedulingIgnoredDuringExecution:\n
    \         type: array\n          description: \"The scheduler will prefer to schedule
    pods to nodes that satisfy\\\n            \\ the affinity expressions specified
    by this field, but it may choose\\\n            \\ a node that violates one or
    more of the expressions. The node that is\\\n            \\ most preferred is
    the one with the greatest sum of weights, i.e. for\\\n            \\ each node
    that meets all of the scheduling requirements (resource request,\\\n            \\
    requiredDuringScheduling affinity expressions, etc.), compute a sum\\\n            \\
    by iterating through the elements of this field and adding \\\"weight\\\"\\\n
    \           \\ to the sum if the node has pods which matches the corresponding
    podAffinityTerm;\\\n            \\ the node(s) with the highest sum are the most
    preferred.\"\n          items:\n            $ref: '#/components/schemas/k8s.io.api.core.v1.WeightedPodAffinityTerm'\n
    \       requiredDuringSchedulingIgnoredDuringExecution:\n          type: array\n
    \         description: \"If the affinity requirements specified by this field
    are not\\\n            \\ met at scheduling time, the pod will not be scheduled
    onto the node.\\\n            \\ If the affinity requirements specified by this
    field cease to be met\\\n            \\ at some point during pod execution (e.g.
    due to a pod label update),\\\n            \\ the system may or may not try to
    eventually evict the pod from its node.\\\n            \\ When there are multiple
    elements, the lists of nodes corresponding to\\\n            \\ each podAffinityTerm
    are intersected, i.e. all terms must be satisfied.\"\n          items:\n            $ref:
    '#/components/schemas/k8s.io.api.core.v1.PodAffinityTerm'\n      description:
    Pod affinity is a group of inter pod affinity scheduling rules.\n    k8s.io.api.core.v1.PodAffinityTerm:\n
    \     required:\n      - topologyKey\n      type: object\n      properties:\n
    \       labelSelector:\n          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector'\n
    \       namespaceSelector:\n          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector'\n
    \       namespaces:\n          type: array\n          description: namespaces
    specifies a static list of namespace names that\n            the term applies
    to. The term is applied to the union of the namespaces\n            listed in
    this field and the ones selected by namespaceSelector. null\n            or empty
    namespaces list and null namespaceSelector means \"this pod's\n            namespace\".\n
    \         items:\n            type: string\n            default: \"\"\n        topologyKey:\n
    \         type: string\n          description: \"This pod should be co-located
    (affinity) or not co-located\\\n            \\ (anti-affinity) with the pods matching
    the labelSelector in the specified\\\n            \\ namespaces, where co-located
    is defined as running on a node whose value\\\n            \\ of the label with
    key topologyKey matches that of any node on which\\\n            \\ any of the
    selected pods is running. Empty topologyKey is not allowed.\"\n          default:
    \"\"\n      description: \"Defines a set of pods (namely those matching the labelSelector\\\n
    \       \\ relative to the given namespace(s)) that this pod should be co-located
    (affinity)\\\n        \\ or not co-located (anti-affinity) with, where co-located
    is defined as running\\\n        \\ on a node whose value of the label with key
    <topologyKey> matches that of\\\n        \\ any node on which a pod of the set
    of pods is running\"\n    k8s.io.api.core.v1.PodAntiAffinity:\n      type: object\n
    \     properties:\n        preferredDuringSchedulingIgnoredDuringExecution:\n
    \         type: array\n          description: \"The scheduler will prefer to schedule
    pods to nodes that satisfy\\\n            \\ the anti-affinity expressions specified
    by this field, but it may choose\\\n            \\ a node that violates one or
    more of the expressions. The node that is\\\n            \\ most preferred is
    the one with the greatest sum of weights, i.e. for\\\n            \\ each node
    that meets all of the scheduling requirements (resource request,\\\n            \\
    requiredDuringScheduling anti-affinity expressions, etc.), compute a\\\n            \\
    sum by iterating through the elements of this field and adding \\\"weight\\\"\\\n
    \           \\ to the sum if the node has pods which matches the corresponding
    podAffinityTerm;\\\n            \\ the node(s) with the highest sum are the most
    preferred.\"\n          items:\n            $ref: '#/components/schemas/k8s.io.api.core.v1.WeightedPodAffinityTerm'\n
    \       requiredDuringSchedulingIgnoredDuringExecution:\n          type: array\n
    \         description: \"If the anti-affinity requirements specified by this field\\\n
    \           \\ are not met at scheduling time, the pod will not be scheduled onto
    the\\\n            \\ node. If the anti-affinity requirements specified by this
    field cease\\\n            \\ to be met at some point during pod execution (e.g.
    due to a pod label\\\n            \\ update), the system may or may not try to
    eventually evict the pod from\\\n            \\ its node. When there are multiple
    elements, the lists of nodes corresponding\\\n            \\ to each podAffinityTerm
    are intersected, i.e. all terms must be satisfied.\"\n          items:\n            $ref:
    '#/components/schemas/k8s.io.api.core.v1.PodAffinityTerm'\n      description:
    Pod anti affinity is a group of inter pod anti affinity scheduling\n        rules.\n
    \   k8s.io.api.core.v1.PodDNSConfig:\n      type: object\n      properties:\n
    \       nameservers:\n          type: array\n          description: A list of
    DNS name server IP addresses. This will be appended\n            to the base nameservers
    generated from DNSPolicy. Duplicated nameservers\n            will be removed.\n
    \         items:\n            type: string\n            default: \"\"\n        options:\n
    \         type: array\n          description: A list of DNS resolver options.
    This will be merged with the\n            base options generated from DNSPolicy.
    Duplicated entries will be removed.\n            Resolution options given in Options
    will override those that appear in\n            the base DNSPolicy.\n          items:\n
    \           $ref: '#/components/schemas/k8s.io.api.core.v1.PodDNSConfigOption'\n
    \       searches:\n          type: array\n          description: A list of DNS
    search domains for host-name lookup. This will\n            be appended to the
    base search paths generated from DNSPolicy. Duplicated\n            search paths
    will be removed.\n          items:\n            type: string\n            default:
    \"\"\n      description: PodDNSConfig defines the DNS parameters of a pod in addition
    to\n        those generated from DNSPolicy.\n    k8s.io.api.core.v1.PodDNSConfigOption:\n
    \     type: object\n      properties:\n        name:\n          type: string\n
    \         description: Required.\n        value:\n          type: string\n      description:
    PodDNSConfigOption defines DNS resolver options of a pod.\n    k8s.io.api.core.v1.PreferredSchedulingTerm:\n
    \     required:\n      - preference\n      - weight\n      type: object\n      properties:\n
    \       preference:\n          $ref: '#/components/schemas/k8s.io.api.core.v1.NodeSelectorTerm'\n
    \       weight:\n          type: integer\n          description: \"Weight associated
    with matching the corresponding nodeSelectorTerm,\\\n            \\ in the range
    1-100.\"\n          format: int32\n          default: 0\n      description: An
    empty preferred scheduling term matches all objects with implicit\n        weight
    0 (i.e. it's a no-op). A null preferred scheduling term matches no\n        objects
    (i.e. is also a no-op).\n    k8s.io.api.core.v1.ResourceClaim:\n      required:\n
    \     - name\n      type: object\n      properties:\n        name:\n          type:
    string\n          description: Name must match the name of one entry in pod.spec.resourceClaims\n
    \           of the Pod where this field is used. It makes that resource available\n
    \           inside a container.\n          default: \"\"\n      description: ResourceClaim
    references one entry in PodSpec.ResourceClaims.\n    k8s.io.api.core.v1.ResourceFieldSelector:\n
    \     required:\n      - resource\n      type: object\n      properties:\n        containerName:\n
    \         type: string\n          description: \"Container name: required for
    volumes, optional for env vars\"\n        divisor:\n          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.api.resource.Quantity'\n
    \       resource:\n          type: string\n          description: \"Required:
    resource to select\"\n          default: \"\"\n      description: \"ResourceFieldSelector
    represents container resources (cpu, memory)\\\n        \\ and their output format\"\n
    \     x-kubernetes-map-type: atomic\n    k8s.io.api.core.v1.ResourceRequirements:\n
    \     type: object\n      properties:\n        claims:\n          type: array\n
    \         description: |-\n            Claims lists the names of resources, defined
    in spec.resourceClaims, that are used by this container.\n\n            This is
    an alpha field and requires enabling the DynamicResourceAllocation feature gate.\n\n
    \           This field is immutable. It can only be set for containers.\n          items:\n
    \           $ref: '#/components/schemas/k8s.io.api.core.v1.ResourceClaim'\n          x-kubernetes-list-type:
    map\n          x-kubernetes-list-map-keys:\n          - name\n        limits:\n
    \         type: object\n          additionalProperties:\n            $ref: '#/components/schemas/k8s.io.apimachinery.pkg.api.resource.Quantity'\n
    \         description: \"Limits describes the maximum amount of compute resources
    allowed.\\\n            \\ More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/\"\n
    \       requests:\n          type: object\n          additionalProperties:\n            $ref:
    '#/components/schemas/k8s.io.apimachinery.pkg.api.resource.Quantity'\n          description:
    \"Requests describes the minimum amount of compute resources\\\n            \\
    required. If Requests is omitted for a container, it defaults to Limits\\\n            \\
    if that is explicitly specified, otherwise to an implementation-defined\\\n            \\
    value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/\"\n
    \     description: ResourceRequirements describes the compute resource requirements.\n
    \   k8s.io.api.core.v1.TCPSocketAction:\n      type: object\n      properties:\n
    \       host:\n          type: string\n          description: \"Optional: Host
    name to connect to, defaults to the pod IP.\"\n      description: TCPSocketAction
    describes an action based on opening a socket\n    k8s.io.api.core.v1.Toleration:\n
    \     type: object\n      properties:\n        effect:\n          type: string\n
    \         description: |-\n            Effect indicates the taint effect to match.
    Empty means match all taint effects. When specified, allowed values are NoSchedule,
    PreferNoSchedule and NoExecute.\n\n            Possible enum values:\n             -
    `\"NoExecute\"` Evict any already-running pods that do not tolerate the taint.
    Currently enforced by NodeController.\n             - `\"NoSchedule\"` Do not
    allow new pods to schedule onto the node unless they tolerate the taint, but allow
    all pods submitted to Kubelet without going through the scheduler to start, and
    allow all already-running pods to continue running. Enforced by the scheduler.\n
    \            - `\"PreferNoSchedule\"` Like TaintEffectNoSchedule, but the scheduler
    tries not to schedule new pods onto the node, rather than prohibiting new pods
    from scheduling onto the node entirely. Enforced by the scheduler.\n          enum:\n
    \         - NoExecute\n          - NoSchedule\n          - PreferNoSchedule\n
    \       key:\n          type: string\n          description: \"Key is the taint
    key that the toleration applies to. Empty\\\n            \\ means match all taint
    keys. If the key is empty, operator must be Exists;\\\n            \\ this combination
    means to match all values and all keys.\"\n        operator:\n          type:
    string\n          description: |-\n            Operator represents a key's relationship
    to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists
    is equivalent to wildcard for value, so that a pod can tolerate all taints of
    a particular category.\n\n            Possible enum values:\n             - `\"Equal\"`\n
    \            - `\"Exists\"`\n          enum:\n          - Equal\n          - Exists\n
    \       tolerationSeconds:\n          type: integer\n          description: \"TolerationSeconds
    represents the period of time the toleration\\\n            \\ (which must be
    of effect NoExecute, otherwise this field is ignored)\\\n            \\ tolerates
    the taint. By default, it is not set, which means tolerate\\\n            \\ the
    taint forever (do not evict). Zero and negative values will be treated\\\n            \\
    as 0 (evict immediately) by the system.\"\n          format: int64\n        value:\n
    \         type: string\n          description: \"Value is the taint value the
    toleration matches to. If the\\\n            \\ operator is Exists, the value
    should be empty, otherwise just a regular\\\n            \\ string.\"\n      description:
    \"The pod this Toleration is attached to tolerates any taint that\\\n        \\
    matches the triple <key,value,effect> using the matching operator <operator>.\"\n
    \   k8s.io.api.core.v1.TopologySpreadConstraint:\n      required:\n      - maxSkew\n
    \     - topologyKey\n      - whenUnsatisfiable\n      type: object\n      properties:\n
    \       labelSelector:\n          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector'\n
    \       matchLabelKeys:\n          type: array\n          description: \"MatchLabelKeys
    is a set of pod label keys to select the pods\\\n            \\ over which spreading
    will be calculated. The keys are used to lookup\\\n            \\ values from
    the incoming pod labels, those key-value labels are ANDed\\\n            \\ with
    labelSelector to select the group of existing pods over which spreading\\\n            \\
    will be calculated for the incoming pod. Keys that don't exist in the\\\n            \\
    incoming pod labels will be ignored. A null or empty list means only\\\n            \\
    match against labelSelector.\"\n          items:\n            type: string\n            default:
    \"\"\n          x-kubernetes-list-type: atomic\n        maxSkew:\n          type:
    integer\n          description: \"MaxSkew describes the degree to which pods may
    be unevenly\\\n            \\ distributed. When `whenUnsatisfiable=DoNotSchedule`,
    it is the maximum\\\n            \\ permitted difference between the number of
    matching pods in the target\\\n            \\ topology and the global minimum.
    The global minimum is the minimum number\\\n            \\ of matching pods in
    an eligible domain or zero if the number of eligible\\\n            \\ domains
    is less than MinDomains. For example, in a 3-zone cluster, MaxSkew\\\n            \\
    is set to 1, and pods with the same labelSelector spread as 2/2/1: In\\\n            \\
    this case, the global minimum is 1. | zone1 | zone2 | zone3 | |  P P\\\n            \\
    \ |  P P  |   P   | - if MaxSkew is 1, incoming pod can only be scheduled\\\n
    \           \\ to zone3 to become 2/2/2; scheduling it onto zone1(zone2) would
    make\\\n            \\ the ActualSkew(3-1) on zone1(zone2) violate MaxSkew(1).
    - if MaxSkew\\\n            \\ is 2, incoming pod can be scheduled onto any zone.
    When `whenUnsatisfiable=ScheduleAnyway`,\\\n            \\ it is used to give
    higher precedence to topologies that satisfy it.\\\n            \\ It's a required
    field. Default value is 1 and 0 is not allowed.\"\n          format: int32\n          default:
    0\n        minDomains:\n          type: integer\n          description: |-\n            MinDomains
    indicates a minimum number of eligible domains. When the number of eligible domains
    with matching topology keys is less than minDomains, Pod Topology Spread treats
    \"global minimum\" as 0, and then the calculation of Skew is performed. And when
    the number of eligible domains with matching topology keys equals or greater than
    minDomains, this value has no effect on scheduling. As a result, when the number
    of eligible domains is less than minDomains, scheduler won't schedule more than
    maxSkew Pods to those domains. If value is nil, the constraint behaves as if MinDomains
    is equal to 1. Valid values are integers greater than 0. When value is not nil,
    WhenUnsatisfiable must be DoNotSchedule.\n\n            For example, in a 3-zone
    cluster, MaxSkew is set to 2, MinDomains is set to 5 and pods with the same labelSelector
    spread as 2/2/2: | zone1 | zone2 | zone3 | |  P P  |  P P  |  P P  | The number
    of domains is less than 5(MinDomains), so \"global minimum\" is treated as 0.
    In this situation, new pod with the same labelSelector cannot be scheduled, because
    computed skew will be 3(3 - 0) if new Pod is scheduled to any of the three zones,
    it will violate MaxSkew.\n\n            This is a beta field and requires the
    MinDomainsInPodTopologySpread feature gate to be enabled (enabled by default).\n
    \         format: int32\n        nodeAffinityPolicy:\n          type: string\n
    \         description: |-\n            NodeAffinityPolicy indicates how we will
    treat Pod's nodeAffinity/nodeSelector when calculating pod topology spread skew.
    Options are: - Honor: only nodes matching nodeAffinity/nodeSelector are included
    in the calculations. - Ignore: nodeAffinity/nodeSelector are ignored. All nodes
    are included in the calculations.\n\n            If this value is nil, the behavior
    is equivalent to the Honor policy. This is a beta-level feature default enabled
    by the NodeInclusionPolicyInPodTopologySpread feature flag.\n\n            Possible
    enum values:\n             - `\"Honor\"` means use this scheduling directive when
    calculating pod topology spread skew.\n             - `\"Ignore\"` means ignore
    this scheduling directive when calculating pod topology spread skew.\n          enum:\n
    \         - Honor\n          - Ignore\n        nodeTaintsPolicy:\n          type:
    string\n          description: |-\n            NodeTaintsPolicy indicates how
    we will treat node taints when calculating pod topology spread skew. Options are:
    - Honor: nodes without taints, along with tainted nodes for which the incoming
    pod has a toleration, are included. - Ignore: node taints are ignored. All nodes
    are included.\n\n            If this value is nil, the behavior is equivalent
    to the Ignore policy. This is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread
    feature flag.\n\n            Possible enum values:\n             - `\"Honor\"`
    means use this scheduling directive when calculating pod topology spread skew.\n
    \            - `\"Ignore\"` means ignore this scheduling directive when calculating
    pod topology spread skew.\n          enum:\n          - Honor\n          - Ignore\n
    \       topologyKey:\n          type: string\n          description: \"TopologyKey
    is the key of node labels. Nodes that have a label\\\n            \\ with this
    key and identical values are considered to be in the same\\\n            \\ topology.
    We consider each <key, value> as a \\\"bucket\\\", and try to\\\n            \\
    put balanced number of pods into each bucket. We define a domain as\\\n            \\
    a particular instance of a topology. Also, we define an eligible domain\\\n            \\
    as a domain whose nodes meet the requirements of nodeAffinityPolicy\\\n            \\
    and nodeTaintsPolicy. e.g. If TopologyKey is \\\"kubernetes.io/hostname\\\"\\\n
    \           , each Node is a domain of that topology. And, if TopologyKey is \\\"topology.kubernetes.io/zone\\\"\\\n
    \           , each zone is a domain of that topology. It's a required field.\"\n
    \         default: \"\"\n        whenUnsatisfiable:\n          type: string\n
    \         description: |-\n            WhenUnsatisfiable indicates how to deal
    with a pod if it doesn't satisfy the spread constraint. - DoNotSchedule (default)
    tells the scheduler not to schedule it. - ScheduleAnyway tells the scheduler to
    schedule the pod in any location,\n              but giving higher precedence
    to topologies that would help reduce the\n              skew.\n            A constraint
    is considered \"Unsatisfiable\" for an incoming pod if and only if every possible
    node assignment for that pod would violate \"MaxSkew\" on some topology. For example,
    in a 3-zone cluster, MaxSkew is set to 1, and pods with the same labelSelector
    spread as 3/1/1: | zone1 | zone2 | zone3 | | P P P |   P   |   P   | If WhenUnsatisfiable
    is set to DoNotSchedule, incoming pod can only be scheduled to zone2(zone3) to
    become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3) satisfies MaxSkew(1). In
    other words, the cluster can still be imbalanced, but scheduler won't make it
    *more* imbalanced. It's a required field.\n\n            Possible enum values:\n
    \            - `\"DoNotSchedule\"` instructs the scheduler not to schedule the
    pod when constraints are not satisfied.\n             - `\"ScheduleAnyway\"` instructs
    the scheduler to schedule the pod even if constraints are not satisfied.\n          default:
    \"\"\n          enum:\n          - DoNotSchedule\n          - ScheduleAnyway\n
    \     description: TopologySpreadConstraint specifies how to spread matching pods\n
    \       among the given topology.\n    k8s.io.api.core.v1.TypedLocalObjectReference:\n
    \     required:\n      - kind\n      - name\n      type: object\n      properties:\n
    \       apiGroup:\n          type: string\n          description: \"APIGroup is
    the group for the resource being referenced. If\\\n            \\ APIGroup is
    not specified, the specified Kind must be in the core API\\\n            \\ group.
    For any other third-party types, APIGroup is required.\"\n        kind:\n          type:
    string\n          description: Kind is the type of resource being referenced\n
    \         default: \"\"\n        name:\n          type: string\n          description:
    Name is the name of resource being referenced\n          default: \"\"\n      description:
    TypedLocalObjectReference contains enough information to let you\n        locate
    the typed referenced object inside the same namespace.\n      x-kubernetes-map-type:
    atomic\n    k8s.io.api.core.v1.TypedObjectReference:\n      required:\n      -
    kind\n      - name\n      type: object\n      properties:\n        apiGroup:\n
    \         type: string\n          description: \"APIGroup is the group for the
    resource being referenced. If\\\n            \\ APIGroup is not specified, the
    specified Kind must be in the core API\\\n            \\ group. For any other
    third-party types, APIGroup is required.\"\n        kind:\n          type: string\n
    \         description: Kind is the type of resource being referenced\n          default:
    \"\"\n        name:\n          type: string\n          description: Name is the
    name of resource being referenced\n          default: \"\"\n        namespace:\n
    \         type: string\n          description: \"Namespace is the namespace of
    resource being referenced Note\\\n            \\ that when a namespace is specified,
    a gateway.networking.k8s.io/ReferenceGrant\\\n            \\ object is required
    in the referent namespace to allow that namespace's\\\n            \\ owner to
    accept the reference. See the ReferenceGrant documentation\\\n            \\ for
    details. (Alpha) This field requires the CrossNamespaceVolumeDataSource\\\n            \\
    feature gate to be enabled.\"\n    k8s.io.api.core.v1.WeightedPodAffinityTerm:\n
    \     required:\n      - podAffinityTerm\n      - weight\n      type: object\n
    \     properties:\n        podAffinityTerm:\n          $ref: '#/components/schemas/k8s.io.api.core.v1.PodAffinityTerm'\n
    \       weight:\n          type: integer\n          description: \"weight associated
    with matching the corresponding podAffinityTerm,\\\n            \\ in the range
    1-100.\"\n          format: int32\n          default: 0\n      description: The
    weights of all of the matched WeightedPodAffinityTerm fields\n        are added
    per-node to find the most preferred node(s)\n    k8s.io.apimachinery.pkg.api.resource.Quantity:\n
    \     type: string\n      description: \"Quantity is a fixed-point representation
    of a number. It provides\\\n        \\ convenient marshaling/unmarshaling in JSON
    and YAML, in addition to String()\\\n        \\ and AsInt64() accessors.\\n\\nThe
    serialization format is:\\n\\n``` <quantity>\\\n        \\        ::= <signedNumber><suffix>\\n\\n\\t(Note
    that <suffix> may be empty,\\\n        \\ from the \\\"\\\" case in <decimalSI>.)\\n\\n<digit>
    \          ::= 0 | 1 | ...\\\n        \\ | 9 <digits>          ::= <digit> | <digit><digits>
    <number>          ::=\\\n        \\ <digits> | <digits>.<digits> | <digits>. |
    .<digits> <sign>            ::=\\\n        \\ \\\"+\\\" | \\\"-\\\" <signedNumber>
    \   ::= <number> | <sign><number> <suffix> \\\n        \\         ::= <binarySI>
    | <decimalExponent> | <decimalSI> <binarySI>    \\\n        \\    ::= Ki | Mi
    | Gi | Ti | Pi | Ei\\n\\n\\t(International System of units;\\\n        \\ See:
    http://physics.nist.gov/cuu/Units/binary.html)\\n\\n<decimalSI>     \\\n        \\
    \ ::= m | \\\"\\\" | k | M | G | T | P | E\\n\\n\\t(Note that 1024 = 1Ki but 1000\\\n
    \       \\ = 1k; I didn't choose the capitalization.)\\n\\n<decimalExponent> ::=
    \\\"e\\\"\\\n        \\ <signedNumber> | \\\"E\\\" <signedNumber> ```\\n\\nNo
    matter which of the three\\\n        \\ exponent forms is used, no quantity may
    represent a number greater than\\\n        \\ 2^63-1 in magnitude, nor may it
    have more than 3 decimal places. Numbers\\\n        \\ larger or more precise
    will be capped or rounded up. (E.g.: 0.1m will rounded\\\n        \\ up to 1m.)
    This may be extended in the future if we require larger or smaller\\\n        \\
    quantities.\\n\\nWhen a Quantity is parsed from a string, it will remember\\\n
    \       \\ the type of suffix it had, and will use the same type again when it
    is serialized.\\n\\\n        \\nBefore serializing, Quantity will be put in \\\"canonical
    form\\\". This means\\\n        \\ that Exponent/suffix will be adjusted up or
    down (with a corresponding increase\\\n        \\ or decrease in Mantissa) such
    that:\\n\\n- No precision is lost - No fractional\\\n        \\ digits will be
    emitted - The exponent (or suffix) is as large as possible.\\n\\\n        \\nThe
    sign will be omitted unless the number is negative.\\n\\nExamples:\\n\\n\\\n        -
    1.5 will be serialized as \\\"1500m\\\" - 1.5Gi will be serialized as \\\"1536Mi\\\"\\\n
    \       \\n\\nNote that the quantity will NEVER be internally represented by a
    floating\\\n        \\ point number. That is the whole point of this exercise.\\n\\nNon-canonical\\\n
    \       \\ values will still parse as long as they are well formed, but will be
    re-emitted\\\n        \\ in their canonical form. (So always use canonical form,
    or don't diff.)\\n\\\n        \\nThis format is intended to make it difficult
    to use these numbers without\\\n        \\ writing some sort of special handling
    code in the hopes that that will cause\\\n        \\ implementors to also use
    a fixed point implementation.\"\n    k8s.io.apimachinery.pkg.apis.meta.v1.APIGroup:\n
    \     required:\n      - name\n      - versions\n      type: object\n      properties:\n
    \       apiVersion:\n          type: string\n          description: \"APIVersion
    defines the versioned schema of this representation\\\n            \\ of an object.
    Servers should convert recognized schemas to the latest\\\n            \\ internal
    value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\"\n
    \       kind:\n          type: string\n          description: \"Kind is a string
    value representing the REST resource this\\\n            \\ object represents.
    Servers may infer this from the endpoint the client\\\n            \\ submits
    requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"\n
    \       name:\n          type: string\n          description: name is the name
    of the group.\n          default: \"\"\n        preferredVersion:\n          $ref:
    '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.GroupVersionForDiscovery'\n
    \       serverAddressByClientCIDRs:\n          type: array\n          description:
    \"a map of client CIDR to server address that is serving this\\\n            \\
    group. This is to help clients reach servers in the most network-efficient\\\n
    \           \\ way possible. Clients can use the appropriate server address as
    per\\\n            \\ the CIDR that they match. In case of multiple matches, clients
    should\\\n            \\ use the longest matching CIDR. The server returns only
    those CIDRs that\\\n            \\ it thinks that the client can match. For example:
    the master will return\\\n            \\ an internal IP CIDR only, if the client
    reaches the server using an\\\n            \\ internal IP. Server looks at X-Forwarded-For
    header or X-Real-Ip header\\\n            \\ or request.RemoteAddr (in that order)
    to get the client IP.\"\n          items:\n            $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.ServerAddressByClientCIDR'\n
    \       versions:\n          type: array\n          description: versions are
    the versions supported in this group.\n          items:\n            $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.GroupVersionForDiscovery'\n
    \     description: \"APIGroup contains the name, the supported versions, and the
    preferred\\\n        \\ version of a group.\"\n    k8s.io.apimachinery.pkg.apis.meta.v1.APIGroupList:\n
    \     required:\n      - groups\n      type: object\n      properties:\n        apiVersion:\n
    \         type: string\n          description: \"APIVersion defines the versioned
    schema of this representation\\\n            \\ of an object. Servers should convert
    recognized schemas to the latest\\\n            \\ internal value, and may reject
    unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\"\n
    \       groups:\n          type: array\n          description: groups is a list
    of APIGroup.\n          items:\n            $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.APIGroup'\n
    \       kind:\n          type: string\n          description: \"Kind is a string
    value representing the REST resource this\\\n            \\ object represents.
    Servers may infer this from the endpoint the client\\\n            \\ submits
    requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"\n
    \     description: \"APIGroupList is a list of APIGroup, to allow clients to discover\\\n
    \       \\ the API at /apis.\"\n    k8s.io.apimachinery.pkg.apis.meta.v1.APIResource:\n
    \     required:\n      - kind\n      - name\n      - namespaced\n      - singularName\n
    \     - verbs\n      type: object\n      properties:\n        categories:\n          type:
    array\n          description: categories is a list of the grouped resources this
    resource\n            belongs to (e.g. 'all')\n          items:\n            type:
    string\n            default: \"\"\n        group:\n          type: string\n          description:
    \"group is the preferred group of the resource.  Empty implies\\\n            \\
    the group of the containing resource list. For subresources, this may\\\n            \\
    have a different value, for example: Scale\\\".\"\n        kind:\n          type:
    string\n          description: kind is the kind for the resource (e.g. 'Foo' is
    the kind for\n            a resource 'foo')\n          default: \"\"\n        name:\n
    \         type: string\n          description: name is the plural name of the
    resource.\n          default: \"\"\n        namespaced:\n          type: boolean\n
    \         description: namespaced indicates if a resource is namespaced or not.\n
    \         default: false\n        shortNames:\n          type: array\n          description:
    shortNames is a list of suggested short names of the resource.\n          items:\n
    \           type: string\n            default: \"\"\n        singularName:\n          type:
    string\n          description: singularName is the singular name of the resource.
    \ This allows\n            clients to handle plural and singular opaquely. The
    singularName is more\n            correct for reporting status on a single item
    and both singular and plural\n            are allowed from the kubectl CLI interface.\n
    \         default: \"\"\n        storageVersionHash:\n          type: string\n
    \         description: \"The hash value of the storage version, the version this
    resource\\\n            \\ is converted to when written to the data store. Value
    must be treated\\\n            \\ as opaque by clients. Only equality comparison
    on the value is valid.\\\n            \\ This is an alpha feature and may change
    or be removed in the future.\\\n            \\ The field is populated by the apiserver
    only if the StorageVersionHash\\\n            \\ feature gate is enabled. This
    field will remain optional even if it\\\n            \\ graduates.\"\n        verbs:\n
    \         type: array\n          description: \"verbs is a list of supported kube
    verbs (this includes get,\\\n            \\ list, watch, create, update, patch,
    delete, deletecollection, and proxy)\"\n          items:\n            type: string\n
    \           default: \"\"\n        version:\n          type: string\n          description:
    \"version is the preferred version of the resource.  Empty implies\\\n            \\
    the version of the containing resource list For subresources, this may\\\n            \\
    have a different value, for example: v1 (while inside a v1beta1 version\\\n            \\
    of the core resource's group)\\\".\"\n      description: APIResource specifies
    the name of a resource and whether it is\n        namespaced.\n    k8s.io.apimachinery.pkg.apis.meta.v1.APIResourceList:\n
    \     required:\n      - groupVersion\n      - resources\n      type: object\n
    \     properties:\n        apiVersion:\n          type: string\n          description:
    \"APIVersion defines the versioned schema of this representation\\\n            \\
    of an object. Servers should convert recognized schemas to the latest\\\n            \\
    internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\"\n
    \       groupVersion:\n          type: string\n          description: groupVersion
    is the group and version this APIResourceList\n            is for.\n          default:
    \"\"\n        kind:\n          type: string\n          description: \"Kind is
    a string value representing the REST resource this\\\n            \\ object represents.
    Servers may infer this from the endpoint the client\\\n            \\ submits
    requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"\n
    \       resources:\n          type: array\n          description: resources contains
    the name of the resources and if they are\n            namespaced.\n          items:\n
    \           $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.APIResource'\n
    \     description: \"APIResourceList is a list of APIResource, it is used to expose\\\n
    \       \\ the name of the resources supported in a specific group and version,
    and\\\n        \\ if the resource is namespaced.\"\n    k8s.io.apimachinery.pkg.apis.meta.v1.DeleteOptions:\n
    \     type: object\n      properties:\n        apiVersion:\n          type: string\n
    \         description: \"APIVersion defines the versioned schema of this representation\\\n
    \           \\ of an object. Servers should convert recognized schemas to the
    latest\\\n            \\ internal value, and may reject unrecognized values. More
    info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\"\n
    \       dryRun:\n          type: array\n          description: \"When present,
    indicates that modifications should not be persisted.\\\n            \\ An invalid
    or unrecognized dryRun directive will result in an error\\\n            \\ response
    and no further processing of the request. Valid values are:\\\n            \\
    - All: all dry run stages will be processed\"\n          items:\n            type:
    string\n            default: \"\"\n        gracePeriodSeconds:\n          type:
    integer\n          description: \"The duration in seconds before the object should
    be deleted.\\\n            \\ Value must be non-negative integer. The value zero
    indicates delete\\\n            \\ immediately. If this value is nil, the default
    grace period for the\\\n            \\ specified type will be used. Defaults to
    a per object value if not specified.\\\n            \\ zero means delete immediately.\"\n
    \         format: int64\n        kind:\n          type: string\n          description:
    \"Kind is a string value representing the REST resource this\\\n            \\
    object represents. Servers may infer this from the endpoint the client\\\n            \\
    submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"\n
    \       orphanDependents:\n          type: boolean\n          description: \"Deprecated:
    please use the PropagationPolicy, this field will\\\n            \\ be deprecated
    in 1.7. Should the dependent objects be orphaned. If true/false,\\\n            \\
    the \\\"orphan\\\" finalizer will be added to/removed from the object's\\\n            \\
    finalizers list. Either this field or PropagationPolicy may be set,\\\n            \\
    but not both.\"\n        preconditions:\n          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.Preconditions'\n
    \       propagationPolicy:\n          type: string\n          description: \"Whether
    and how garbage collection will be performed. Either\\\n            \\ this field
    or OrphanDependents may be set, but not both. The default\\\n            \\ policy
    is decided by the existing finalizer set in the metadata.finalizers\\\n            \\
    and the resource-specific default policy. Acceptable values are: 'Orphan'\\\n
    \           \\ - orphan the dependents; 'Background' - allow the garbage collector\\\n
    \           \\ to delete the dependents in the background; 'Foreground' - a cascading\\\n
    \           \\ policy that deletes all dependents in the foreground.\"\n      description:
    DeleteOptions may be provided when deleting an API object.\n    k8s.io.apimachinery.pkg.apis.meta.v1.Duration:\n
    \     type: string\n      description: \"Duration is a wrapper around time.Duration
    which supports correct\\\n        \\ marshaling to YAML and JSON. In particular,
    it marshals into strings, which\\\n        \\ can be used as map keys in json.\"\n
    \   k8s.io.apimachinery.pkg.apis.meta.v1.FieldsV1:\n      type: object\n      description:
    |-\n        FieldsV1 stores a set of fields in a data structure like a Trie, in
    JSON format.\n\n        Each key is either a '.' representing the field itself,
    and will always map to an empty set, or a string representing a sub-field or item.
    The string will follow one of these four formats: 'f:<name>', where <name> is
    the name of a field in a struct, or key in a map 'v:<value>', where <value> is
    the exact json formatted value of a list item 'i:<index>', where <index> is position
    of a item in a list 'k:<keys>', where <keys> is a map of  a list item's key fields
    to their unique values If a key maps to an empty Fields value, the field that
    key represents is part of the set.\n\n        The exact format is defined in sigs.k8s.io/structured-merge-diff\n
    \   k8s.io.apimachinery.pkg.apis.meta.v1.GroupVersionForDiscovery:\n      required:\n
    \     - groupVersion\n      - version\n      type: object\n      properties:\n
    \       groupVersion:\n          type: string\n          description: groupVersion
    specifies the API group and version in the form\n            \"group/version\"\n
    \         default: \"\"\n        version:\n          type: string\n          description:
    version specifies the version in the form of \"version\". This\n            is
    to save the clients the trouble of splitting the GroupVersion.\n          default:
    \"\"\n      description: GroupVersion contains the \"group/version\" and \"version\"
    string\n        of a version. It is made a struct to keep extensibility.\n    k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector:\n
    \     type: object\n      properties:\n        matchExpressions:\n          type:
    array\n          description: matchExpressions is a list of label selector requirements.\n
    \           The requirements are ANDed.\n          items:\n            $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelectorRequirement'\n
    \       matchLabels:\n          type: object\n          additionalProperties:\n
    \           type: string\n            default: \"\"\n          description: \"matchLabels
    is a map of {key,value} pairs. A single {key,value}\\\n            \\ in the matchLabels
    map is equivalent to an element of matchExpressions,\\\n            \\ whose key
    field is \\\"key\\\", the operator is \\\"In\\\", and the values array\\\n            \\
    contains only \\\"value\\\". The requirements are ANDed.\"\n      description:
    A label selector is a label query over a set of resources. The\n        result
    of matchLabels and matchExpressions are ANDed. An empty label selector\n        matches
    all objects. A null label selector matches no objects.\n      x-kubernetes-map-type:
    atomic\n    k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelectorRequirement:\n      required:\n
    \     - key\n      - operator\n      type: object\n      properties:\n        key:\n
    \         type: string\n          description: key is the label key that the selector
    applies to.\n          default: \"\"\n          x-kubernetes-patch-strategy: merge\n
    \         x-kubernetes-patch-merge-key: key\n        operator:\n          type:
    string\n          description: \"operator represents a key's relationship to a
    set of values.\\\n            \\ Valid operators are In, NotIn, Exists and DoesNotExist.\"\n
    \         default: \"\"\n        values:\n          type: array\n          description:
    \"values is an array of string values. If the operator is In\\\n            \\
    or NotIn, the values array must be non-empty. If the operator is Exists\\\n            \\
    or DoesNotExist, the values array must be empty. This array is replaced\\\n            \\
    during a strategic merge patch.\"\n          items:\n            type: string\n
    \           default: \"\"\n      description: \"A label selector requirement is
    a selector that contains values,\\\n        \\ a key, and an operator that relates
    the key and values.\"\n    k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta:\n      type:
    object\n      properties:\n        continue:\n          type: string\n          description:
    \"continue may be set if the user set a limit on the number\\\n            \\
    of items returned, and indicates that the server has more data available.\\\n
    \           \\ The value is opaque and may be used to issue another request to
    the\\\n            \\ endpoint that served this list to retrieve the next set
    of available\\\n            \\ objects. Continuing a consistent list may not be
    possible if the server\\\n            \\ configuration has changed or more than
    a few minutes have passed. The\\\n            \\ resourceVersion field returned
    when using this continue value will be\\\n            \\ identical to the value
    in the first response, unless you have received\\\n            \\ this token from
    an error message.\"\n        remainingItemCount:\n          type: integer\n          description:
    \"remainingItemCount is the number of subsequent items in the\\\n            \\
    list which are not included in this list response. If the list request\\\n            \\
    contained label or field selectors, then the number of remaining items\\\n            \\
    is unknown and the field will be left unset and omitted during serialization.\\\n
    \           \\ If the list is complete (either because it is not chunking or because\\\n
    \           \\ this is the last chunk), then there are no more remaining items
    and\\\n            \\ this field will be left unset and omitted during serialization.
    Servers\\\n            \\ older than v1.15 do not set this field. The intended
    use of the remainingItemCount\\\n            \\ is *estimating* the size of a
    collection. Clients should not rely on\\\n            \\ the remainingItemCount
    to be set or to be exact.\"\n          format: int64\n        resourceVersion:\n
    \         type: string\n          description: \"String that identifies the server's
    internal version of this\\\n            \\ object that can be used by clients
    to determine when objects have changed.\\\n            \\ Value must be treated
    as opaque by clients and passed unmodified back\\\n            \\ to the server.
    Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"\n
    \       selfLink:\n          type: string\n          description: \"Deprecated:
    selfLink is a legacy read-only field that is no\\\n            \\ longer populated
    by the system.\"\n      description: \"ListMeta describes metadata that synthetic
    resources must have,\\\n        \\ including lists and various status objects.
    A resource may have only one\\\n        \\ of {ObjectMeta, ListMeta}.\"\n    k8s.io.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry:\n
    \     type: object\n      properties:\n        apiVersion:\n          type: string\n
    \         description: APIVersion defines the version of this resource that this
    field\n            set applies to. The format is \"group/version\" just like the
    top-level\n            APIVersion field. It is necessary to track the version
    of a field set\n            because it cannot be automatically converted.\n        fieldsType:\n
    \         type: string\n          description: \"FieldsType is the discriminator
    for the different fields format\\\n            \\ and version. There is currently
    only one possible value: \\\"FieldsV1\\\"\"\n        fieldsV1:\n          $ref:
    '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.FieldsV1'\n        manager:\n
    \         type: string\n          description: Manager is an identifier of the
    workflow managing these fields.\n        operation:\n          type: string\n
    \         description: Operation is the type of operation which lead to this ManagedFieldsEntry\n
    \           being created. The only valid values for this field are 'Apply' and
    'Update'.\n        subresource:\n          type: string\n          description:
    \"Subresource is the name of the subresource used to update\\\n            \\
    that object, or empty string if the object was updated through the main\\\n            \\
    resource. The value of this field is used to distinguish between managers,\\\n
    \           \\ even if they share the same name. For example, a status update
    will\\\n            \\ be distinct from a regular update using the same manager
    name. Note\\\n            \\ that the APIVersion field is not related to the Subresource
    field and\\\n            \\ it always corresponds to the version of the main resource.\"\n
    \       time:\n          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.Time'\n
    \     description: \"ManagedFieldsEntry is a workflow-id, a FieldSet and the group\\\n
    \       \\ version of the resource that the fieldset applies to.\"\n    k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta:\n
    \     type: object\n      properties:\n        annotations:\n          type: object\n
    \         additionalProperties:\n            type: string\n            default:
    \"\"\n          description: \"Annotations is an unstructured key value map stored
    with a\\\n            \\ resource that may be set by external tools to store and
    retrieve arbitrary\\\n            \\ metadata. They are not queryable and should
    be preserved when modifying\\\n            \\ objects. More info: http://kubernetes.io/docs/user-guide/annotations\"\n
    \       deletionGracePeriodSeconds:\n          type: integer\n          description:
    Number of seconds allowed for this object to gracefully terminate\n            before
    it will be removed from the system. Only set when deletionTimestamp\n            is
    also set. May only be shortened. Read-only.\n          format: int64\n        deletionTimestamp:\n
    \         $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.Time'\n
    \       finalizers:\n          type: array\n          description: \"Must be empty
    before the object is deleted from the registry.\\\n            \\ Each entry is
    an identifier for the responsible component that will\\\n            \\ remove
    the entry from the list. If the deletionTimestamp of the object\\\n            \\
    is non-nil, entries in this list can only be removed. Finalizers may\\\n            \\
    be processed and removed in any order.  Order is NOT enforced because\\\n            \\
    it introduces significant risk of stuck finalizers. finalizers is a\\\n            \\
    shared field, any actor with permission can reorder it. If the finalizer\\\n            \\
    list is processed in order, then this can lead to a situation in which\\\n            \\
    the component responsible for the first finalizer in the list is waiting\\\n            \\
    for a signal (field value, external system, or other) produced by a\\\n            \\
    component responsible for a finalizer later in the list, resulting in\\\n            \\
    a deadlock. Without enforced ordering finalizers are free to order amongst\\\n
    \           \\ themselves and are not vulnerable to ordering changes in the list.\"\n
    \         items:\n            type: string\n            default: \"\"\n          x-kubernetes-patch-strategy:
    merge\n        generateName:\n          type: string\n          description: |-\n
    \           GenerateName is an optional prefix, used by the server, to generate
    a unique name ONLY IF the Name field has not been provided. If this field is used,
    the name returned to the client will be different than the name passed. This value
    will also be combined with a unique suffix. The provided value has the same validation
    rules as the Name field, and may be truncated by the length of the suffix required
    to make the value unique on the server.\n\n            If this field is specified
    and the generated name exists, the server will return a 409.\n\n            Applied
    only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n
    \       generation:\n          type: integer\n          description: A sequence
    number representing a specific generation of the\n            desired state. Populated
    by the system. Read-only.\n          format: int64\n        labels:\n          type:
    object\n          additionalProperties:\n            type: string\n            default:
    \"\"\n          description: \"Map of string keys and values that can be used
    to organize\\\n            \\ and categorize (scope and select) objects. May match
    selectors of replication\\\n            \\ controllers and services. More info:
    http://kubernetes.io/docs/user-guide/labels\"\n        managedFields:\n          type:
    array\n          description: \"ManagedFields maps workflow-id and version to
    the set of fields\\\n            \\ that are managed by that workflow. This is
    mostly for internal housekeeping,\\\n            \\ and users typically shouldn't
    need to set or understand this field.\\\n            \\ A workflow can be the
    user's name, a controller's name, or the name\\\n            \\ of a specific
    apply path like \\\"ci-cd\\\". The set of fields is always\\\n            \\ in
    the version that the workflow used when modifying the object.\"\n          items:\n
    \           $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry'\n
    \       name:\n          type: string\n          description: \"Name must be unique
    within a namespace. Is required when creating\\\n            \\ resources, although
    some resources may allow a client to request the\\\n            \\ generation
    of an appropriate name automatically. Name is primarily intended\\\n            \\
    for creation idempotence and configuration definition. Cannot be updated.\\\n
    \           \\ More info: http://kubernetes.io/docs/user-guide/identifiers#names\"\n
    \       namespace:\n          type: string\n          description: |-\n            Namespace
    defines the space within which each name must be unique. An empty namespace is
    equivalent to the \"default\" namespace, but \"default\" is the canonical representation.
    Not all objects are required to be scoped to a namespace - the value of this field
    for those objects will be empty.\n\n            Must be a DNS_LABEL. Cannot be
    updated. More info: http://kubernetes.io/docs/user-guide/namespaces\n        ownerReferences:\n
    \         type: array\n          description: \"List of objects depended by this
    object. If ALL objects in\\\n            \\ the list have been deleted, this object
    will be garbage collected. If\\\n            \\ this object is managed by a controller,
    then an entry in this list will\\\n            \\ point to this controller, with
    the controller field set to true. There\\\n            \\ cannot be more than
    one managing controller.\"\n          items:\n            $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.OwnerReference'\n
    \         x-kubernetes-patch-strategy: merge\n          x-kubernetes-patch-merge-key:
    uid\n        resourceVersion:\n          type: string\n          description:
    |-\n            An opaque value that represents the internal version of this object
    that can be used by clients to determine when objects have changed. May be used
    for optimistic concurrency, change detection, and the watch operation on a resource
    or set of resources. Clients must treat these values as opaque and passed unmodified
    back to the server. They may only be valid for a particular resource or set of
    resources.\n\n            Populated by the system. Read-only. Value must be treated
    as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n
    \       selfLink:\n          type: string\n          description: \"Deprecated:
    selfLink is a legacy read-only field that is no\\\n            \\ longer populated
    by the system.\"\n        uid:\n          type: string\n          description:
    |-\n            UID is the unique in time and space value for this object. It
    is typically generated by the server on successful creation of a resource and
    is not allowed to change on PUT operations.\n\n            Populated by the system.
    Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\n
    \     description: \"ObjectMeta is metadata that all persisted resources must
    have,\\\n        \\ which includes all objects users must create.\"\n    k8s.io.apimachinery.pkg.apis.meta.v1.OwnerReference:\n
    \     required:\n      - apiVersion\n      - kind\n      - name\n      - uid\n
    \     type: object\n      properties:\n        apiVersion:\n          type: string\n
    \         description: API version of the referent.\n          default: \"\"\n
    \       blockOwnerDeletion:\n          type: boolean\n          description: \"If
    true, AND if the owner has the \\\"foregroundDeletion\\\" finalizer,\\\n            \\
    then the owner cannot be deleted from the key-value store until this\\\n            \\
    reference is removed. See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion\\\n
    \           \\ for how the garbage collector interacts with this field and enforces\\\n
    \           \\ the foreground deletion. Defaults to false. To set this field,
    a user\\\n            \\ needs \\\"delete\\\" permission of the owner, otherwise
    422 (Unprocessable\\\n            \\ Entity) will be returned.\"\n        controller:\n
    \         type: boolean\n          description: \"If true, this reference points
    to the managing controller.\"\n        kind:\n          type: string\n          description:
    \"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"\n
    \         default: \"\"\n        name:\n          type: string\n          description:
    \"Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"\n
    \         default: \"\"\n        uid:\n          type: string\n          description:
    \"UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"\n
    \         default: \"\"\n      description: \"OwnerReference contains enough information
    to let you identify\\\n        \\ an owning object. An owning object must be in
    the same namespace as the\\\n        \\ dependent, or be cluster-scoped, so there
    is no namespace field.\"\n      x-kubernetes-map-type: atomic\n    k8s.io.apimachinery.pkg.apis.meta.v1.Patch:\n
    \     type: object\n      description: Patch is provided to give a concrete name
    and type to the Kubernetes\n        PATCH request body.\n    k8s.io.apimachinery.pkg.apis.meta.v1.Preconditions:\n
    \     type: object\n      properties:\n        resourceVersion:\n          type:
    string\n          description: Specifies the target ResourceVersion\n        uid:\n
    \         type: string\n          description: Specifies the target UID.\n      description:
    \"Preconditions must be fulfilled before an operation (update, delete,\\\n        \\
    etc.) is carried out.\"\n    k8s.io.apimachinery.pkg.apis.meta.v1.RootPaths:\n
    \     required:\n      - paths\n      type: object\n      properties:\n        paths:\n
    \         type: array\n          description: paths are the paths available at
    root.\n          items:\n            type: string\n            default: \"\"\n
    \     description: \"RootPaths lists the paths available at root. For example:
    \\\"/healthz\\\"\\\n        , \\\"/apis\\\".\"\n    k8s.io.apimachinery.pkg.apis.meta.v1.ServerAddressByClientCIDR:\n
    \     required:\n      - clientCIDR\n      - serverAddress\n      type: object\n
    \     properties:\n        clientCIDR:\n          type: string\n          description:
    The CIDR with which clients can match their IP to figure out\n            the
    server address that they should use.\n          default: \"\"\n        serverAddress:\n
    \         type: string\n          description: \"Address of this server, suitable
    for a client that matches\\\n            \\ the above CIDR. This can be a hostname,
    hostname:port, IP or IP:port.\"\n          default: \"\"\n      description: \"ServerAddressByClientCIDR
    helps the client to determine the server\\\n        \\ address that they should
    use, depending on the clientCIDR that they match.\"\n    k8s.io.apimachinery.pkg.apis.meta.v1.Status:\n
    \     type: object\n      properties:\n        apiVersion:\n          type: string\n
    \         description: \"APIVersion defines the versioned schema of this representation\\\n
    \           \\ of an object. Servers should convert recognized schemas to the
    latest\\\n            \\ internal value, and may reject unrecognized values. More
    info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\"\n
    \       code:\n          type: integer\n          description: \"Suggested HTTP
    return code for this status, 0 if not set.\"\n          format: int32\n        details:\n
    \         $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.StatusDetails'\n
    \       kind:\n          type: string\n          description: \"Kind is a string
    value representing the REST resource this\\\n            \\ object represents.
    Servers may infer this from the endpoint the client\\\n            \\ submits
    requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"\n
    \       message:\n          type: string\n          description: A human-readable
    description of the status of this operation.\n        metadata:\n          $ref:
    '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta'\n        reason:\n
    \         type: string\n          description: A machine-readable description
    of why this operation is in\n            the \"Failure\" status. If this value
    is empty there is no information available.\n            A Reason clarifies an
    HTTP status code but does not override it.\n        status:\n          type: string\n
    \         description: \"Status of the operation. One of: \\\"Success\\\" or \\\"Failure\\\"\\\n
    \           . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status\"\n
    \     description: Status is a return value for calls that don't return other
    objects.\n    k8s.io.apimachinery.pkg.apis.meta.v1.StatusCause:\n      type: object\n
    \     properties:\n        field:\n          type: string\n          description:
    |-\n            The field of the resource that has caused this error, as named
    by its JSON serialization. May include dot and postfix notation for nested attributes.
    Arrays are zero-indexed.  Fields may appear more than once in an array of causes
    due to fields having multiple errors. Optional.\n\n            Examples:\n              \"name\"
    - the field \"name\" on the current resource\n              \"items[0].name\"
    - the field \"name\" on the first array entry in \"items\"\n        message:\n
    \         type: string\n          description: A human-readable description of
    the cause of the error.  This\n            field may be presented as-is to a reader.\n
    \       reason:\n          type: string\n          description: A machine-readable
    description of the cause of the error. If\n            this value is empty there
    is no information available.\n      description: \"StatusCause provides more information
    about an api.Status failure,\\\n        \\ including cases when multiple errors
    are encountered.\"\n    k8s.io.apimachinery.pkg.apis.meta.v1.StatusDetails:\n
    \     type: object\n      properties:\n        causes:\n          type: array\n
    \         description: The Causes array includes more details associated with
    the\n            StatusReason failure. Not all StatusReasons may provide detailed
    causes.\n          items:\n            $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.StatusCause'\n
    \       group:\n          type: string\n          description: The group attribute
    of the resource associated with the status\n            StatusReason.\n        kind:\n
    \         type: string\n          description: \"The kind attribute of the resource
    associated with the status\\\n            \\ StatusReason. On some operations
    may differ from the requested resource\\\n            \\ Kind. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"\n
    \       name:\n          type: string\n          description: The name attribute
    of the resource associated with the status\n            StatusReason (when there
    is a single name which can be described).\n        retryAfterSeconds:\n          type:
    integer\n          description: \"If specified, the time in seconds before the
    operation should\\\n            \\ be retried. Some errors may indicate the client
    must take an alternate\\\n            \\ action - for those errors this field
    may indicate how long to wait before\\\n            \\ taking the alternate action.\"\n
    \         format: int32\n        uid:\n          type: string\n          description:
    \"UID of the resource. (when there is a single resource which\\\n            \\
    can be described). More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"\n
    \     description: \"StatusDetails is a set of additional properties that MAY
    be set\\\n        \\ by the server to provide additional information about a response.
    The Reason\\\n        \\ field of a Status object defines what attributes will
    be set. Clients must\\\n        \\ ignore fields that do not match the defined
    type of each attribute, and\\\n        \\ should assume that any attribute may
    be empty, invalid, or under defined.\"\n    k8s.io.apimachinery.pkg.apis.meta.v1.Time:\n
    \     type: string\n      description: Time is a wrapper around time.Time which
    supports correct marshaling\n        to YAML and JSON.  Wrappers are provided
    for many of the factory methods that\n        the time package offers.\n      format:
    date-time\n    k8s.io.apimachinery.pkg.apis.meta.v1.WatchEvent:\n      required:\n
    \     - object\n      - type\n      type: object\n      properties:\n        object:\n
    \         $ref: '#/components/schemas/k8s.io.apimachinery.pkg.runtime.RawExtension'\n
    \       type:\n          type: string\n          default: \"\"\n      description:
    Event represents a single event to a watched resource.\n    k8s.io.apimachinery.pkg.runtime.RawExtension:\n
    \     type: object\n      description: \"RawExtension is used to hold extensions
    in external versions.\\n\\\n        \\nTo use this, make a field which has RawExtension
    as its type in your external,\\\n        \\ versioned struct, and Object in your
    internal struct. You also need to register\\\n        \\ your various plugin types.\\n\\n//
    Internal package:\\n\\n\\ttype MyAPIObject\\\n        \\ struct {\\n\\t\\truntime.TypeMeta
    `json:\\\",inline\\\"`\\n\\t\\tMyPlugin runtime.Object\\\n        \\ `json:\\\"myPlugin\\\"`\\n\\t}\\n\\n\\ttype
    PluginA struct {\\n\\t\\tAOption string\\\n        \\ `json:\\\"aOption\\\"`\\n\\t}\\n\\n//
    External package:\\n\\n\\ttype MyAPIObject struct\\\n        \\ {\\n\\t\\truntime.TypeMeta
    `json:\\\",inline\\\"`\\n\\t\\tMyPlugin runtime.RawExtension\\\n        \\ `json:\\\"myPlugin\\\"`\\n\\t}\\n\\n\\ttype
    PluginA struct {\\n\\t\\tAOption string\\\n        \\ `json:\\\"aOption\\\"`\\n\\t}\\n\\n//
    On the wire, the JSON will look something\\\n        \\ like this:\\n\\n\\t{\\n\\t\\t\\\"kind\\\":\\\"MyAPIObject\\\",\\n\\t\\t\\\"apiVersion\\\":\\\"\\\n
    \       v1\\\",\\n\\t\\t\\\"myPlugin\\\": {\\n\\t\\t\\t\\\"kind\\\":\\\"PluginA\\\",\\n\\t\\t\\t\\\"aOption\\\"\\\n
    \       :\\\"foo\\\",\\n\\t\\t},\\n\\t}\\n\\nSo what happens? Decode first uses
    json or yaml\\\n        \\ to unmarshal the serialized data into your external
    MyAPIObject. That causes\\\n        \\ the raw JSON to be stored, but not unpacked.
    The next step is to copy (using\\\n        \\ pkg/conversion) into the internal
    struct. The runtime package's DefaultScheme\\\n        \\ has conversion functions
    installed which will unpack the JSON stored in\\\n        \\ RawExtension, turning
    it into the correct object type, and storing it in\\\n        \\ the Object. (TODO:
    In the case where the object is of an unknown type, a\\\n        \\ runtime.Unknown
    object will be created and stored.)\"\n    k8s.io.apimachinery.pkg.util.intstr.IntOrString:\n
    \     type: string\n      description: \"IntOrString is a type that can hold an
    int32 or a string.  When\\\n        \\ used in JSON or YAML marshalling and unmarshalling,
    it produces or consumes\\\n        \\ the inner type.  This allows you to have,
    for example, a JSON field that\\\n        \\ can accept a name or number.\"\n
    \     format: int-or-string\n    v1.ACPI:\n      type: object\n      properties:\n
    \       slicNameRef:\n          type: string\n          description: \"SlicNameRef
    should match the volume name of a secret object.\\\n            \\ The data in
    the secret should be a binary blob that follows the ACPI\\\n            \\ SLIC
    standard, see: https://learn.microsoft.com/en-us/previous-versions/windows/hardware/design/dn653305(v=vs.85)\"\n
    \   v1.AccessCredential:\n      type: object\n      properties:\n        sshPublicKey:\n
    \         $ref: '#/components/schemas/v1.SSHPublicKeyAccessCredential'\n        userPassword:\n
    \         $ref: '#/components/schemas/v1.UserPasswordAccessCredential'\n      description:
    AccessCredential represents a credential source that can be used\n        to authorize
    remote access to the vm guest Only one of its members may be\n        specified.\n
    \   v1.AccessCredentialSecretSource:\n      required:\n      - secretName\n      type:
    object\n      properties:\n        secretName:\n          type: string\n          description:
    SecretName represents the name of the secret in the VMI's namespace\n          default:
    \"\"\n    v1.AddVolumeOptions:\n      required:\n      - disk\n      - name\n
    \     - volumeSource\n      type: object\n      properties:\n        disk:\n          $ref:
    '#/components/schemas/v1.Disk'\n        dryRun:\n          type: array\n          description:
    \"When present, indicates that modifications should not be persisted.\\\n            \\
    An invalid or unrecognized dryRun directive will result in an error\\\n            \\
    response and no further processing of the request. Valid values are:\\\n            \\
    - All: all dry run stages will be processed\"\n          items:\n            type:
    string\n            default: \"\"\n          x-kubernetes-list-type: atomic\n
    \       name:\n          type: string\n          description: Name represents
    the name that will be used to map the disk\n            to the corresponding volume.
    This overrides any name set inside the Disk\n            struct itself.\n          default:
    \"\"\n        volumeSource:\n          $ref: '#/components/schemas/v1.HotplugVolumeSource'\n
    \     description: AddVolumeOptions is provided when dynamically hot plugging
    a volume\n        and disk\n    v1.ArchConfiguration:\n      type: object\n      properties:\n
    \       amd64:\n          $ref: '#/components/schemas/v1.ArchSpecificConfiguration'\n
    \       arm64:\n          $ref: '#/components/schemas/v1.ArchSpecificConfiguration'\n
    \       defaultArchitecture:\n          type: string\n        ppc64le:\n          $ref:
    '#/components/schemas/v1.ArchSpecificConfiguration'\n    v1.ArchSpecificConfiguration:\n
    \     type: object\n      properties:\n        emulatedMachines:\n          type:
    array\n          items:\n            type: string\n            default: \"\"\n
    \         x-kubernetes-list-type: atomic\n        machineType:\n          type:
    string\n        ovmfPath:\n          type: string\n    v1.BIOS:\n      type: object\n
    \     properties:\n        useSerial:\n          type: boolean\n          description:
    \"If set, the BIOS output will be transmitted over serial\"\n      description:
    \"If set (default), BIOS will be used.\"\n    v1.BlockSize:\n      type: object\n
    \     properties:\n        custom:\n          $ref: '#/components/schemas/v1.CustomBlockSize'\n
    \       matchVolume:\n          $ref: '#/components/schemas/v1.FeatureState'\n
    \     description: BlockSize provides the option to change the block size presented\n
    \       to the VM for a disk. Only one of its members may be specified.\n    v1.Bootloader:\n
    \     type: object\n      properties:\n        bios:\n          $ref: '#/components/schemas/v1.BIOS'\n
    \       efi:\n          $ref: '#/components/schemas/v1.EFI'\n      description:
    Represents the firmware blob used to assist in the domain creation\n        process.
    Used for setting the QEMU BIOS file path for the libvirt domain.\n    v1.CDRomTarget:\n
    \     type: object\n      properties:\n        bus:\n          type: string\n
    \         description: \"Bus indicates the type of disk device to emulate. supported\\\n
    \           \\ values: virtio, sata, scsi.\"\n        readonly:\n          type:
    boolean\n          description: ReadOnly. Defaults to true.\n        tray:\n          type:
    string\n          description: Tray indicates if the tray of the device is open
    or closed.\n            Allowed values are \"open\" and \"closed\". Defaults to
    closed.\n    v1.CPU:\n      type: object\n      properties:\n        cores:\n
    \         type: integer\n          description: Cores specifies the number of
    cores inside the vmi. Must be\n            a value greater or equal 1.\n          format:
    int64\n        dedicatedCpuPlacement:\n          type: boolean\n          description:
    DedicatedCPUPlacement requests the scheduler to place the VirtualMachineInstance\n
    \           on a node with enough dedicated pCPUs and pin the vCPUs to it.\n        features:\n
    \         type: array\n          description: Features specifies the CPU features
    list inside the VMI.\n          items:\n            $ref: '#/components/schemas/v1.CPUFeature'\n
    \       isolateEmulatorThread:\n          type: boolean\n          description:
    IsolateEmulatorThread requests one more dedicated pCPU to be\n            allocated
    for the VMI to place the emulator thread on it.\n        maxSockets:\n          type:
    integer\n          description: MaxSockets specifies the maximum amount of sockets
    that can\n            be hotplugged\n          format: int64\n        model:\n
    \         type: string\n          description: Model specifies the CPU model inside
    the VMI. List of available\n            models https://github.com/libvirt/libvirt/tree/master/src/cpu_map.
    It\n            is possible to specify special cases like \"host-passthrough\"
    to get the\n            same CPU as the node and \"host-model\" to get CPU closest
    to the node one.\n            Defaults to host-model.\n        numa:\n          $ref:
    '#/components/schemas/v1.NUMA'\n        realtime:\n          $ref: '#/components/schemas/v1.Realtime'\n
    \       sockets:\n          type: integer\n          description: Sockets specifies
    the number of sockets inside the vmi. Must\n            be a value greater or
    equal 1.\n          format: int64\n        threads:\n          type: integer\n
    \         description: Threads specifies the number of threads inside the vmi.
    Must\n            be a value greater or equal 1.\n          format: int64\n      description:
    CPU allows specifying the CPU topology.\n    v1.CPUFeature:\n      required:\n
    \     - name\n      type: object\n      properties:\n        name:\n          type:
    string\n          description: Name of the CPU feature\n          default: \"\"\n
    \       policy:\n          type: string\n          description: \"Policy is the
    CPU feature attribute which can have the following\\\n            \\ attributes:
    force    - The virtual CPU will claim the feature is supported\\\n            \\
    regardless of it being supported by host CPU. require  - Guest creation\\\n            \\
    will fail unless the feature is supported by the host CPU or the hypervisor\\\n
    \           \\ is able to emulate it. optional - The feature will be supported
    by virtual\\\n            \\ CPU if and only if it is supported by host CPU. disable
    \ - The feature\\\n            \\ will not be supported by virtual CPU. forbid
    \  - Guest creation will\\\n            \\ fail if the feature is supported by
    host CPU. Defaults to require\"\n      description: CPUFeature allows specifying
    a CPU feature.\n    v1.CPUTopology:\n      type: object\n      properties:\n        cores:\n
    \         type: integer\n          description: Cores specifies the number of
    cores inside the vmi. Must be\n            a value greater or equal 1.\n          format:
    int64\n        sockets:\n          type: integer\n          description: Sockets
    specifies the number of sockets inside the vmi. Must\n            be a value greater
    or equal 1.\n          format: int64\n        threads:\n          type: integer\n
    \         description: Threads specifies the number of threads inside the vmi.
    Must\n            be a value greater or equal 1.\n          format: int64\n      description:
    \"CPUTopology allows specifying the amount of cores, sockets and\\\n        \\
    threads.\"\n    v1.CertConfig:\n      type: object\n      properties:\n        duration:\n
    \         $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.Duration'\n
    \       renewBefore:\n          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.Duration'\n
    \     description: CertConfig contains the tunables for TLS certificates\n    v1.Chassis:\n
    \     type: object\n      properties:\n        asset:\n          type: string\n
    \       manufacturer:\n          type: string\n        serial:\n          type:
    string\n        sku:\n          type: string\n        version:\n          type:
    string\n      description: Chassis specifies the chassis info passed to the domain.\n
    \   v1.ClientPassthroughDevices:\n      type: object\n      description: |-\n
    \       Represent a subset of client devices that can be accessed by VMI. At the
    moment only, USB devices using Usbredir's library and tooling. Another fit would
    be a smartcard with libcacard.\n\n        The struct is currently empty as there
    is no immediate request for user-facing APIs. This structure simply turns on USB
    redirection of UsbClientPassthroughMaxNumberOf devices.\n    v1.Clock:\n      type:
    object\n      properties:\n        timer:\n          $ref: '#/components/schemas/v1.Timer'\n
    \       timezone:\n          type: string\n          description: Timezone sets
    the guest clock to the specified timezone. Zone\n            name follows the
    TZ environment variable format (e.g. 'America/New_York').\n        utc:\n          $ref:
    '#/components/schemas/v1.ClockOffsetUTC'\n      description: Represents the clock
    and timers of a vmi.\n    v1.ClockOffset:\n      type: object\n      properties:\n
    \       timezone:\n          type: string\n          description: Timezone sets
    the guest clock to the specified timezone. Zone\n            name follows the
    TZ environment variable format (e.g. 'America/New_York').\n        utc:\n          $ref:
    '#/components/schemas/v1.ClockOffsetUTC'\n      description: Exactly one of its
    members must be set.\n    v1.ClockOffsetUTC:\n      type: object\n      properties:\n
    \       offsetSeconds:\n          type: integer\n          description: \"OffsetSeconds
    specifies an offset in seconds, relative to\\\n            \\ UTC. If set, guest
    changes to the clock will be kept during reboots\\\n            \\ and not reset.\"\n
    \         format: int32\n      description: UTC sets the guest clock to UTC on
    each boot.\n    v1.CloudInitConfigDriveSource:\n      type: object\n      properties:\n
    \       networkData:\n          type: string\n          description: NetworkData
    contains config drive inline cloud-init networkdata.\n        networkDataBase64:\n
    \         type: string\n          description: NetworkDataBase64 contains config
    drive cloud-init networkdata\n            as a base64 encoded string.\n        networkDataSecretRef:\n
    \         $ref: '#/components/schemas/k8s.io.api.core.v1.LocalObjectReference'\n
    \       secretRef:\n          $ref: '#/components/schemas/k8s.io.api.core.v1.LocalObjectReference'\n
    \       userData:\n          type: string\n          description: UserData contains
    config drive inline cloud-init userdata.\n        userDataBase64:\n          type:
    string\n          description: UserDataBase64 contains config drive cloud-init
    userdata as\n            a base64 encoded string.\n      description: \"Represents
    a cloud-init config drive user data source. More info:\\\n        \\ https://cloudinit.readthedocs.io/en/latest/topics/datasources/configdrive.html\"\n
    \   v1.CloudInitNoCloudSource:\n      type: object\n      properties:\n        networkData:\n
    \         type: string\n          description: NetworkData contains NoCloud inline
    cloud-init networkdata.\n        networkDataBase64:\n          type: string\n
    \         description: NetworkDataBase64 contains NoCloud cloud-init networkdata
    as\n            a base64 encoded string.\n        networkDataSecretRef:\n          $ref:
    '#/components/schemas/k8s.io.api.core.v1.LocalObjectReference'\n        secretRef:\n
    \         $ref: '#/components/schemas/k8s.io.api.core.v1.LocalObjectReference'\n
    \       userData:\n          type: string\n          description: UserData contains
    NoCloud inline cloud-init userdata.\n        userDataBase64:\n          type:
    string\n          description: UserDataBase64 contains NoCloud cloud-init userdata
    as a base64\n            encoded string.\n      description: \"Represents a cloud-init
    nocloud user data source. More info: http://cloudinit.readthedocs.io/en/latest/topics/datasources/nocloud.html\"\n
    \   v1.ComponentConfig:\n      type: object\n      properties:\n        nodePlacement:\n
    \         $ref: '#/components/schemas/v1.NodePlacement'\n        replicas:\n          type:
    integer\n          description: \"replicas indicates how many replicas should
    be created for\\\n            \\ each KubeVirt infrastructure component (like
    virt-api or virt-controller).\\\n            \\ Defaults to 2. WARNING: this is
    an advanced feature that prevents auto-scaling\\\n            \\ for core kubevirt
    components. Please use with caution!\"\n          format: byte\n    v1.ConfigDriveSSHPublicKeyAccessCredentialPropagation:\n
    \     type: object\n    v1.ConfigMapVolumeSource:\n      type: object\n      properties:\n
    \       name:\n          type: string\n          description: \"Name of the referent.
    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"\n
    \       optional:\n          type: boolean\n          description: Specify whether
    the ConfigMap or it's keys must be defined\n        volumeLabel:\n          type:
    string\n          description: \"The volume label of the resulting disk inside
    the VMI. Different\\\n            \\ bootstrapping mechanisms require different
    values. Typical values are\\\n            \\ \\\"cidata\\\" (cloud-init), \\\"config-2\\\"
    (cloud-init) or \\\"OEMDRV\\\" (kickstart).\"\n      description: \"ConfigMapVolumeSource
    adapts a ConfigMap into a volume. More info:\\\n        \\ https://kubernetes.io/docs/concepts/storage/volumes/#configmap\"\n
    \   v1.ContainerDiskInfo:\n      type: object\n      properties:\n        checksum:\n
    \         type: integer\n          description: Checksum is the checksum of the
    rootdisk or kernel artifacts\n            inside the containerdisk\n          format:
    int64\n      description: ContainerDiskInfo shows info about the containerdisk\n
    \   v1.ContainerDiskSource:\n      required:\n      - image\n      type: object\n
    \     properties:\n        image:\n          type: string\n          description:
    Image is the name of the image with the embedded disk.\n          default: \"\"\n
    \       imagePullPolicy:\n          type: string\n          description: |-\n
    \           Image pull policy. One of Always, Never, IfNotPresent. Defaults to
    Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated.
    More info: https://kubernetes.io/docs/concepts/containers/images#updating-images\n\n
    \           Possible enum values:\n             - `\"Always\"` means that kubelet
    always attempts to pull the latest image. Container will fail If the pull fails.\n
    \            - `\"IfNotPresent\"` means that kubelet pulls if the image isn't
    present on disk. Container will fail if the image isn't present and the pull fails.\n
    \            - `\"Never\"` means that kubelet never pulls an image, but only uses
    a local image. Container will fail if the image isn't present\n          enum:\n
    \         - Always\n          - IfNotPresent\n          - Never\n        imagePullSecret:\n
    \         type: string\n          description: ImagePullSecret is the name of
    the Docker registry secret required\n            to pull the image. The secret
    must already exist.\n        path:\n          type: string\n          description:
    Path defines the path to disk file in the container\n      description: Represents
    a docker image with an embedded disk.\n    v1.CustomBlockSize:\n      required:\n
    \     - logical\n      - physical\n      type: object\n      properties:\n        logical:\n
    \         type: integer\n          format: int32\n          default: 0\n        physical:\n
    \         type: integer\n          format: int32\n          default: 0\n      description:
    CustomBlockSize represents the desired logical and physical block\n        size
    for a VM disk.\n    v1.CustomProfile:\n      type: object\n      properties:\n
    \       localhostProfile:\n          type: string\n        runtimeDefaultProfile:\n
    \         type: boolean\n    v1.CustomizeComponents:\n      type: object\n      properties:\n
    \       flags:\n          $ref: '#/components/schemas/v1.Flags'\n        patches:\n
    \         type: array\n          items:\n            $ref: '#/components/schemas/v1.CustomizeComponentsPatch'\n
    \         x-kubernetes-list-type: atomic\n    v1.CustomizeComponentsPatch:\n      required:\n
    \     - patch\n      - resourceName\n      - resourceType\n      - type\n      type:
    object\n      properties:\n        patch:\n          type: string\n          default:
    \"\"\n        resourceName:\n          type: string\n          default: \"\"\n
    \       resourceType:\n          type: string\n          default: \"\"\n        type:\n
    \         type: string\n          default: \"\"\n    v1.DHCPOptions:\n      type:
    object\n      properties:\n        bootFileName:\n          type: string\n          description:
    If specified will pass option 67 to interface's DHCP server\n        ntpServers:\n
    \         type: array\n          description: If specified will pass the configured
    NTP server to the VM\n            via DHCP option 042.\n          items:\n            type:
    string\n            default: \"\"\n        privateOptions:\n          type: array\n
    \         description: \"If specified will pass extra DHCP options for private
    use,\\\n            \\ range: 224-254\"\n          items:\n            $ref: '#/components/schemas/v1.DHCPPrivateOptions'\n
    \       tftpServerName:\n          type: string\n          description: If specified
    will pass option 66 to interface's DHCP server\n      description: Extra DHCP
    options to use in the interface.\n    v1.DHCPPrivateOptions:\n      required:\n
    \     - option\n      - value\n      type: object\n      properties:\n        option:\n
    \         type: integer\n          description: Option is an Integer value from
    224-254 Required.\n          format: int32\n          default: 0\n        value:\n
    \         type: string\n          description: Value is a String value for the
    Option provided Required.\n          default: \"\"\n      description: DHCPExtraOptions
    defines Extra DHCP options for a VM.\n    v1.DataVolumeSource:\n      required:\n
    \     - name\n      type: object\n      properties:\n        hotpluggable:\n          type:
    boolean\n          description: Hotpluggable indicates whether the volume can
    be hotplugged\n            and hotunplugged.\n        name:\n          type: string\n
    \         description: Name of both the DataVolume and the PVC in the same namespace.\n
    \           After PVC population the DataVolume is garbage collected by default.\n
    \         default: \"\"\n    v1.DataVolumeTemplateDummyStatus:\n      type: object\n
    \   v1.DataVolumeTemplateSpec:\n      required:\n      - spec\n      type: object\n
    \     properties:\n        apiVersion:\n          type: string\n          description:
    \"APIVersion defines the versioned schema of this representation\\\n            \\
    of an object. Servers should convert recognized schemas to the latest\\\n            \\
    internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\"\n
    \       kind:\n          type: string\n          description: \"Kind is a string
    value representing the REST resource this\\\n            \\ object represents.
    Servers may infer this from the endpoint the client\\\n            \\ submits
    requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"\n
    \       metadata:\n          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta'\n
    \       spec:\n          $ref: '#/components/schemas/v1beta1.DataVolumeSpec'\n
    \       status:\n          $ref: '#/components/schemas/v1.DataVolumeTemplateDummyStatus'\n
    \   v1.DeprecatedInterfaceMacvtap:\n      type: object\n      description: \"DeprecatedInterfaceMacvtap
    is an alias to the deprecated InterfaceMacvtap\\\n        \\ that connects to
    a given network by extending the Kubernetes node's L2 networks\\\n        \\ via
    a macvtap interface. Deprecated: Removed in v1.3\"\n    v1.DeprecatedInterfaceSlirp:\n
    \     type: object\n      description: \"DeprecatedInterfaceSlirp is an alias
    to the deprecated InterfaceSlirp\\\n        \\ that connects to a given network
    using QEMU user networking mode. Deprecated:\\\n        \\ Removed in v1.3\"\n
    \   v1.DeveloperConfiguration:\n      type: object\n      properties:\n        cpuAllocationRatio:\n
    \         type: integer\n          description: \"For each requested virtual CPU,
    CPUAllocationRatio defines\\\n            \\ how much physical CPU to request
    per VMI from the hosting node. The\\\n            \\ value is in fraction of a
    CPU thread (or core on non-hyperthreaded nodes).\\\n            \\ For example,
    a value of 1 means 1 physical CPU thread per VMI CPU thread.\\\n            \\
    A value of 100 would be 1% of a physical thread allocated for each requested\\\n
    \           \\ VMI thread. This option has no effect on VMIs that request dedicated\\\n
    \           \\ CPUs. More information at: https://kubevirt.io/user-guide/operations/node_overcommit/#node-cpu-allocation-ratio\\\n
    \           \\ Defaults to 10\"\n          format: int32\n        diskVerification:\n
    \         $ref: '#/components/schemas/v1.DiskVerification'\n        featureGates:\n
    \         type: array\n          description: FeatureGates is the list of experimental
    features to enable.\n            Defaults to none\n          items:\n            type:
    string\n            default: \"\"\n        logVerbosity:\n          $ref: '#/components/schemas/v1.LogVerbosity'\n
    \       memoryOvercommit:\n          type: integer\n          description: \"MemoryOvercommit
    is the percentage of memory we want to give\\\n            \\ VMIs compared to
    the amount given to its parent pod (virt-launcher).\\\n            \\ For example,
    a value of 102 means the VMI will \\\"see\\\" 2% more memory\\\n            \\
    than its parent pod. Values under 100 are effectively \\\"undercommits\\\"\\\n
    \           . Overcommits can lead to memory exhaustion, which in turn can lead
    to\\\n            \\ crashes. Use carefully. Defaults to 100\"\n          format:
    int32\n        minimumClusterTSCFrequency:\n          type: integer\n          description:
    Allow overriding the automatically determined minimum TSC frequency\n            of
    the cluster and fixate the minimum to this frequency.\n          format: int64\n
    \       minimumReservePVCBytes:\n          type: integer\n          description:
    \"MinimumReservePVCBytes is the amount of space, in bytes, to\\\n            \\
    leave unused on disks. Defaults to 131072 (128KiB)\"\n          format: int64\n
    \       nodeSelectors:\n          type: object\n          additionalProperties:\n
    \           type: string\n            default: \"\"\n          description: NodeSelectors
    allows restricting VMI creation to nodes that\n            match a set of labels.
    Defaults to none\n        pvcTolerateLessSpaceUpToPercent:\n          type: integer\n
    \         description: \"LessPVCSpaceToleration determines how much smaller, in
    percentage,\\\n            \\ disk PVCs are allowed to be compared to the requested
    size (to account\\\n            \\ for various overheads). Defaults to 10\"\n
    \         format: int32\n        useEmulation:\n          type: boolean\n          description:
    UseEmulation can be set to true to allow fallback to software\n            emulation
    in case hardware-assisted emulation is not available. Defaults\n            to
    false\n      description: DeveloperConfiguration holds developer options\n    v1.Devices:\n
    \     type: object\n      properties:\n        autoattachGraphicsDevice:\n          type:
    boolean\n          description: Whether to attach the default graphics device
    or not. VNC will\n            not be available if set to false. Defaults to true.\n
    \       autoattachInputDevice:\n          type: boolean\n          description:
    Whether to attach an Input Device. Defaults to false.\n        autoattachMemBalloon:\n
    \         type: boolean\n          description: Whether to attach the Memory balloon
    device with default period.\n            Period can be adjusted in virt-config.
    Defaults to true.\n        autoattachPodInterface:\n          type: boolean\n
    \         description: Whether to attach a pod network interface. Defaults to
    true.\n        autoattachSerialConsole:\n          type: boolean\n          description:
    Whether to attach the default virtio-serial console or not.\n            Serial
    console access will not be available if set to false. Defaults\n            to
    true.\n        autoattachVSOCK:\n          type: boolean\n          description:
    Whether to attach the VSOCK CID to the VM or not. VSOCK access\n            will
    be available if set to true. Defaults to false.\n        blockMultiQueue:\n          type:
    boolean\n          description: Whether or not to enable virtio multi-queue for
    block devices.\n            Defaults to false.\n        clientPassthrough:\n          $ref:
    '#/components/schemas/v1.ClientPassthroughDevices'\n        disableHotplug:\n
    \         type: boolean\n          description: DisableHotplug disabled the ability
    to hotplug disks.\n        disks:\n          type: array\n          description:
    \"Disks describes disks, cdroms and luns which are connected\\\n            \\
    to the vmi.\"\n          items:\n            $ref: '#/components/schemas/v1.Disk'\n
    \       downwardMetrics:\n          $ref: '#/components/schemas/v1.DownwardMetrics'\n
    \       filesystems:\n          type: array\n          description: Filesystems
    describes filesystem which is connected to the\n            vmi.\n          items:\n
    \           $ref: '#/components/schemas/v1.Filesystem'\n          x-kubernetes-list-type:
    atomic\n        gpus:\n          type: array\n          description: Whether to
    attach a GPU device to the vmi.\n          items:\n            $ref: '#/components/schemas/v1.GPU'\n
    \         x-kubernetes-list-type: atomic\n        hostDevices:\n          type:
    array\n          description: Whether to attach a host device to the vmi.\n          items:\n
    \           $ref: '#/components/schemas/v1.HostDevice'\n          x-kubernetes-list-type:
    atomic\n        inputs:\n          type: array\n          description: Inputs
    describe input devices\n          items:\n            $ref: '#/components/schemas/v1.Input'\n
    \       interfaces:\n          type: array\n          description: Interfaces
    describe network interfaces which are added to the\n            vmi.\n          items:\n
    \           $ref: '#/components/schemas/v1.Interface'\n        logSerialConsole:\n
    \         type: boolean\n          description: Whether to log the auto-attached
    default serial console or\n            not. Serial console logs will be collect
    to a file and then streamed from\n            a named `guest-console-log`. Not
    relevant if autoattachSerialConsole is\n            disabled. Defaults to cluster
    wide setting on VirtualMachineOptions.\n        networkInterfaceMultiqueue:\n
    \         type: boolean\n          description: \"If specified, virtual network
    interfaces configured with a\\\n            \\ virtio bus will also enable the
    vhost multiqueue feature for network\\\n            \\ devices. The number of
    queues created depends on additional factors\\\n            \\ of the VirtualMachineInstance,
    like the number of guest CPUs.\"\n        rng:\n          $ref: '#/components/schemas/v1.Rng'\n
    \       sound:\n          $ref: '#/components/schemas/v1.SoundDevice'\n        tpm:\n
    \         $ref: '#/components/schemas/v1.TPMDevice'\n        useVirtioTransitional:\n
    \         type: boolean\n          description: Fall back to legacy virtio 0.9
    support if virtio bus is selected\n            on devices. This is helpful for
    old machines like CentOS6 or RHEL6 which\n            do not understand virtio_non_transitional
    (virtio 1.0).\n        watchdog:\n          $ref: '#/components/schemas/v1.Watchdog'\n
    \   v1.DisableFreePageReporting:\n      type: object\n    v1.DisableSerialConsoleLog:\n
    \     type: object\n    v1.Disk:\n      required:\n      - name\n      type: object\n
    \     properties:\n        blockSize:\n          $ref: '#/components/schemas/v1.BlockSize'\n
    \       bootOrder:\n          type: integer\n          description: \"BootOrder
    is an integer value > 0, used to determine ordering\\\n            \\ of boot
    devices. Lower values take precedence. Each disk or interface\\\n            \\
    that has a boot order must have a unique value. Disks without a boot\\\n            \\
    order are not tried if a disk with a boot order exists.\"\n          format: int32\n
    \       cache:\n          type: string\n          description: \"Cache specifies
    which kvm disk cache mode should be used.\\\n            \\ Supported values are:
    CacheNone, CacheWriteThrough.\"\n        cdrom:\n          $ref: '#/components/schemas/v1.CDRomTarget'\n
    \       dedicatedIOThread:\n          type: boolean\n          description: dedicatedIOThread
    indicates this disk should have an exclusive\n            IO Thread. Enabling
    this implies useIOThreads = true. Defaults to false.\n        disk:\n          $ref:
    '#/components/schemas/v1.DiskTarget'\n        errorPolicy:\n          type: string\n
    \         description: \"If specified, it can change the default error policy
    (stop)\\\n            \\ for the disk\"\n        io:\n          type: string\n
    \         description: \"IO specifies which QEMU disk IO mode should be used.
    Supported\\\n            \\ values are: native, default, threads.\"\n        lun:\n
    \         $ref: '#/components/schemas/v1.LunTarget'\n        name:\n          type:
    string\n          description: Name is the device name\n          default: \"\"\n
    \       serial:\n          type: string\n          description: Serial provides
    the ability to specify a serial number for\n            the disk device.\n        shareable:\n
    \         type: boolean\n          description: If specified the disk is made
    sharable and multiple write from\n            different VMs are permitted\n        tag:\n
    \         type: string\n          description: \"If specified, disk address and
    its tag will be provided to\\\n            \\ the guest via config drive metadata\"\n
    \   v1.DiskTarget:\n      type: object\n      properties:\n        bus:\n          type:
    string\n          description: \"Bus indicates the type of disk device to emulate.
    supported\\\n            \\ values: virtio, sata, scsi, usb.\"\n        pciAddress:\n
    \         type: string\n          description: \"If specified, the virtual disk
    will be placed on the guests\\\n            \\ pci address with the specified
    PCI address. For example: 0000:81:01.10\"\n        readonly:\n          type:
    boolean\n          description: ReadOnly. Defaults to false.\n    v1.DiskVerification:\n
    \     required:\n      - memoryLimit\n      type: object\n      properties:\n
    \       memoryLimit:\n          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.api.resource.Quantity'\n
    \     description: DiskVerification holds container disks verification limits\n
    \   v1.DomainMemoryDumpInfo:\n      type: object\n      properties:\n        claimName:\n
    \         type: string\n          description: ClaimName is the name of the pvc
    the memory was dumped to\n        endTimestamp:\n          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.Time'\n
    \       startTimestamp:\n          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.Time'\n
    \       targetFileName:\n          type: string\n          description: TargetFileName
    is the name of the memory dump output\n      description: DomainMemoryDumpInfo
    represents the memory dump information\n    v1.DomainSpec:\n      required:\n
    \     - devices\n      type: object\n      properties:\n        chassis:\n          $ref:
    '#/components/schemas/v1.Chassis'\n        clock:\n          $ref: '#/components/schemas/v1.Clock'\n
    \       cpu:\n          $ref: '#/components/schemas/v1.CPU'\n        devices:\n
    \         $ref: '#/components/schemas/v1.Devices'\n        features:\n          $ref:
    '#/components/schemas/v1.Features'\n        firmware:\n          $ref: '#/components/schemas/v1.Firmware'\n
    \       ioThreadsPolicy:\n          type: string\n          description: \"Controls
    whether or not disks will share IOThreads. Omitting\\\n            \\ IOThreadsPolicy
    disables use of IOThreads. One of: shared, auto\"\n        launchSecurity:\n          $ref:
    '#/components/schemas/v1.LaunchSecurity'\n        machine:\n          $ref: '#/components/schemas/v1.Machine'\n
    \       memory:\n          $ref: '#/components/schemas/v1.Memory'\n        resources:\n
    \         $ref: '#/components/schemas/v1.ResourceRequirements'\n    v1.DownwardAPIVolumeSource:\n
    \     type: object\n      properties:\n        fields:\n          type: array\n
    \         description: Fields is a list of downward API volume file\n          items:\n
    \           $ref: '#/components/schemas/k8s.io.api.core.v1.DownwardAPIVolumeFile'\n
    \       volumeLabel:\n          type: string\n          description: \"The volume
    label of the resulting disk inside the VMI. Different\\\n            \\ bootstrapping
    mechanisms require different values. Typical values are\\\n            \\ \\\"cidata\\\"
    (cloud-init), \\\"config-2\\\" (cloud-init) or \\\"OEMDRV\\\" (kickstart).\"\n
    \     description: DownwardAPIVolumeSource represents a volume containing downward\n
    \       API info.\n    v1.DownwardMetrics:\n      type: object\n    v1.DownwardMetricsVolumeSource:\n
    \     type: object\n      description: DownwardMetricsVolumeSource adds a very
    small disk to VMIs which\n        contains a limited view of host and guest metrics.
    The disk content is compatible\n        with vhostmd (https://github.com/vhostmd/vhostmd)
    and vm-dump-metrics.\n    v1.EFI:\n      type: object\n      properties:\n        persistent:\n
    \         type: boolean\n          description: \"If set to true, Persistent will
    persist the EFI NVRAM across\\\n            \\ reboots. Defaults to false\"\n
    \       secureBoot:\n          type: boolean\n          description: \"If set,
    SecureBoot will be enabled and the OVMF roms will\\\n            \\ be swapped
    for SecureBoot-enabled ones. Requires SMM to be enabled.\\\n            \\ Defaults
    to true\"\n      description: \"If set, EFI will be used instead of BIOS.\"\n
    \   v1.EmptyDiskSource:\n      required:\n      - capacity\n      type: object\n
    \     properties:\n        capacity:\n          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.api.resource.Quantity'\n
    \     description: EmptyDisk represents a temporary disk which shares the vmis
    lifecycle.\n    v1.EphemeralVolumeSource:\n      type: object\n      properties:\n
    \       persistentVolumeClaim:\n          $ref: '#/components/schemas/k8s.io.api.core.v1.PersistentVolumeClaimVolumeSource'\n
    \   v1.FeatureAPIC:\n      type: object\n      properties:\n        enabled:\n
    \         type: boolean\n          description: Enabled determines if the feature
    should be enabled or disabled\n            on the guest. Defaults to true.\n        endOfInterrupt:\n
    \         type: boolean\n          description: EndOfInterrupt enables the end
    of interrupt notification in\n            the guest. Defaults to false.\n    v1.FeatureHyperv:\n
    \     type: object\n      properties:\n        evmcs:\n          $ref: '#/components/schemas/v1.FeatureState'\n
    \       frequencies:\n          $ref: '#/components/schemas/v1.FeatureState'\n
    \       ipi:\n          $ref: '#/components/schemas/v1.FeatureState'\n        reenlightenment:\n
    \         $ref: '#/components/schemas/v1.FeatureState'\n        relaxed:\n          $ref:
    '#/components/schemas/v1.FeatureState'\n        reset:\n          $ref: '#/components/schemas/v1.FeatureState'\n
    \       runtime:\n          $ref: '#/components/schemas/v1.FeatureState'\n        spinlocks:\n
    \         $ref: '#/components/schemas/v1.FeatureSpinlocks'\n        synic:\n          $ref:
    '#/components/schemas/v1.FeatureState'\n        synictimer:\n          $ref: '#/components/schemas/v1.SyNICTimer'\n
    \       tlbflush:\n          $ref: '#/components/schemas/v1.FeatureState'\n        vapic:\n
    \         $ref: '#/components/schemas/v1.FeatureState'\n        vendorid:\n          $ref:
    '#/components/schemas/v1.FeatureVendorID'\n        vpindex:\n          $ref: '#/components/schemas/v1.FeatureState'\n
    \     description: Hyperv specific features.\n    v1.FeatureKVM:\n      type:
    object\n      properties:\n        hidden:\n          type: boolean\n          description:
    Hide the KVM hypervisor from standard MSR based discovery.\n            Defaults
    to false\n    v1.FeatureSpinlocks:\n      type: object\n      properties:\n        enabled:\n
    \         type: boolean\n          description: Enabled determines if the feature
    should be enabled or disabled\n            on the guest. Defaults to true.\n        spinlocks:\n
    \         type: integer\n          description: Retries indicates the number of
    retries. Must be a value greater\n            or equal 4096. Defaults to 4096.\n
    \         format: int64\n    v1.FeatureState:\n      type: object\n      properties:\n
    \       enabled:\n          type: boolean\n          description: Enabled determines
    if the feature should be enabled or disabled\n            on the guest. Defaults
    to true.\n      description: Represents if a feature is enabled or disabled.\n
    \   v1.FeatureVendorID:\n      type: object\n      properties:\n        enabled:\n
    \         type: boolean\n          description: Enabled determines if the feature
    should be enabled or disabled\n            on the guest. Defaults to true.\n        vendorid:\n
    \         type: string\n          description: \"VendorID sets the hypervisor
    vendor id, visible to the vmi.\\\n            \\ String up to twelve characters.\"\n
    \   v1.Features:\n      type: object\n      properties:\n        acpi:\n          $ref:
    '#/components/schemas/v1.FeatureState'\n        apic:\n          $ref: '#/components/schemas/v1.FeatureAPIC'\n
    \       hyperv:\n          $ref: '#/components/schemas/v1.FeatureHyperv'\n        hypervPassthrough:\n
    \         $ref: '#/components/schemas/v1.HyperVPassthrough'\n        kvm:\n          $ref:
    '#/components/schemas/v1.FeatureKVM'\n        pvspinlock:\n          $ref: '#/components/schemas/v1.FeatureState'\n
    \       smm:\n          $ref: '#/components/schemas/v1.FeatureState'\n    v1.Filesystem:\n
    \     required:\n      - name\n      - virtiofs\n      type: object\n      properties:\n
    \       name:\n          type: string\n          description: Name is the device
    name\n          default: \"\"\n        virtiofs:\n          $ref: '#/components/schemas/v1.FilesystemVirtiofs'\n
    \   v1.FilesystemVirtiofs:\n      type: object\n    v1.Firmware:\n      type:
    object\n      properties:\n        acpi:\n          $ref: '#/components/schemas/v1.ACPI'\n
    \       bootloader:\n          $ref: '#/components/schemas/v1.Bootloader'\n        kernelBoot:\n
    \         $ref: '#/components/schemas/v1.KernelBoot'\n        serial:\n          type:
    string\n          description: The system-serial-number in SMBIOS\n        uuid:\n
    \         type: string\n          description: UUID reported by the vmi bios.
    Defaults to a random generated\n            uid.\n    v1.Flags:\n      type: object\n
    \     properties:\n        api:\n          type: object\n          additionalProperties:\n
    \           type: string\n            default: \"\"\n        controller:\n          type:
    object\n          additionalProperties:\n            type: string\n            default:
    \"\"\n        handler:\n          type: object\n          additionalProperties:\n
    \           type: string\n            default: \"\"\n      description: Flags
    will create a patch that will replace all flags for the container's\n        command
    field. The only flags that will be used are those define. There are\n        no
    guarantees around forward/backward compatibility.  If set incorrectly this\n        will
    cause the resource when rolled out to error until flags are updated.\n    v1.FreezeUnfreezeTimeout:\n
    \     required:\n      - unfreezeTimeout\n      type: object\n      properties:\n
    \       unfreezeTimeout:\n          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.Duration'\n
    \     description: FreezeUnfreezeTimeout represent the time unfreeze will be triggered\n
    \       if guest was not unfrozen by unfreeze command\n    v1.GPU:\n      required:\n
    \     - deviceName\n      - name\n      type: object\n      properties:\n        deviceName:\n
    \         type: string\n          default: \"\"\n        name:\n          type:
    string\n          description: Name of the GPU device as exposed by a device plugin\n
    \         default: \"\"\n        tag:\n          type: string\n          description:
    \"If specified, the virtual network interface address and its\\\n            \\
    tag will be provided to the guest via config drive\"\n        virtualGPUOptions:\n
    \         $ref: '#/components/schemas/v1.VGPUOptions'\n    v1.GenerationStatus:\n
    \     required:\n      - group\n      - lastGeneration\n      - name\n      -
    resource\n      type: object\n      properties:\n        group:\n          type:
    string\n          description: group is the group of the thing you're tracking\n
    \         default: \"\"\n        hash:\n          type: string\n          description:
    hash is an optional field set for resources without generation\n            that
    are content sensitive like secrets and configmaps\n        lastGeneration:\n          type:
    integer\n          description: lastGeneration is the last generation of the workload
    controller\n            involved\n          format: int64\n          default:
    0\n        name:\n          type: string\n          description: name is the name
    of the thing you're tracking\n          default: \"\"\n        namespace:\n          type:
    string\n          description: namespace is where the thing you're tracking is\n
    \       resource:\n          type: string\n          description: resource is
    the resource type of the thing you're tracking\n          default: \"\"\n      description:
    GenerationStatus keeps track of the generation for a given resource\n        so
    that decisions about forced updates can be made.\n    v1.GuestAgentCommandInfo:\n
    \     required:\n      - name\n      type: object\n      properties:\n        enabled:\n
    \         type: boolean\n        name:\n          type: string\n          default:
    \"\"\n      description: List of commands that QEMU guest agent supports\n    v1.GuestAgentPing:\n
    \     type: object\n      description: GuestAgentPing configures the guest-agent
    based ping probe\n    v1.HPETTimer:\n      type: object\n      properties:\n        present:\n
    \         type: boolean\n          description: Enabled set to false makes sure
    that the machine type or a\n            preset can't add the timer. Defaults to
    true.\n        tickPolicy:\n          type: string\n          description: \"TickPolicy
    determines what happens when QEMU misses a deadline\\\n            \\ for injecting
    a tick to the guest. One of \\\"delay\\\", \\\"catchup\\\", \\\"\\\n            merge\\\",
    \\\"discard\\\".\"\n    v1.HostDevice:\n      required:\n      - deviceName\n
    \     - name\n      type: object\n      properties:\n        deviceName:\n          type:
    string\n          description: DeviceName is the resource name of the host device
    exposed\n            by a device plugin\n          default: \"\"\n        name:\n
    \         type: string\n          default: \"\"\n        tag:\n          type:
    string\n          description: \"If specified, the virtual network interface address
    and its\\\n            \\ tag will be provided to the guest via config drive\"\n
    \   v1.HostDisk:\n      required:\n      - path\n      - type\n      type: object\n
    \     properties:\n        capacity:\n          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.api.resource.Quantity'\n
    \       path:\n          type: string\n          description: The path to HostDisk
    image located on the cluster\n          default: \"\"\n        shared:\n          type:
    boolean\n          description: Shared indicate whether the path is shared between
    nodes\n        type:\n          type: string\n          description: Contains
    information if disk.img exists or should be created\n            allowed options
    are 'Disk' and 'DiskOrCreate'\n          default: \"\"\n      description: Represents
    a disk created on the cluster level\n    v1.HotplugVolumeSource:\n      type:
    object\n      properties:\n        dataVolume:\n          $ref: '#/components/schemas/v1.DataVolumeSource'\n
    \       persistentVolumeClaim:\n          $ref: '#/components/schemas/v1.PersistentVolumeClaimVolumeSource'\n
    \     description: HotplugVolumeSource Represents the source of a volume to mount\n
    \       which are capable of being hotplugged on a live running VMI. Only one
    of its\n        members may be specified.\n    v1.HotplugVolumeStatus:\n      type:
    object\n      properties:\n        attachPodName:\n          type: string\n          description:
    AttachPodName is the name of the pod used to attach the volume\n            to
    the node.\n        attachPodUID:\n          type: string\n          description:
    AttachPodUID is the UID of the pod used to attach the volume\n            to the
    node.\n      description: HotplugVolumeStatus represents the hotplug status of
    the volume\n    v1.Hugepages:\n      type: object\n      properties:\n        pageSize:\n
    \         type: string\n          description: \"PageSize specifies the hugepage
    size, for x86_64 architecture\\\n            \\ valid values are 1Gi and 2Mi.\"\n
    \     description: Hugepages allow to use hugepages for the VirtualMachineInstance\n
    \       instead of regular memory.\n    v1.HyperVPassthrough:\n      type: object\n
    \     properties:\n        enabled:\n          type: boolean\n    v1.HypervTimer:\n
    \     type: object\n      properties:\n        present:\n          type: boolean\n
    \         description: Enabled set to false makes sure that the machine type or
    a\n            preset can't add the timer. Defaults to true.\n    v1.I6300ESBWatchdog:\n
    \     type: object\n      properties:\n        action:\n          type: string\n
    \         description: \"The action to take. Valid values are poweroff, reset,
    shutdown.\\\n            \\ Defaults to reset.\"\n      description: i6300esb
    watchdog device.\n    v1.InitrdInfo:\n      type: object\n      properties:\n
    \       checksum:\n          type: integer\n          description: Checksum is
    the checksum of the initrd file\n          format: int64\n      description: InitrdInfo
    show info about the initrd file\n    v1.Input:\n      required:\n      - name\n
    \     - type\n      type: object\n      properties:\n        bus:\n          type:
    string\n          description: \"Bus indicates the bus of input device to emulate.
    Supported\\\n            \\ values: virtio, usb.\"\n        name:\n          type:
    string\n          description: Name is the device name\n          default: \"\"\n
    \       type:\n          type: string\n          description: \"Type indicated
    the type of input device. Supported values:\\\n            \\ tablet.\"\n          default:
    \"\"\n    v1.InstancetypeMatcher:\n      type: object\n      properties:\n        inferFromVolume:\n
    \         type: string\n          description: InferFromVolume lists the name
    of a volume that should be used\n            to infer or discover the instancetype
    to be used through known annotations\n            on the underlying resource.
    Once applied to the InstancetypeMatcher this\n            field is removed.\n
    \       inferFromVolumeFailurePolicy:\n          type: string\n          description:
    \"InferFromVolumeFailurePolicy controls what should happen on\\\n            \\
    failure when inferring the instancetype. Allowed values are: \\\"RejectInferFromVolumeFailure\\\"\\\n
    \           \\ and \\\"IgnoreInferFromVolumeFailure\\\". If not specified, \\\"RejectInferFromVolumeFailure\\\"\\\n
    \           \\ is used by default.\"\n        kind:\n          type: string\n
    \         description: \"Kind specifies which instancetype resource is referenced.\\\n
    \           \\ Allowed values are: \\\"VirtualMachineInstancetype\\\" and \\\"VirtualMachineClusterInstancetype\\\"\\\n
    \           . If not specified, \\\"VirtualMachineClusterInstancetype\\\" is used
    by default.\"\n        name:\n          type: string\n          description: Name
    is the name of the VirtualMachineInstancetype or VirtualMachineClusterInstancetype\n
    \       revisionName:\n          type: string\n          description: RevisionName
    specifies a ControllerRevision containing a specific\n            copy of the
    VirtualMachineInstancetype or VirtualMachineClusterInstancetype\n            to
    be used. This is initially captured the first time the instancetype\n            is
    applied to the VirtualMachineInstance.\n      description: InstancetypeMatcher
    references a instancetype that is used to fill\n        fields in the VMI template.\n
    \   v1.Interface:\n      required:\n      - name\n      type: object\n      properties:\n
    \       acpiIndex:\n          type: integer\n          description: \"If specified,
    the ACPI index is used to provide network interface\\\n            \\ device naming,
    that is stable across changes in PCI addresses assigned\\\n            \\ to the
    device. This value is required to be unique across all devices\\\n            \\
    and be between 1 and (16*1024-1).\"\n          format: int32\n        binding:\n
    \         $ref: '#/components/schemas/v1.PluginBinding'\n        bootOrder:\n
    \         type: integer\n          description: \"BootOrder is an integer value
    > 0, used to determine ordering\\\n            \\ of boot devices. Lower values
    take precedence. Each interface or disk\\\n            \\ that has a boot order
    must have a unique value. Interfaces without a\\\n            \\ boot order are
    not tried.\"\n          format: int32\n        bridge:\n          $ref: '#/components/schemas/v1.InterfaceBridge'\n
    \       dhcpOptions:\n          $ref: '#/components/schemas/v1.DHCPOptions'\n
    \       macAddress:\n          type: string\n          description: \"Interface
    MAC address. For example: de:ad:00:00:be:af or DE-AD-00-00-BE-AF.\"\n        macvtap:\n
    \         $ref: '#/components/schemas/v1.DeprecatedInterfaceMacvtap'\n        masquerade:\n
    \         $ref: '#/components/schemas/v1.InterfaceMasquerade'\n        model:\n
    \         type: string\n          description: \"Interface model. One of: e1000,
    e1000e, ne2k_pci, pcnet, rtl8139,\\\n            \\ virtio. Defaults to virtio.\"\n
    \       name:\n          type: string\n          description: Logical name of
    the interface as well as a reference to the\n            associated networks.
    Must match the Name of a Network.\n          default: \"\"\n        passt:\n          $ref:
    '#/components/schemas/v1.InterfacePasst'\n        pciAddress:\n          type:
    string\n          description: \"If specified, the virtual network interface will
    be placed\\\n            \\ on the guests pci address with the specified PCI address.
    For example:\\\n            \\ 0000:81:01.10\"\n        ports:\n          type:
    array\n          description: List of ports to be forwarded to the virtual machine.\n
    \         items:\n            $ref: '#/components/schemas/v1.Port'\n        slirp:\n
    \         $ref: '#/components/schemas/v1.DeprecatedInterfaceSlirp'\n        sriov:\n
    \         $ref: '#/components/schemas/v1.InterfaceSRIOV'\n        state:\n          type:
    string\n          description: \"State represents the requested operational state
    of the interface.\\\n            \\ The (only) value supported is `absent`, expressing
    a request to remove\\\n            \\ the interface.\"\n        tag:\n          type:
    string\n          description: \"If specified, the virtual network interface address
    and its\\\n            \\ tag will be provided to the guest via config drive\"\n
    \   v1.InterfaceBindingMigration:\n      type: object\n      properties:\n        method:\n
    \         type: string\n          description: \"Method defines a pre-defined
    migration methodology version:\\\n            \\ 1alphav1\"\n    v1.InterfaceBindingPlugin:\n
    \     type: object\n      properties:\n        domainAttachmentType:\n          type:
    string\n          description: \"DomainAttachmentType is a standard domain network
    attachment\\\n            \\ method kubevirt supports. Supported values: \\\"tap\\\".
    The standard domain\\\n            \\ attachment can be used instead or in addition
    to the sidecarImage. version:\\\n            \\ 1alphav1\"\n        downwardAPI:\n
    \         type: string\n          description: \"DownwardAPI specifies what kind
    of data should be exposed\\\n            \\ to the binding plugin sidecar. Supported
    values: \\\"device-info\\\" version:\\\n            \\ v1alphav1\"\n        migration:\n
    \         $ref: '#/components/schemas/v1.InterfaceBindingMigration'\n        networkAttachmentDefinition:\n
    \         type: string\n          description: \"NetworkAttachmentDefinition references
    to a NetworkAttachmentDefinition\\\n            \\ CR object. Format: <name>,
    <namespace>/<name>. If namespace is not specified,\\\n            \\ VMI namespace
    is assumed. version: 1alphav1\"\n        sidecarImage:\n          type: string\n
    \         description: \"SidecarImage references a container image that runs in
    the\\\n            \\ virt-launcher pod. The sidecar handles (libvirt) domain
    configuration\\\n            \\ and optional services. version: 1alphav1\"\n    v1.InterfaceBridge:\n
    \     type: object\n      description: InterfaceBridge connects to a given network
    via a linux bridge.\n    v1.InterfaceMasquerade:\n      type: object\n      description:
    InterfaceMasquerade connects to a given network using netfilter\n        rules
    to nat the traffic.\n    v1.InterfacePasst:\n      type: object\n      description:
    InterfacePasst connects to a given network.\n    v1.InterfaceSRIOV:\n      type:
    object\n      description: InterfaceSRIOV connects to a given network by passing-through
    an\n        SR-IOV PCI device via vfio.\n    v1.KSMConfiguration:\n      type:
    object\n      properties:\n        nodeLabelSelector:\n          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector'\n
    \     description: KSMConfiguration holds information about KSM.\n    v1.KVMTimer:\n
    \     type: object\n      properties:\n        present:\n          type: boolean\n
    \         description: Enabled set to false makes sure that the machine type or
    a\n            preset can't add the timer. Defaults to true.\n    v1.KernelBoot:\n
    \     type: object\n      properties:\n        container:\n          $ref: '#/components/schemas/v1.KernelBootContainer'\n
    \       kernelArgs:\n          type: string\n          description: Arguments
    to be passed to the kernel at boot time\n      description: \"Represents the firmware
    blob used to assist in the kernel boot\\\n        \\ process. Used for setting
    the kernel, initrd and command line arguments\"\n    v1.KernelBootContainer:\n
    \     required:\n      - image\n      type: object\n      properties:\n        image:\n
    \         type: string\n          description: Image that contains initrd / kernel
    files.\n          default: \"\"\n        imagePullPolicy:\n          type: string\n
    \         description: |-\n            Image pull policy. One of Always, Never,
    IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent
    otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images\n\n
    \           Possible enum values:\n             - `\"Always\"` means that kubelet
    always attempts to pull the latest image. Container will fail If the pull fails.\n
    \            - `\"IfNotPresent\"` means that kubelet pulls if the image isn't
    present on disk. Container will fail if the image isn't present and the pull fails.\n
    \            - `\"Never\"` means that kubelet never pulls an image, but only uses
    a local image. Container will fail if the image isn't present\n          enum:\n
    \         - Always\n          - IfNotPresent\n          - Never\n        imagePullSecret:\n
    \         type: string\n          description: ImagePullSecret is the name of
    the Docker registry secret required\n            to pull the image. The secret
    must already exist.\n        initrdPath:\n          type: string\n          description:
    the fully-qualified path to the ramdisk image in the host OS\n        kernelPath:\n
    \         type: string\n          description: The fully-qualified path to the
    kernel image in the host OS\n      description: \"If set, the VM will be booted
    from the defined kernel / initrd.\"\n    v1.KernelBootStatus:\n      type: object\n
    \     properties:\n        initrdInfo:\n          $ref: '#/components/schemas/v1.InitrdInfo'\n
    \       kernelInfo:\n          $ref: '#/components/schemas/v1.KernelInfo'\n      description:
    KernelBootStatus contains info about the kernelBootContainer\n    v1.KernelInfo:\n
    \     type: object\n      properties:\n        checksum:\n          type: integer\n
    \         description: Checksum is the checksum of the kernel image\n          format:
    int64\n      description: KernelInfo show info about the kernel image\n    v1.KubeVirt:\n
    \     required:\n      - spec\n      type: object\n      properties:\n        apiVersion:\n
    \         type: string\n          description: \"APIVersion defines the versioned
    schema of this representation\\\n            \\ of an object. Servers should convert
    recognized schemas to the latest\\\n            \\ internal value, and may reject
    unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\"\n
    \       kind:\n          type: string\n          description: \"Kind is a string
    value representing the REST resource this\\\n            \\ object represents.
    Servers may infer this from the endpoint the client\\\n            \\ submits
    requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"\n
    \       metadata:\n          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta'\n
    \       spec:\n          $ref: '#/components/schemas/v1.KubeVirtSpec'\n        status:\n
    \         $ref: '#/components/schemas/v1.KubeVirtStatus'\n      description: KubeVirt
    represents the object deploying all KubeVirt resources\n    v1.KubeVirtCertificateRotateStrategy:\n
    \     type: object\n      properties:\n        selfSigned:\n          $ref: '#/components/schemas/v1.KubeVirtSelfSignConfiguration'\n
    \   v1.KubeVirtCondition:\n      required:\n      - status\n      - type\n      type:
    object\n      properties:\n        message:\n          type: string\n        reason:\n
    \         type: string\n        status:\n          type: string\n          default:
    \"\"\n        type:\n          type: string\n          default: \"\"\n      description:
    KubeVirtCondition represents a condition of a KubeVirt deployment\n    v1.KubeVirtConfiguration:\n
    \     type: object\n      properties:\n        additionalGuestMemoryOverheadRatio:\n
    \         type: string\n          description: \"AdditionalGuestMemoryOverheadRatio
    can be used to increase\\\n            \\ the virtualization infrastructure overhead.
    This is useful, since the\\\n            \\ calculation of this overhead is not
    accurate and cannot be entirely\\\n            \\ known in advance. The ratio
    that is being set determines by which factor\\\n            \\ to increase the
    overhead calculated by Kubevirt. A higher ratio means\\\n            \\ that the
    VMs would be less compromised by node pressures, but would\\\n            \\ mean
    that fewer VMs could be scheduled to a node. If not set, the default\\\n            \\
    is 1.\"\n        apiConfiguration:\n          $ref: '#/components/schemas/v1.ReloadableComponentConfiguration'\n
    \       architectureConfiguration:\n          $ref: '#/components/schemas/v1.ArchConfiguration'\n
    \       autoCPULimitNamespaceLabelSelector:\n          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector'\n
    \       controllerConfiguration:\n          $ref: '#/components/schemas/v1.ReloadableComponentConfiguration'\n
    \       cpuModel:\n          type: string\n        cpuRequest:\n          $ref:
    '#/components/schemas/k8s.io.apimachinery.pkg.api.resource.Quantity'\n        defaultRuntimeClass:\n
    \         type: string\n        developerConfiguration:\n          $ref: '#/components/schemas/v1.DeveloperConfiguration'\n
    \       emulatedMachines:\n          type: array\n          description: Deprecated.
    Use architectureConfiguration instead.\n          items:\n            type: string\n
    \           default: \"\"\n        evictionStrategy:\n          type: string\n
    \         description: EvictionStrategy defines at the cluster level if the VirtualMachineInstance\n
    \           should be migrated instead of shut-off in case of a node drain. If
    the\n            VirtualMachineInstance specific field is set it overrides the
    cluster\n            level one.\n        handlerConfiguration:\n          $ref:
    '#/components/schemas/v1.ReloadableComponentConfiguration'\n        imagePullPolicy:\n
    \         type: string\n          description: |-\n            Possible enum values:\n
    \            - `\"Always\"` means that kubelet always attempts to pull the latest
    image. Container will fail If the pull fails.\n             - `\"IfNotPresent\"`
    means that kubelet pulls if the image isn't present on disk. Container will fail
    if the image isn't present and the pull fails.\n             - `\"Never\"` means
    that kubelet never pulls an image, but only uses a local image. Container will
    fail if the image isn't present\n          enum:\n          - Always\n          -
    IfNotPresent\n          - Never\n        ksmConfiguration:\n          $ref: '#/components/schemas/v1.KSMConfiguration'\n
    \       liveUpdateConfiguration:\n          $ref: '#/components/schemas/v1.LiveUpdateConfiguration'\n
    \       machineType:\n          type: string\n          description: Deprecated.
    Use architectureConfiguration instead.\n        mediatedDevicesConfiguration:\n
    \         $ref: '#/components/schemas/v1.MediatedDevicesConfiguration'\n        memBalloonStatsPeriod:\n
    \         type: integer\n          format: int64\n        migrations:\n          $ref:
    '#/components/schemas/v1.MigrationConfiguration'\n        minCPUModel:\n          type:
    string\n        network:\n          $ref: '#/components/schemas/v1.NetworkConfiguration'\n
    \       obsoleteCPUModels:\n          type: object\n          additionalProperties:\n
    \           type: boolean\n            default: false\n        ovmfPath:\n          type:
    string\n          description: Deprecated. Use architectureConfiguration instead.\n
    \       permittedHostDevices:\n          $ref: '#/components/schemas/v1.PermittedHostDevices'\n
    \       seccompConfiguration:\n          $ref: '#/components/schemas/v1.SeccompConfiguration'\n
    \       selinuxLauncherType:\n          type: string\n        smbios:\n          $ref:
    '#/components/schemas/v1.SMBiosConfiguration'\n        supportContainerResources:\n
    \         type: array\n          description: SupportContainerResources specifies
    the resource requirements\n            for various types of supporting containers
    such as container disks/virtiofs/sidecars\n            and hotplug attachment
    pods. If omitted a sensible default will be supplied.\n          items:\n            $ref:
    '#/components/schemas/v1.SupportContainerResources'\n          x-kubernetes-list-type:
    map\n          x-kubernetes-list-map-keys:\n          - type\n        supportedGuestAgentVersions:\n
    \         type: array\n          description: deprecated\n          items:\n            type:
    string\n            default: \"\"\n        tlsConfiguration:\n          $ref:
    '#/components/schemas/v1.TLSConfiguration'\n        virtualMachineInstancesPerNode:\n
    \         type: integer\n          format: int32\n        virtualMachineOptions:\n
    \         $ref: '#/components/schemas/v1.VirtualMachineOptions'\n        vmRolloutStrategy:\n
    \         type: string\n          description: VMRolloutStrategy defines how changes
    to a VM object propagate\n            to its VMI\n        vmStateStorageClass:\n
    \         type: string\n          description: \"VMStateStorageClass is the name
    of the storage class to use\\\n            \\ for the PVCs created to preserve
    VM state, like TPM. The storage class\\\n            \\ must support RWX in filesystem
    mode.\"\n        webhookConfiguration:\n          $ref: '#/components/schemas/v1.ReloadableComponentConfiguration'\n
    \     description: KubeVirtConfiguration holds all kubevirt configurations\n    v1.KubeVirtList:\n
    \     required:\n      - items\n      type: object\n      properties:\n        apiVersion:\n
    \         type: string\n          description: \"APIVersion defines the versioned
    schema of this representation\\\n            \\ of an object. Servers should convert
    recognized schemas to the latest\\\n            \\ internal value, and may reject
    unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\"\n
    \       items:\n          type: array\n          items:\n            $ref: '#/components/schemas/v1.KubeVirt'\n
    \       kind:\n          type: string\n          description: \"Kind is a string
    value representing the REST resource this\\\n            \\ object represents.
    Servers may infer this from the endpoint the client\\\n            \\ submits
    requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"\n
    \       metadata:\n          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta'\n
    \     description: KubeVirtList is a list of KubeVirts\n    v1.KubeVirtSelfSignConfiguration:\n
    \     type: object\n      properties:\n        ca:\n          $ref: '#/components/schemas/v1.CertConfig'\n
    \       caOverlapInterval:\n          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.Duration'\n
    \       caRotateInterval:\n          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.Duration'\n
    \       certRotateInterval:\n          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.Duration'\n
    \       server:\n          $ref: '#/components/schemas/v1.CertConfig'\n    v1.KubeVirtSpec:\n
    \     type: object\n      properties:\n        certificateRotateStrategy:\n          $ref:
    '#/components/schemas/v1.KubeVirtCertificateRotateStrategy'\n        configuration:\n
    \         $ref: '#/components/schemas/v1.KubeVirtConfiguration'\n        customizeComponents:\n
    \         $ref: '#/components/schemas/v1.CustomizeComponents'\n        imagePullPolicy:\n
    \         type: string\n          description: |-\n            The ImagePullPolicy
    to use.\n\n            Possible enum values:\n             - `\"Always\"` means
    that kubelet always attempts to pull the latest image. Container will fail If
    the pull fails.\n             - `\"IfNotPresent\"` means that kubelet pulls if
    the image isn't present on disk. Container will fail if the image isn't present
    and the pull fails.\n             - `\"Never\"` means that kubelet never pulls
    an image, but only uses a local image. Container will fail if the image isn't
    present\n          enum:\n          - Always\n          - IfNotPresent\n          -
    Never\n        imagePullSecrets:\n          type: array\n          description:
    The imagePullSecrets to pull the container images from Defaults\n            to
    none\n          items:\n            $ref: '#/components/schemas/k8s.io.api.core.v1.LocalObjectReference'\n
    \         x-kubernetes-list-type: atomic\n        imageRegistry:\n          type:
    string\n          description: The image registry to pull the container images
    from Defaults\n            to the same registry the operator's container image
    is pulled from.\n        imageTag:\n          type: string\n          description:
    The image tag to use for the continer images installed. Defaults\n            to
    the same tag as the operator's container image.\n        infra:\n          $ref:
    '#/components/schemas/v1.ComponentConfig'\n        monitorAccount:\n          type:
    string\n          description: The name of the Prometheus service account that
    needs read-access\n            to KubeVirt endpoints Defaults to prometheus-k8s\n
    \       monitorNamespace:\n          type: string\n          description: The
    namespace Prometheus is deployed in Defaults to openshift-monitor\n        productComponent:\n
    \         type: string\n          description: \"Designate the apps.kubevirt.io/component
    label for KubeVirt\\\n            \\ components. Useful if KubeVirt is included
    as part of a product. If\\\n            \\ ProductComponent is not specified,
    the component label default value\\\n            \\ is kubevirt.\"\n        productName:\n
    \         type: string\n          description: \"Designate the apps.kubevirt.io/part-of
    label for KubeVirt\\\n            \\ components. Useful if KubeVirt is included
    as part of a product. If\\\n            \\ ProductName is not specified, the part-of
    label will be omitted.\"\n        productVersion:\n          type: string\n          description:
    \"Designate the apps.kubevirt.io/version label for KubeVirt\\\n            \\
    components. Useful if KubeVirt is included as part of a product. If\\\n            \\
    ProductVersion is not specified, KubeVirt's version will be used.\"\n        serviceMonitorNamespace:\n
    \         type: string\n          description: |-\n            The namespace the
    service monitor will be deployed\n             When ServiceMonitorNamespace is
    set, then we'll install the service monitor object in that namespace\n            otherwise
    we will use the monitoring namespace.\n        uninstallStrategy:\n          type:
    string\n          description: Specifies if kubevirt can be deleted if workloads
    are still\n            present. This is mainly a precaution to avoid accidental
    data loss\n        workloadUpdateStrategy:\n          $ref: '#/components/schemas/v1.KubeVirtWorkloadUpdateStrategy'\n
    \       workloads:\n          $ref: '#/components/schemas/v1.ComponentConfig'\n
    \   v1.KubeVirtStatus:\n      type: object\n      properties:\n        conditions:\n
    \         type: array\n          items:\n            $ref: '#/components/schemas/v1.KubeVirtCondition'\n
    \       defaultArchitecture:\n          type: string\n        generations:\n          type:
    array\n          items:\n            $ref: '#/components/schemas/v1.GenerationStatus'\n
    \         x-kubernetes-list-type: atomic\n        observedDeploymentConfig:\n
    \         type: string\n        observedDeploymentID:\n          type: string\n
    \       observedGeneration:\n          type: integer\n          format: int64\n
    \       observedKubeVirtRegistry:\n          type: string\n        observedKubeVirtVersion:\n
    \         type: string\n        operatorVersion:\n          type: string\n        outdatedVirtualMachineInstanceWorkloads:\n
    \         type: integer\n          format: int32\n        phase:\n          type:
    string\n        targetDeploymentConfig:\n          type: string\n        targetDeploymentID:\n
    \         type: string\n        targetKubeVirtRegistry:\n          type: string\n
    \       targetKubeVirtVersion:\n          type: string\n      description: KubeVirtStatus
    represents information pertaining to a KubeVirt\n        deployment.\n    v1.KubeVirtWorkloadUpdateStrategy:\n
    \     type: object\n      properties:\n        batchEvictionInterval:\n          $ref:
    '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.Duration'\n        batchEvictionSize:\n
    \         type: integer\n          description: |-\n            BatchEvictionSize
    Represents the number of VMIs that can be forced updated per the BatchShutdownInteral
    interval\n\n            Defaults to 10\n          format: int32\n        workloadUpdateMethods:\n
    \         type: array\n          description: |-\n            WorkloadUpdateMethods
    defines the methods that can be used to disrupt workloads during automated workload
    updates. When multiple methods are present, the least disruptive method takes
    precedence over more disruptive methods. For example if both LiveMigrate and Shutdown
    methods are listed, only VMs which are not live migratable will be restarted/shutdown\n\n
    \           An empty list defaults to no automated workload updating\n          items:\n
    \           type: string\n            default: \"\"\n          x-kubernetes-list-type:
    atomic\n      description: KubeVirtWorkloadUpdateStrategy defines options related
    to updating\n        a KubeVirt install\n    v1.LaunchSecurity:\n      type: object\n
    \     properties:\n        sev:\n          $ref: '#/components/schemas/v1.SEV'\n
    \   v1.LiveUpdateConfiguration:\n      type: object\n      properties:\n        maxCpuSockets:\n
    \         type: integer\n          description: MaxCpuSockets holds the maximum
    amount of sockets that can\n            be hotplugged\n          format: int64\n
    \       maxGuest:\n          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.api.resource.Quantity'\n
    \       maxHotplugRatio:\n          type: integer\n          description: \"MaxHotplugRatio
    is the ratio used to define the max amount\\\n            \\ of a hotplug resource
    that can be made available to a VM when the specific\\\n            \\ Max* setting
    is not defined (MaxCpuSockets, MaxGuest) Example: VM is\\\n            \\ configured
    with 512Mi of guest memory, if MaxGuest is not defined and\\\n            \\ MaxHotplugRatio
    is 2 then MaxGuest = 1Gi defaults to 4\"\n          format: int64\n    v1.LogVerbosity:\n
    \     type: object\n      properties:\n        nodeVerbosity:\n          type:
    object\n          additionalProperties:\n            type: integer\n            format:
    int32\n            default: 0\n          description: NodeVerbosity represents
    a map of nodes with a specific verbosity\n            level\n        virtAPI:\n
    \         type: integer\n          format: int32\n        virtController:\n          type:
    integer\n          format: int32\n        virtHandler:\n          type: integer\n
    \         format: int32\n        virtLauncher:\n          type: integer\n          format:
    int32\n        virtOperator:\n          type: integer\n          format: int32\n
    \     description: LogVerbosity sets log verbosity level of  various components\n
    \   v1.LunTarget:\n      type: object\n      properties:\n        bus:\n          type:
    string\n          description: \"Bus indicates the type of disk device to emulate.
    supported\\\n            \\ values: virtio, sata, scsi.\"\n        readonly:\n
    \         type: boolean\n          description: ReadOnly. Defaults to false.\n
    \       reservation:\n          type: boolean\n          description: Reservation
    indicates if the disk needs to support the persistent\n            reservation
    for the SCSI disk\n    v1.Machine:\n      type: object\n      properties:\n        type:\n
    \         type: string\n          description: QEMU machine type is the actual
    chipset of the VirtualMachineInstance.\n          default: \"\"\n    v1.MediatedDevicesConfiguration:\n
    \     type: object\n      properties:\n        mediatedDeviceTypes:\n          type:
    array\n          items:\n            type: string\n            default: \"\"\n
    \         x-kubernetes-list-type: atomic\n        mediatedDevicesTypes:\n          type:
    array\n          description: Deprecated. Use mediatedDeviceTypes instead.\n          items:\n
    \           type: string\n            default: \"\"\n          x-kubernetes-list-type:
    atomic\n        nodeMediatedDeviceTypes:\n          type: array\n          items:\n
    \           $ref: '#/components/schemas/v1.NodeMediatedDeviceTypesConfig'\n          x-kubernetes-list-type:
    atomic\n      description: \"MediatedDevicesConfiguration holds information about
    MDEV types\\\n        \\ to be defined, if available\"\n    v1.MediatedHostDevice:\n
    \     required:\n      - mdevNameSelector\n      - resourceName\n      type: object\n
    \     properties:\n        externalResourceProvider:\n          type: boolean\n
    \       mdevNameSelector:\n          type: string\n          default: \"\"\n        resourceName:\n
    \         type: string\n          default: \"\"\n      description: MediatedHostDevice
    represents a host mediated device allowed for\n        passthrough\n    v1.Memory:\n
    \     type: object\n      properties:\n        guest:\n          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.api.resource.Quantity'\n
    \       hugepages:\n          $ref: '#/components/schemas/v1.Hugepages'\n        maxGuest:\n
    \         $ref: '#/components/schemas/k8s.io.apimachinery.pkg.api.resource.Quantity'\n
    \     description: Memory allows specifying the VirtualMachineInstance memory
    features.\n    v1.MemoryDumpVolumeSource:\n      required:\n      - claimName\n
    \     type: object\n      properties:\n        claimName:\n          type: string\n
    \         description: \"claimName is the name of a PersistentVolumeClaim in the
    same\\\n            \\ namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims\"\n
    \         default: \"\"\n        hotpluggable:\n          type: boolean\n          description:
    Hotpluggable indicates whether the volume can be hotplugged\n            and hotunplugged.\n
    \       readOnly:\n          type: boolean\n          description: readOnly Will
    force the ReadOnly setting in VolumeMounts. Default\n            false.\n    v1.MemoryStatus:\n
    \     type: object\n      properties:\n        guestAtBoot:\n          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.api.resource.Quantity'\n
    \       guestCurrent:\n          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.api.resource.Quantity'\n
    \       guestRequested:\n          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.api.resource.Quantity'\n
    \   v1.MigrateOptions:\n      type: object\n      properties:\n        apiVersion:\n
    \         type: string\n          description: \"APIVersion defines the versioned
    schema of this representation\\\n            \\ of an object. Servers should convert
    recognized schemas to the latest\\\n            \\ internal value, and may reject
    unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\"\n
    \       dryRun:\n          type: array\n          description: \"When present,
    indicates that modifications should not be persisted.\\\n            \\ An invalid
    or unrecognized dryRun directive will result in an error\\\n            \\ response
    and no further processing of the request. Valid values are:\\\n            \\
    - All: all dry run stages will be processed\"\n          items:\n            type:
    string\n            default: \"\"\n          x-kubernetes-list-type: atomic\n
    \       kind:\n          type: string\n          description: \"Kind is a string
    value representing the REST resource this\\\n            \\ object represents.
    Servers may infer this from the endpoint the client\\\n            \\ submits
    requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"\n
    \     description: MigrateOptions may be provided on migrate request.\n    v1.MigrationConfiguration:\n
    \     type: object\n      properties:\n        allowAutoConverge:\n          type:
    boolean\n          description: AllowAutoConverge allows the platform to compromise
    performance/availability\n            of VMIs to guarantee successful VMI live
    migrations. Defaults to false\n        allowPostCopy:\n          type: boolean\n
    \         description: \"AllowPostCopy enables post-copy live migrations. Such
    migrations\\\n            \\ allow even the busiest VMIs to successfully live-migrate.
    However, events\\\n            \\ like a network failure can cause a VMI crash.
    If set to true, migrations\\\n            \\ will still start in pre-copy, but
    switch to post-copy when CompletionTimeoutPerGiB\\\n            \\ triggers. Defaults
    to false\"\n        bandwidthPerMigration:\n          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.api.resource.Quantity'\n
    \       completionTimeoutPerGiB:\n          type: integer\n          description:
    \"CompletionTimeoutPerGiB is the maximum number of seconds per\\\n            \\
    GiB a migration is allowed to take. If a live-migration takes longer\\\n            \\
    to migrate than this value multiplied by the size of the VMI, the migration\\\n
    \           \\ will be cancelled, unless AllowPostCopy is true. Defaults to 800\"\n
    \         format: int64\n        disableTLS:\n          type: boolean\n          description:
    \"When set to true, DisableTLS will disable the additional layer\\\n            \\
    of live migration encryption provided by KubeVirt. This is usually a\\\n            \\
    bad idea. Defaults to false\"\n        matchSELinuxLevelOnMigration:\n          type:
    boolean\n          description: \"By default, the SELinux level of target virt-launcher
    pods\\\n            \\ is forced to the level of the source virt-launcher. When
    set to true,\\\n            \\ MatchSELinuxLevelOnMigration lets the CRI auto-assign
    a random level\\\n            \\ to the target. That will ensure the target virt-launcher
    doesn't share\\\n            \\ categories with another pod on the node. However,
    migrations will fail\\\n            \\ when using RWX volumes that don't automatically
    deal with SELinux levels.\"\n        network:\n          type: string\n          description:
    \"Network is the name of the CNI network to use for live migrations.\\\n            \\
    By default, migrations go through the pod network.\"\n        nodeDrainTaintKey:\n
    \         type: string\n          description: \"NodeDrainTaintKey defines the
    taint key that indicates a node\\\n            \\ should be drained. Note: this
    option relies on the deprecated node taint\\\n            \\ feature. Default:
    kubevirt.io/drain\"\n        parallelMigrationsPerCluster:\n          type: integer\n
    \         description: ParallelMigrationsPerCluster is the total number of concurrent\n
    \           live migrations allowed cluster-wide. Defaults to 5\n          format:
    int64\n        parallelOutboundMigrationsPerNode:\n          type: integer\n          description:
    ParallelOutboundMigrationsPerNode is the maximum number of\n            concurrent
    outgoing live migrations allowed per node. Defaults to 2\n          format: int64\n
    \       progressTimeout:\n          type: integer\n          description: ProgressTimeout
    is the maximum number of seconds a live migration\n            is allowed to make
    no progress. Hitting this timeout means a migration\n            transferred 0
    data for that many seconds. The migration is then considered\n            stuck
    and therefore cancelled. Defaults to 150\n          format: int64\n        unsafeMigrationOverride:\n
    \         type: boolean\n          description: UnsafeMigrationOverride allows
    live migrations to occur even\n            if the compatibility check indicates
    the migration will be unsafe to the\n            guest. Defaults to false\n      description:
    MigrationConfiguration holds migration options. Can be overridden\n        for
    specific groups of VMs though migration policies. Visit https://kubevirt.io/user-guide/operations/migration_policies/\n
    \       for more information.\n    v1.MultusNetwork:\n      required:\n      -
    networkName\n      type: object\n      properties:\n        default:\n          type:
    boolean\n          description: Select the default network and add it to the multus-cni.io/default-network\n
    \           annotation.\n        networkName:\n          type: string\n          description:
    \"References to a NetworkAttachmentDefinition CRD object. Format:\\\n            \\
    <networkName>, <namespace>/<networkName>. If namespace is not specified,\\\n            \\
    VMI namespace is assumed.\"\n          default: \"\"\n      description: Represents
    the multus cni network.\n    v1.NUMA:\n      type: object\n      properties:\n
    \       guestMappingPassthrough:\n          $ref: '#/components/schemas/v1.NUMAGuestMappingPassthrough'\n
    \   v1.NUMAGuestMappingPassthrough:\n      type: object\n      description: \"NUMAGuestMappingPassthrough
    instructs kubevirt to model numa topology\\\n        \\ which is compatible with
    the CPU pinning on the guest. This will result\\\n        \\ in a subset of the
    node numa topology being passed through, ensuring that\\\n        \\ virtual numa
    nodes and their memory never cross boundaries coming from the\\\n        \\ node
    numa mapping.\"\n    v1.Network:\n      required:\n      - name\n      type: object\n
    \     properties:\n        multus:\n          $ref: '#/components/schemas/v1.MultusNetwork'\n
    \       name:\n          type: string\n          description: \"Network name.
    Must be a DNS_LABEL and unique within the vm.\\\n            \\ More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"\n
    \         default: \"\"\n        pod:\n          $ref: '#/components/schemas/v1.PodNetwork'\n
    \     description: Network represents a network type and a resource that should
    be\n        connected to the vm.\n    v1.NetworkConfiguration:\n      type: object\n
    \     properties:\n        binding:\n          type: object\n          additionalProperties:\n
    \           $ref: '#/components/schemas/v1.InterfaceBindingPlugin'\n        defaultNetworkInterface:\n
    \         type: string\n        permitBridgeInterfaceOnPodNetwork:\n          type:
    boolean\n        permitSlirpInterface:\n          type: boolean\n          description:
    \"DeprecatedPermitSlirpInterface is an alias for the deprecated\\\n            \\
    PermitSlirpInterface. Deprecated: Removed in v1.3.\"\n      description: NetworkConfiguration
    holds network options\n    v1.NoCloudSSHPublicKeyAccessCredentialPropagation:\n
    \     type: object\n    v1.NodeMediatedDeviceTypesConfig:\n      required:\n      -
    nodeSelector\n      type: object\n      properties:\n        mediatedDeviceTypes:\n
    \         type: array\n          items:\n            type: string\n            default:
    \"\"\n          x-kubernetes-list-type: atomic\n        mediatedDevicesTypes:\n
    \         type: array\n          description: Deprecated. Use mediatedDeviceTypes
    instead.\n          items:\n            type: string\n            default: \"\"\n
    \         x-kubernetes-list-type: atomic\n        nodeSelector:\n          type:
    object\n          additionalProperties:\n            type: string\n            default:
    \"\"\n          description: \"NodeSelector is a selector which must be true for
    the vmi\\\n            \\ to fit on a node. Selector which must match a node's
    labels for the\\\n            \\ vmi to be scheduled on that node. More info:
    https://kubernetes.io/docs/concepts/configuration/assign-pod-node/\"\n      description:
    NodeMediatedDeviceTypesConfig holds information about MDEV types\n        to be
    defined in a specific node that matches the NodeSelector field.\n    v1.NodePlacement:\n
    \     type: object\n      properties:\n        affinity:\n          $ref: '#/components/schemas/k8s.io.api.core.v1.Affinity'\n
    \       nodeSelector:\n          type: object\n          additionalProperties:\n
    \           type: string\n            default: \"\"\n          description: \"nodeSelector
    is the node selector applied to the relevant\\\n            \\ kind of pods It
    specifies a map of key-value pairs: for the pod to be\\\n            \\ eligible
    to run on a node, the node must have each of the indicated\\\n            \\ key-value
    pairs as labels (it can have additional labels as well). See\\\n            \\
    https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector\"\n
    \       tolerations:\n          type: array\n          description: tolerations
    is a list of tolerations applied to the relevant\n            kind of pods See
    https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/\n            for
    more info. These are additional tolerations other than default ones.\n          items:\n
    \           $ref: '#/components/schemas/k8s.io.api.core.v1.Toleration'\n      description:
    NodePlacement describes node scheduling configuration.\n    v1.PITTimer:\n      type:
    object\n      properties:\n        present:\n          type: boolean\n          description:
    Enabled set to false makes sure that the machine type or a\n            preset
    can't add the timer. Defaults to true.\n        tickPolicy:\n          type: string\n
    \         description: \"TickPolicy determines what happens when QEMU misses a
    deadline\\\n            \\ for injecting a tick to the guest. One of \\\"delay\\\",
    \\\"catchup\\\", \\\"\\\n            discard\\\".\"\n    v1.PauseOptions:\n      type:
    object\n      properties:\n        apiVersion:\n          type: string\n          description:
    \"APIVersion defines the versioned schema of this representation\\\n            \\
    of an object. Servers should convert recognized schemas to the latest\\\n            \\
    internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\"\n
    \       dryRun:\n          type: array\n          description: \"When present,
    indicates that modifications should not be persisted.\\\n            \\ An invalid
    or unrecognized dryRun directive will result in an error\\\n            \\ response
    and no further processing of the request. Valid values are:\\\n            \\
    - All: all dry run stages will be processed\"\n          items:\n            type:
    string\n            default: \"\"\n          x-kubernetes-list-type: atomic\n
    \       kind:\n          type: string\n          description: \"Kind is a string
    value representing the REST resource this\\\n            \\ object represents.
    Servers may infer this from the endpoint the client\\\n            \\ submits
    requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"\n
    \     description: PauseOptions may be provided on pause request.\n    v1.PciHostDevice:\n
    \     required:\n      - pciVendorSelector\n      - resourceName\n      type:
    object\n      properties:\n        externalResourceProvider:\n          type:
    boolean\n          description: \"If true, KubeVirt will leave the allocation
    and monitoring\\\n            \\ to an external device plugin\"\n        pciVendorSelector:\n
    \         type: string\n          description: The vendor_id:product_id tuple
    of the PCI device\n          default: \"\"\n        resourceName:\n          type:
    string\n          description: The name of the resource that is representing the
    device. Exposed\n            by a device plugin and requested by VMs. Typically
    of the form vendor.com/product_name\n          default: \"\"\n      description:
    PciHostDevice represents a host PCI device allowed for passthrough\n    v1.PermittedHostDevices:\n
    \     type: object\n      properties:\n        mediatedDevices:\n          type:
    array\n          items:\n            $ref: '#/components/schemas/v1.MediatedHostDevice'\n
    \         x-kubernetes-list-type: atomic\n        pciHostDevices:\n          type:
    array\n          items:\n            $ref: '#/components/schemas/v1.PciHostDevice'\n
    \         x-kubernetes-list-type: atomic\n        usb:\n          type: array\n
    \         items:\n            $ref: '#/components/schemas/v1.USBHostDevice'\n
    \         x-kubernetes-list-type: atomic\n      description: PermittedHostDevices
    holds information about devices allowed for\n        passthrough\n    v1.PersistentVolumeClaimInfo:\n
    \     type: object\n      properties:\n        accessModes:\n          type: array\n
    \         description: \"AccessModes contains the desired access modes the volume
    should\\\n            \\ have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1\"\n
    \         items:\n            type: string\n            default: \"\"\n          x-kubernetes-list-type:
    atomic\n        capacity:\n          type: object\n          additionalProperties:\n
    \           $ref: '#/components/schemas/k8s.io.apimachinery.pkg.api.resource.Quantity'\n
    \         description: Capacity represents the capacity set on the corresponding
    PVC\n            status\n        filesystemOverhead:\n          type: string\n
    \         description: Percentage of filesystem's size to be reserved when resizing\n
    \           the PVC\n        preallocated:\n          type: boolean\n          description:
    Preallocated indicates if the PVC's storage is preallocated\n            or not\n
    \       requests:\n          type: object\n          additionalProperties:\n            $ref:
    '#/components/schemas/k8s.io.apimachinery.pkg.api.resource.Quantity'\n          description:
    Requests represents the resources requested by the corresponding\n            PVC
    spec\n        volumeMode:\n          type: string\n          description: |-\n
    \           VolumeMode defines what type of volume is required by the claim. Value
    of Filesystem is implied when not included in claim spec.\n\n            Possible
    enum values:\n             - `\"Block\"` means the volume will not be formatted
    with a filesystem and will remain a raw block device.\n             - `\"Filesystem\"`
    means the volume will be or is formatted with a filesystem.\n          enum:\n
    \         - Block\n          - Filesystem\n      description: PersistentVolumeClaimInfo
    contains the relavant information virt-handler\n        needs cached about a PVC\n
    \   v1.PersistentVolumeClaimVolumeSource:\n      required:\n      - claimName\n
    \     type: object\n      properties:\n        claimName:\n          type: string\n
    \         description: \"claimName is the name of a PersistentVolumeClaim in the
    same\\\n            \\ namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims\"\n
    \         default: \"\"\n        hotpluggable:\n          type: boolean\n          description:
    Hotpluggable indicates whether the volume can be hotplugged\n            and hotunplugged.\n
    \       readOnly:\n          type: boolean\n          description: readOnly Will
    force the ReadOnly setting in VolumeMounts. Default\n            false.\n      description:
    \"PersistentVolumeClaimVolumeSource represents a reference to a\\\n        \\
    PersistentVolumeClaim in the same namespace. Directly attached to the vmi\\\n
    \       \\ via qemu. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims\"\n
    \   v1.PluginBinding:\n      required:\n      - name\n      type: object\n      properties:\n
    \       name:\n          type: string\n          description: \"Name references
    to the binding name as denined in the kubevirt\\\n            \\ CR. version:
    1alphav1\"\n          default: \"\"\n      description: PluginBinding represents
    a binding implemented in a plugin.\n    v1.PodNetwork:\n      type: object\n      properties:\n
    \       vmIPv6NetworkCIDR:\n          type: string\n          description: IPv6
    CIDR for the vm network. Defaults to fd10:0:2::/120 if\n            not specified.\n
    \       vmNetworkCIDR:\n          type: string\n          description: CIDR for
    vm network. Default 10.0.2.0/24 if not specified.\n      description: Represents
    the stock pod network interface.\n    v1.Port:\n      required:\n      - port\n
    \     type: object\n      properties:\n        name:\n          type: string\n
    \         description: \"If specified, this must be an IANA_SVC_NAME and unique
    within\\\n            \\ the pod. Each named port in a pod must have a unique
    name. Name for\\\n            \\ the port that can be referred to by services.\"\n
    \       port:\n          type: integer\n          description: \"Number of port
    to expose for the virtual machine. This must\\\n            \\ be a valid port
    number, 0 < x < 65536.\"\n          format: int32\n          default: 0\n        protocol:\n
    \         type: string\n          description: Protocol for port. Must be UDP
    or TCP. Defaults to \"TCP\".\n      description: Port represents a port to expose
    from the virtual machine. Default\n        protocol TCP. The port field is mandatory\n
    \   v1.PreferenceMatcher:\n      type: object\n      properties:\n        inferFromVolume:\n
    \         type: string\n          description: InferFromVolume lists the name
    of a volume that should be used\n            to infer or discover the preference
    to be used through known annotations\n            on the underlying resource.
    Once applied to the PreferenceMatcher this\n            field is removed.\n        inferFromVolumeFailurePolicy:\n
    \         type: string\n          description: \"InferFromVolumeFailurePolicy
    controls what should happen on\\\n            \\ failure when preference the instancetype.
    Allowed values are: \\\"RejectInferFromVolumeFailure\\\"\\\n            \\ and
    \\\"IgnoreInferFromVolumeFailure\\\". If not specified, \\\"RejectInferFromVolumeFailure\\\"\\\n
    \           \\ is used by default.\"\n        kind:\n          type: string\n
    \         description: \"Kind specifies which preference resource is referenced.
    Allowed\\\n            \\ values are: \\\"VirtualMachinePreference\\\" and \\\"VirtualMachineClusterPreference\\\"\\\n
    \           . If not specified, \\\"VirtualMachineClusterPreference\\\" is used
    by default.\"\n        name:\n          type: string\n          description: Name
    is the name of the VirtualMachinePreference or VirtualMachineClusterPreference\n
    \       revisionName:\n          type: string\n          description: RevisionName
    specifies a ControllerRevision containing a specific\n            copy of the
    VirtualMachinePreference or VirtualMachineClusterPreference\n            to be
    used. This is initially captured the first time the instancetype\n            is
    applied to the VirtualMachineInstance.\n      description: PreferenceMatcher references
    a set of preference that is used to\n        fill fields in the VMI template.\n
    \   v1.Probe:\n      type: object\n      properties:\n        exec:\n          $ref:
    '#/components/schemas/k8s.io.api.core.v1.ExecAction'\n        failureThreshold:\n
    \         type: integer\n          description: Minimum consecutive failures for
    the probe to be considered\n            failed after having succeeded. Defaults
    to 3. Minimum value is 1.\n          format: int32\n        guestAgentPing:\n
    \         $ref: '#/components/schemas/v1.GuestAgentPing'\n        httpGet:\n          $ref:
    '#/components/schemas/k8s.io.api.core.v1.HTTPGetAction'\n        initialDelaySeconds:\n
    \         type: integer\n          description: \"Number of seconds after the
    VirtualMachineInstance has started\\\n            \\ before liveness probes are
    initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes\"\n
    \         format: int32\n        periodSeconds:\n          type: integer\n          description:
    How often (in seconds) to perform the probe. Default to 10\n            seconds.
    Minimum value is 1.\n          format: int32\n        successThreshold:\n          type:
    integer\n          description: Minimum consecutive successes for the probe to
    be considered\n            successful after having failed. Defaults to 1. Must
    be 1 for liveness.\n            Minimum value is 1.\n          format: int32\n
    \       tcpSocket:\n          $ref: '#/components/schemas/k8s.io.api.core.v1.TCPSocketAction'\n
    \       timeoutSeconds:\n          type: integer\n          description: \"Number
    of seconds after which the probe times out. For exec\\\n            \\ probes
    the timeout fails the probe but does not terminate the command\\\n            \\
    running on the guest. This means a blocking command can result in an\\\n            \\
    increasing load on the guest. A small buffer will be added to the resulting\\\n
    \           \\ workload exec probe to compensate for delays caused by the qemu
    guest\\\n            \\ exec mechanism. Defaults to 1 second. Minimum value is
    1. More info:\\\n            \\ https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes\"\n
    \         format: int32\n      description: Probe describes a health check to
    be performed against a VirtualMachineInstance\n        to determine whether it
    is alive or ready to receive traffic.\n    v1.QemuGuestAgentSSHPublicKeyAccessCredentialPropagation:\n
    \     required:\n      - users\n      type: object\n      properties:\n        users:\n
    \         type: array\n          description: Users represents a list of guest
    users that should have the\n            ssh public keys added to their authorized_keys
    file.\n          items:\n            type: string\n            default: \"\"\n
    \         x-kubernetes-list-type: set\n    v1.QemuGuestAgentUserPasswordAccessCredentialPropagation:\n
    \     type: object\n    v1.RESTClientConfiguration:\n      type: object\n      properties:\n
    \       rateLimiter:\n          $ref: '#/components/schemas/v1.RateLimiter'\n
    \     description: RESTClientConfiguration allows configuring certain aspects
    of the\n        k8s rest client.\n    v1.RTCTimer:\n      type: object\n      properties:\n
    \       present:\n          type: boolean\n          description: Enabled set
    to false makes sure that the machine type or a\n            preset can't add the
    timer. Defaults to true.\n        tickPolicy:\n          type: string\n          description:
    \"TickPolicy determines what happens when QEMU misses a deadline\\\n            \\
    for injecting a tick to the guest. One of \\\"delay\\\", \\\"catchup\\\".\"\n
    \       track:\n          type: string\n          description: Track the guest
    or the wall clock.\n    v1.RateLimiter:\n      type: object\n      properties:\n
    \       tokenBucketRateLimiter:\n          $ref: '#/components/schemas/v1.TokenBucketRateLimiter'\n
    \   v1.Realtime:\n      type: object\n      properties:\n        mask:\n          type:
    string\n          description: \"Mask defines the vcpu mask expression that defines
    which vcpus\\\n            \\ are used for realtime. Format matches libvirt's
    expressions. Example:\\\n            \\ \\\"0-3,^1\\\",\\\"0,2,3\\\",\\\"2-3\\\"\"\n
    \     description: Realtime holds the tuning knobs specific for realtime workloads.\n
    \   v1.ReloadableComponentConfiguration:\n      type: object\n      properties:\n
    \       restClient:\n          $ref: '#/components/schemas/v1.RESTClientConfiguration'\n
    \     description: ReloadableComponentConfiguration holds all generic k8s configuration\n
    \       options which can be reloaded by components without requiring a restart.\n
    \   v1.RemoveVolumeOptions:\n      required:\n      - name\n      type: object\n
    \     properties:\n        dryRun:\n          type: array\n          description:
    \"When present, indicates that modifications should not be persisted.\\\n            \\
    An invalid or unrecognized dryRun directive will result in an error\\\n            \\
    response and no further processing of the request. Valid values are:\\\n            \\
    - All: all dry run stages will be processed\"\n          items:\n            type:
    string\n            default: \"\"\n          x-kubernetes-list-type: atomic\n
    \       name:\n          type: string\n          description: Name represents
    the name that maps to both the disk and volume\n            that should be removed\n
    \         default: \"\"\n      description: RemoveVolumeOptions is provided when
    dynamically hot unplugging\n        volume and disk\n    v1.ResourceRequirements:\n
    \     type: object\n      properties:\n        limits:\n          type: object\n
    \         properties: {}\n          description: Limits describes the maximum
    amount of compute resources allowed.\n            Valid resource keys are \"memory\"
    and \"cpu\".\n        overcommitGuestOverhead:\n          type: boolean\n          description:
    Don't ask the scheduler to take the guest-management overhead\n            into
    account. Instead put the overhead only into the container's memory\n            limit.
    This can lead to crashes if all memory is in use on a node. Defaults\n            to
    false.\n        requests:\n          type: object\n          properties: {}\n
    \         description: Requests is a description of the initial vmi resources.
    Valid\n            resource keys are \"memory\" and \"cpu\".\n    v1.RestartOptions:\n
    \     type: object\n      properties:\n        apiVersion:\n          type: string\n
    \         description: \"APIVersion defines the versioned schema of this representation\\\n
    \           \\ of an object. Servers should convert recognized schemas to the
    latest\\\n            \\ internal value, and may reject unrecognized values. More
    info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\"\n
    \       dryRun:\n          type: array\n          description: \"When present,
    indicates that modifications should not be persisted.\\\n            \\ An invalid
    or unrecognized dryRun directive will result in an error\\\n            \\ response
    and no further processing of the request. Valid values are:\\\n            \\
    - All: all dry run stages will be processed\"\n          items:\n            type:
    string\n            default: \"\"\n          x-kubernetes-list-type: atomic\n
    \       gracePeriodSeconds:\n          type: integer\n          description: \"The
    duration in seconds before the object should be force-restarted.\\\n            \\
    Value must be non-negative integer. The value zero indicates, restart\\\n            \\
    immediately. If this value is nil, the default grace period for deletion\\\n            \\
    of the corresponding VMI for the specified type will be used to determine\\\n
    \           \\ on how much time to give the VMI to restart. Defaults to a per
    object\\\n            \\ value if not specified. zero means restart immediately.
    Allowed Values:\\\n            \\ nil and 0\"\n          format: int64\n        kind:\n
    \         type: string\n          description: \"Kind is a string value representing
    the REST resource this\\\n            \\ object represents. Servers may infer
    this from the endpoint the client\\\n            \\ submits requests to. Cannot
    be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"\n
    \     description: RestartOptions may be provided when deleting an API object.\n
    \   v1.Rng:\n      type: object\n      description: Rng represents the random
    device passed from host\n    v1.SEV:\n      type: object\n      properties:\n
    \       attestation:\n          $ref: '#/components/schemas/v1.SEVAttestation'\n
    \       dhCert:\n          type: string\n          description: Base64 encoded
    guest owner's Diffie-Hellman key.\n        policy:\n          $ref: '#/components/schemas/v1.SEVPolicy'\n
    \       session:\n          type: string\n          description: Base64 encoded
    session blob.\n    v1.SEVAttestation:\n      type: object\n    v1.SEVMeasurementInfo:\n
    \     type: object\n      properties:\n        apiMajor:\n          type: integer\n
    \         description: API major version of the SEV host.\n          format: int32\n
    \       apiMinor:\n          type: integer\n          description: API minor version
    of the SEV host.\n          format: int32\n        apiVersion:\n          type:
    string\n          description: \"APIVersion defines the versioned schema of this
    representation\\\n            \\ of an object. Servers should convert recognized
    schemas to the latest\\\n            \\ internal value, and may reject unrecognized
    values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\"\n
    \       buildID:\n          type: integer\n          description: Build ID of
    the SEV host.\n          format: int32\n        kind:\n          type: string\n
    \         description: \"Kind is a string value representing the REST resource
    this\\\n            \\ object represents. Servers may infer this from the endpoint
    the client\\\n            \\ submits requests to. Cannot be updated. In CamelCase.
    More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"\n
    \       loaderSHA:\n          type: string\n          description: SHA256 of the
    loader binary\n        measurement:\n          type: string\n          description:
    Base64 encoded launch measurement of the SEV guest.\n        policy:\n          type:
    integer\n          description: Policy of the SEV guest.\n          format: int32\n
    \     description: SEVMeasurementInfo contains information about the guest launch\n
    \       measurement.\n    v1.SEVPlatformInfo:\n      type: object\n      properties:\n
    \       apiVersion:\n          type: string\n          description: \"APIVersion
    defines the versioned schema of this representation\\\n            \\ of an object.
    Servers should convert recognized schemas to the latest\\\n            \\ internal
    value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\"\n
    \       certChain:\n          type: string\n          description: Base64 encoded
    SEV certificate chain.\n        kind:\n          type: string\n          description:
    \"Kind is a string value representing the REST resource this\\\n            \\
    object represents. Servers may infer this from the endpoint the client\\\n            \\
    submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"\n
    \       pdh:\n          type: string\n          description: Base64 encoded platform
    Diffie-Hellman key.\n      description: SEVPlatformInfo contains information about
    the AMD SEV features\n        for the node.\n    v1.SEVPolicy:\n      type: object\n
    \     properties:\n        encryptedState:\n          type: boolean\n          description:
    SEV-ES is required. Defaults to false.\n    v1.SEVSecretOptions:\n      type:
    object\n      properties:\n        header:\n          type: string\n          description:
    Base64 encoded header needed to decrypt the secret.\n        secret:\n          type:
    string\n          description: Base64 encoded encrypted launch secret.\n      description:
    SEVSecretOptions is used to provide a secret for a running guest.\n    v1.SEVSessionOptions:\n
    \     type: object\n      properties:\n        dhCert:\n          type: string\n
    \         description: Base64 encoded guest owner's Diffie-Hellman key.\n        session:\n
    \         type: string\n          description: Base64 encoded session blob.\n
    \     description: SEVSessionOptions is used to provide SEV session parameters.\n
    \   v1.SMBiosConfiguration:\n      type: object\n      properties:\n        family:\n
    \         type: string\n        manufacturer:\n          type: string\n        product:\n
    \         type: string\n        sku:\n          type: string\n        version:\n
    \         type: string\n    v1.SSHPublicKeyAccessCredential:\n      required:\n
    \     - propagationMethod\n      - source\n      type: object\n      properties:\n
    \       propagationMethod:\n          $ref: '#/components/schemas/v1.SSHPublicKeyAccessCredentialPropagationMethod'\n
    \       source:\n          $ref: '#/components/schemas/v1.SSHPublicKeyAccessCredentialSource'\n
    \     description: SSHPublicKeyAccessCredential represents a source and propagation\n
    \       method for injecting ssh public keys into a vm guest\n    v1.SSHPublicKeyAccessCredentialPropagationMethod:\n
    \     type: object\n      properties:\n        configDrive:\n          $ref: '#/components/schemas/v1.ConfigDriveSSHPublicKeyAccessCredentialPropagation'\n
    \       noCloud:\n          $ref: '#/components/schemas/v1.NoCloudSSHPublicKeyAccessCredentialPropagation'\n
    \       qemuGuestAgent:\n          $ref: '#/components/schemas/v1.QemuGuestAgentSSHPublicKeyAccessCredentialPropagation'\n
    \     description: SSHPublicKeyAccessCredentialPropagationMethod represents the
    method\n        used to inject a ssh public key into the vm guest. Only one of
    its members\n        may be specified.\n    v1.SSHPublicKeyAccessCredentialSource:\n
    \     type: object\n      properties:\n        secret:\n          $ref: '#/components/schemas/v1.AccessCredentialSecretSource'\n
    \     description: SSHPublicKeyAccessCredentialSource represents where to retrieve\n
    \       the ssh key credentials Only one of its members may be specified.\n    v1.SeccompConfiguration:\n
    \     type: object\n      properties:\n        virtualMachineInstanceProfile:\n
    \         $ref: '#/components/schemas/v1.VirtualMachineInstanceProfile'\n      description:
    SeccompConfiguration holds Seccomp configuration for Kubevirt components\n    v1.SecretVolumeSource:\n
    \     type: object\n      properties:\n        optional:\n          type: boolean\n
    \         description: Specify whether the Secret or it's keys must be defined\n
    \       secretName:\n          type: string\n          description: \"Name of
    the secret in the pod's namespace to use. More info:\\\n            \\ https://kubernetes.io/docs/concepts/storage/volumes#secret\"\n
    \       volumeLabel:\n          type: string\n          description: \"The volume
    label of the resulting disk inside the VMI. Different\\\n            \\ bootstrapping
    mechanisms require different values. Typical values are\\\n            \\ \\\"cidata\\\"
    (cloud-init), \\\"config-2\\\" (cloud-init) or \\\"OEMDRV\\\" (kickstart).\"\n
    \     description: SecretVolumeSource adapts a Secret into a volume.\n    v1.ServiceAccountVolumeSource:\n
    \     type: object\n      properties:\n        serviceAccountName:\n          type:
    string\n          description: \"Name of the service account in the pod's namespace
    to use.\\\n            \\ More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/\"\n
    \     description: ServiceAccountVolumeSource adapts a ServiceAccount into a volume.\n
    \   v1.SoundDevice:\n      required:\n      - name\n      type: object\n      properties:\n
    \       model:\n          type: string\n          description: \"We only support
    ich9 or ac97. If SoundDevice is not set: No\\\n            \\ sound card is emulated.
    If SoundDevice is set but Model is not: ich9\"\n        name:\n          type:
    string\n          description: User's defined name for this sound device\n          default:
    \"\"\n      description: Represents the user's configuration to emulate sound
    cards in the\n        VMI.\n    v1.StartOptions:\n      type: object\n      properties:\n
    \       apiVersion:\n          type: string\n          description: \"APIVersion
    defines the versioned schema of this representation\\\n            \\ of an object.
    Servers should convert recognized schemas to the latest\\\n            \\ internal
    value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\"\n
    \       dryRun:\n          type: array\n          description: \"When present,
    indicates that modifications should not be persisted.\\\n            \\ An invalid
    or unrecognized dryRun directive will result in an error\\\n            \\ response
    and no further processing of the request. Valid values are:\\\n            \\
    - All: all dry run stages will be processed\"\n          items:\n            type:
    string\n            default: \"\"\n          x-kubernetes-list-type: atomic\n
    \       kind:\n          type: string\n          description: \"Kind is a string
    value representing the REST resource this\\\n            \\ object represents.
    Servers may infer this from the endpoint the client\\\n            \\ submits
    requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"\n
    \       paused:\n          type: boolean\n          description: Indicates that
    VM will be started in paused state.\n      description: StartOptions may be provided
    on start request.\n    v1.StopOptions:\n      type: object\n      properties:\n
    \       apiVersion:\n          type: string\n          description: \"APIVersion
    defines the versioned schema of this representation\\\n            \\ of an object.
    Servers should convert recognized schemas to the latest\\\n            \\ internal
    value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\"\n
    \       dryRun:\n          type: array\n          description: \"When present,
    indicates that modifications should not be persisted.\\\n            \\ An invalid
    or unrecognized dryRun directive will result in an error\\\n            \\ response
    and no further processing of the request. Valid values are:\\\n            \\
    - All: all dry run stages will be processed\"\n          items:\n            type:
    string\n            default: \"\"\n          x-kubernetes-list-type: atomic\n
    \       gracePeriod:\n          type: integer\n          description: this updates
    the VMIs terminationGracePeriodSeconds during\n            shutdown\n          format:
    int64\n        kind:\n          type: string\n          description: \"Kind is
    a string value representing the REST resource this\\\n            \\ object represents.
    Servers may infer this from the endpoint the client\\\n            \\ submits
    requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"\n
    \     description: StopOptions may be provided when deleting an API object.\n
    \   v1.SupportContainerResources:\n      required:\n      - resources\n      -
    type\n      type: object\n      properties:\n        resources:\n          $ref:
    '#/components/schemas/k8s.io.api.core.v1.ResourceRequirements'\n        type:\n
    \         type: string\n          default: \"\"\n      description: SupportContainerResources
    are used to specify the cpu/memory request\n        and limits for the containers
    that support various features of Virtual Machines.\n        These containers are
    usually idle and don't require a lot of memory or cpu.\n    v1.SyNICTimer:\n      type:
    object\n      properties:\n        direct:\n          $ref: '#/components/schemas/v1.FeatureState'\n
    \       enabled:\n          type: boolean\n    v1.SysprepSource:\n      type:
    object\n      properties:\n        configMap:\n          $ref: '#/components/schemas/k8s.io.api.core.v1.LocalObjectReference'\n
    \       secret:\n          $ref: '#/components/schemas/k8s.io.api.core.v1.LocalObjectReference'\n
    \     description: Represents a Sysprep volume source.\n    v1.TLSConfiguration:\n
    \     type: object\n      properties:\n        ciphers:\n          type: array\n
    \         items:\n            type: string\n            default: \"\"\n          x-kubernetes-list-type:
    set\n        minTLSVersion:\n          type: string\n          description: |-\n
    \           MinTLSVersion is a way to specify the minimum protocol version that
    is acceptable for TLS connections. Protocol versions are based on the following
    most common TLS configurations:\n\n              https://ssl-config.mozilla.org/\n\n
    \           Note that SSLv3.0 is not a supported protocol version due to well
    known vulnerabilities such as POODLE: https://en.wikipedia.org/wiki/POODLE\n      description:
    TLSConfiguration holds TLS options\n    v1.TPMDevice:\n      type: object\n      properties:\n
    \       persistent:\n          type: boolean\n          description: Persistent
    indicates the state of the TPM device should be\n            kept accross reboots
    Defaults to false\n    v1.Timer:\n      type: object\n      properties:\n        hpet:\n
    \         $ref: '#/components/schemas/v1.HPETTimer'\n        hyperv:\n          $ref:
    '#/components/schemas/v1.HypervTimer'\n        kvm:\n          $ref: '#/components/schemas/v1.KVMTimer'\n
    \       pit:\n          $ref: '#/components/schemas/v1.PITTimer'\n        rtc:\n
    \         $ref: '#/components/schemas/v1.RTCTimer'\n      description: Represents
    all available timers in a vmi.\n    v1.TokenBucketRateLimiter:\n      required:\n
    \     - burst\n      - qps\n      type: object\n      properties:\n        burst:\n
    \         type: integer\n          description: \"Maximum burst for throttle.
    If it's zero, the component default\\\n            \\ will be used\"\n          format:
    int32\n          default: 0\n        qps:\n          type: number\n          description:
    \"QPS indicates the maximum QPS to the apiserver from this client.\\\n            \\
    If it's zero, the component default will be used\"\n          format: float\n
    \         default: 0.0\n    v1.TopologyHints:\n      type: object\n      properties:\n
    \       tscFrequency:\n          type: integer\n          format: int64\n    v1.USBHostDevice:\n
    \     required:\n      - resourceName\n      type: object\n      properties:\n
    \       externalResourceProvider:\n          type: boolean\n          description:
    \"If true, KubeVirt will leave the allocation and monitoring\\\n            \\
    to an external device plugin\"\n        resourceName:\n          type: string\n
    \         description: \"Identifies the list of USB host devices. e.g: kubevirt.io/storage,\\\n
    \           \\ kubevirt.io/bootable-usb, etc\"\n          default: \"\"\n        selectors:\n
    \         type: array\n          items:\n            $ref: '#/components/schemas/v1.USBSelector'\n
    \         x-kubernetes-list-type: atomic\n    v1.USBSelector:\n      required:\n
    \     - product\n      - vendor\n      type: object\n      properties:\n        product:\n
    \         type: string\n          default: \"\"\n        vendor:\n          type:
    string\n          default: \"\"\n    v1.UnpauseOptions:\n      type: object\n
    \     properties:\n        apiVersion:\n          type: string\n          description:
    \"APIVersion defines the versioned schema of this representation\\\n            \\
    of an object. Servers should convert recognized schemas to the latest\\\n            \\
    internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\"\n
    \       dryRun:\n          type: array\n          description: \"When present,
    indicates that modifications should not be persisted.\\\n            \\ An invalid
    or unrecognized dryRun directive will result in an error\\\n            \\ response
    and no further processing of the request. Valid values are:\\\n            \\
    - All: all dry run stages will be processed\"\n          items:\n            type:
    string\n            default: \"\"\n          x-kubernetes-list-type: atomic\n
    \       kind:\n          type: string\n          description: \"Kind is a string
    value representing the REST resource this\\\n            \\ object represents.
    Servers may infer this from the endpoint the client\\\n            \\ submits
    requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"\n
    \     description: UnpauseOptions may be provided on unpause request.\n    v1.UserPasswordAccessCredential:\n
    \     required:\n      - propagationMethod\n      - source\n      type: object\n
    \     properties:\n        propagationMethod:\n          $ref: '#/components/schemas/v1.UserPasswordAccessCredentialPropagationMethod'\n
    \       source:\n          $ref: '#/components/schemas/v1.UserPasswordAccessCredentialSource'\n
    \     description: UserPasswordAccessCredential represents a source and propagation\n
    \       method for injecting user passwords into a vm guest Only one of its members\n
    \       may be specified.\n    v1.UserPasswordAccessCredentialPropagationMethod:\n
    \     type: object\n      properties:\n        qemuGuestAgent:\n          $ref:
    '#/components/schemas/v1.QemuGuestAgentUserPasswordAccessCredentialPropagation'\n
    \     description: UserPasswordAccessCredentialPropagationMethod represents the
    method\n        used to inject a user passwords into the vm guest. Only one of
    its members\n        may be specified.\n    v1.UserPasswordAccessCredentialSource:\n
    \     type: object\n      properties:\n        secret:\n          $ref: '#/components/schemas/v1.AccessCredentialSecretSource'\n
    \     description: UserPasswordAccessCredentialSource represents where to retrieve\n
    \       the user password credentials Only one of its members may be specified.\n
    \   v1.VGPUDisplayOptions:\n      type: object\n      properties:\n        enabled:\n
    \         type: boolean\n          description: Enabled determines if a display
    addapter backed by a vGPU should\n            be enabled or disabled on the guest.
    Defaults to true.\n        ramFB:\n          $ref: '#/components/schemas/v1.FeatureState'\n
    \   v1.VGPUOptions:\n      type: object\n      properties:\n        display:\n
    \         $ref: '#/components/schemas/v1.VGPUDisplayOptions'\n    v1.VirtualMachine:\n
    \     required:\n      - spec\n      type: object\n      properties:\n        apiVersion:\n
    \         type: string\n          description: \"APIVersion defines the versioned
    schema of this representation\\\n            \\ of an object. Servers should convert
    recognized schemas to the latest\\\n            \\ internal value, and may reject
    unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\"\n
    \       kind:\n          type: string\n          description: \"Kind is a string
    value representing the REST resource this\\\n            \\ object represents.
    Servers may infer this from the endpoint the client\\\n            \\ submits
    requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"\n
    \       metadata:\n          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta'\n
    \       spec:\n          $ref: '#/components/schemas/v1.VirtualMachineSpec'\n
    \       status:\n          $ref: '#/components/schemas/v1.VirtualMachineStatus'\n
    \     description: VirtualMachine handles the VirtualMachines that are not running\n
    \       or are in a stopped state The VirtualMachine contains the template to
    create\n        the VirtualMachineInstance. It also mirrors the running state
    of the created\n        VirtualMachineInstance in its status.\n    v1.VirtualMachineCondition:\n
    \     required:\n      - status\n      - type\n      type: object\n      properties:\n
    \       message:\n          type: string\n        reason:\n          type: string\n
    \       status:\n          type: string\n          default: \"\"\n        type:\n
    \         type: string\n          default: \"\"\n      description: VirtualMachineCondition
    represents the state of VirtualMachine\n    v1.VirtualMachineInstance:\n      required:\n
    \     - spec\n      type: object\n      properties:\n        apiVersion:\n          type:
    string\n          description: \"APIVersion defines the versioned schema of this
    representation\\\n            \\ of an object. Servers should convert recognized
    schemas to the latest\\\n            \\ internal value, and may reject unrecognized
    values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\"\n
    \       kind:\n          type: string\n          description: \"Kind is a string
    value representing the REST resource this\\\n            \\ object represents.
    Servers may infer this from the endpoint the client\\\n            \\ submits
    requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"\n
    \       metadata:\n          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta'\n
    \       spec:\n          $ref: '#/components/schemas/v1.VirtualMachineInstanceSpec'\n
    \       status:\n          $ref: '#/components/schemas/v1.VirtualMachineInstanceStatus'\n
    \     description: VirtualMachineInstance is *the* VirtualMachineInstance Definition.\n
    \       It represents a virtual machine in the runtime environment of kubernetes.\n
    \   v1.VirtualMachineInstanceCondition:\n      required:\n      - status\n      -
    type\n      type: object\n      properties:\n        message:\n          type:
    string\n        reason:\n          type: string\n        status:\n          type:
    string\n          default: \"\"\n        type:\n          type: string\n          default:
    \"\"\n    v1.VirtualMachineInstanceFileSystem:\n      required:\n      - diskName\n
    \     - fileSystemType\n      - mountPoint\n      - totalBytes\n      - usedBytes\n
    \     type: object\n      properties:\n        disk:\n          type: array\n
    \         items:\n            $ref: '#/components/schemas/v1.VirtualMachineInstanceFileSystemDisk'\n
    \       diskName:\n          type: string\n          default: \"\"\n        fileSystemType:\n
    \         type: string\n          default: \"\"\n        mountPoint:\n          type:
    string\n          default: \"\"\n        totalBytes:\n          type: integer\n
    \         format: int32\n          default: 0\n        usedBytes:\n          type:
    integer\n          format: int32\n          default: 0\n      description: VirtualMachineInstanceFileSystem
    represents guest os disk\n    v1.VirtualMachineInstanceFileSystemDisk:\n      required:\n
    \     - busType\n      type: object\n      properties:\n        busType:\n          type:
    string\n          default: \"\"\n        serial:\n          type: string\n      description:
    VirtualMachineInstanceFileSystemDisk represents the guest os FS\n        disks\n
    \   v1.VirtualMachineInstanceFileSystemInfo:\n      required:\n      - disks\n
    \     type: object\n      properties:\n        disks:\n          type: array\n
    \         items:\n            $ref: '#/components/schemas/v1.VirtualMachineInstanceFileSystem'\n
    \     description: VirtualMachineInstanceFileSystemInfo represents information
    regarding\n        single guest os filesystem\n    v1.VirtualMachineInstanceFileSystemList:\n
    \     required:\n      - items\n      type: object\n      properties:\n        apiVersion:\n
    \         type: string\n          description: \"APIVersion defines the versioned
    schema of this representation\\\n            \\ of an object. Servers should convert
    recognized schemas to the latest\\\n            \\ internal value, and may reject
    unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\"\n
    \       items:\n          type: array\n          items:\n            $ref: '#/components/schemas/v1.VirtualMachineInstanceFileSystem'\n
    \       kind:\n          type: string\n          description: \"Kind is a string
    value representing the REST resource this\\\n            \\ object represents.
    Servers may infer this from the endpoint the client\\\n            \\ submits
    requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"\n
    \       metadata:\n          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta'\n
    \     description: VirtualMachineInstanceFileSystemList comprises the list of
    all\n        filesystems on guest machine\n    v1.VirtualMachineInstanceGuestAgentInfo:\n
    \     type: object\n      properties:\n        apiVersion:\n          type: string\n
    \         description: \"APIVersion defines the versioned schema of this representation\\\n
    \           \\ of an object. Servers should convert recognized schemas to the
    latest\\\n            \\ internal value, and may reject unrecognized values. More
    info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\"\n
    \       fsFreezeStatus:\n          type: string\n          description: FSFreezeStatus
    is the state of the fs of the guest it can be\n            either frozen or thawed\n
    \       fsInfo:\n          $ref: '#/components/schemas/v1.VirtualMachineInstanceFileSystemInfo'\n
    \       guestAgentVersion:\n          type: string\n          description: GAVersion
    is a version of currently installed guest agent\n        hostname:\n          type:
    string\n          description: Hostname represents FQDN of a guest\n        kind:\n
    \         type: string\n          description: \"Kind is a string value representing
    the REST resource this\\\n            \\ object represents. Servers may infer
    this from the endpoint the client\\\n            \\ submits requests to. Cannot
    be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"\n
    \       os:\n          $ref: '#/components/schemas/v1.VirtualMachineInstanceGuestOSInfo'\n
    \       supportedCommands:\n          type: array\n          description: Return
    command list the guest agent supports\n          items:\n            $ref: '#/components/schemas/v1.GuestAgentCommandInfo'\n
    \         x-kubernetes-list-type: atomic\n        timezone:\n          type: string\n
    \         description: Timezone is guest os current timezone\n        userList:\n
    \         type: array\n          description: UserList is a list of active guest
    OS users\n          items:\n            $ref: '#/components/schemas/v1.VirtualMachineInstanceGuestOSUser'\n
    \     description: VirtualMachineInstanceGuestAgentInfo represents information
    from\n        the installed guest agent\n    v1.VirtualMachineInstanceGuestOSInfo:\n
    \     type: object\n      properties:\n        id:\n          type: string\n          description:
    Guest OS Id\n        kernelRelease:\n          type: string\n          description:
    Guest OS Kernel Release\n        kernelVersion:\n          type: string\n          description:
    Kernel version of the Guest OS\n        machine:\n          type: string\n          description:
    Machine type of the Guest OS\n        name:\n          type: string\n          description:
    Name of the Guest OS\n        prettyName:\n          type: string\n          description:
    Guest OS Pretty Name\n        version:\n          type: string\n          description:
    Guest OS Version\n        versionId:\n          type: string\n          description:
    Version ID of the Guest OS\n    v1.VirtualMachineInstanceGuestOSUser:\n      required:\n
    \     - userName\n      type: object\n      properties:\n        domain:\n          type:
    string\n        loginTime:\n          type: number\n          format: double\n
    \       userName:\n          type: string\n          default: \"\"\n      description:
    VirtualMachineGuestOSUser is the single user of the guest os\n    v1.VirtualMachineInstanceGuestOSUserList:\n
    \     required:\n      - items\n      type: object\n      properties:\n        apiVersion:\n
    \         type: string\n          description: \"APIVersion defines the versioned
    schema of this representation\\\n            \\ of an object. Servers should convert
    recognized schemas to the latest\\\n            \\ internal value, and may reject
    unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\"\n
    \       items:\n          type: array\n          items:\n            $ref: '#/components/schemas/v1.VirtualMachineInstanceGuestOSUser'\n
    \       kind:\n          type: string\n          description: \"Kind is a string
    value representing the REST resource this\\\n            \\ object represents.
    Servers may infer this from the endpoint the client\\\n            \\ submits
    requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"\n
    \       metadata:\n          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta'\n
    \     description: VirtualMachineInstanceGuestOSUserList comprises the list of
    all\n        active users on guest machine\n    v1.VirtualMachineInstanceList:\n
    \     required:\n      - items\n      type: object\n      properties:\n        apiVersion:\n
    \         type: string\n          description: \"APIVersion defines the versioned
    schema of this representation\\\n            \\ of an object. Servers should convert
    recognized schemas to the latest\\\n            \\ internal value, and may reject
    unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\"\n
    \       items:\n          type: array\n          items:\n            $ref: '#/components/schemas/v1.VirtualMachineInstance'\n
    \       kind:\n          type: string\n          description: \"Kind is a string
    value representing the REST resource this\\\n            \\ object represents.
    Servers may infer this from the endpoint the client\\\n            \\ submits
    requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"\n
    \       metadata:\n          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta'\n
    \     description: VirtualMachineInstanceList is a list of VirtualMachines\n    v1.VirtualMachineInstanceMigration:\n
    \     required:\n      - spec\n      type: object\n      properties:\n        apiVersion:\n
    \         type: string\n          description: \"APIVersion defines the versioned
    schema of this representation\\\n            \\ of an object. Servers should convert
    recognized schemas to the latest\\\n            \\ internal value, and may reject
    unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\"\n
    \       kind:\n          type: string\n          description: \"Kind is a string
    value representing the REST resource this\\\n            \\ object represents.
    Servers may infer this from the endpoint the client\\\n            \\ submits
    requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"\n
    \       metadata:\n          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta'\n
    \       spec:\n          $ref: '#/components/schemas/v1.VirtualMachineInstanceMigrationSpec'\n
    \       status:\n          $ref: '#/components/schemas/v1.VirtualMachineInstanceMigrationStatus'\n
    \     description: VirtualMachineInstanceMigration represents the object tracking\n
    \       a VMI's migration to another host in the cluster\n    v1.VirtualMachineInstanceMigrationCondition:\n
    \     required:\n      - status\n      - type\n      type: object\n      properties:\n
    \       message:\n          type: string\n        reason:\n          type: string\n
    \       status:\n          type: string\n          default: \"\"\n        type:\n
    \         type: string\n          default: \"\"\n    v1.VirtualMachineInstanceMigrationList:\n
    \     required:\n      - items\n      type: object\n      properties:\n        apiVersion:\n
    \         type: string\n          description: \"APIVersion defines the versioned
    schema of this representation\\\n            \\ of an object. Servers should convert
    recognized schemas to the latest\\\n            \\ internal value, and may reject
    unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\"\n
    \       items:\n          type: array\n          items:\n            $ref: '#/components/schemas/v1.VirtualMachineInstanceMigration'\n
    \       kind:\n          type: string\n          description: \"Kind is a string
    value representing the REST resource this\\\n            \\ object represents.
    Servers may infer this from the endpoint the client\\\n            \\ submits
    requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"\n
    \       metadata:\n          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta'\n
    \     description: VirtualMachineInstanceMigrationList is a list of VirtualMachineMigrations\n
    \   v1.VirtualMachineInstanceMigrationPhaseTransitionTimestamp:\n      type: object\n
    \     properties:\n        phase:\n          type: string\n          description:
    \"Phase is the status of the VirtualMachineInstanceMigrationPhase\\\n            \\
    in kubernetes world. It is not the VirtualMachineInstanceMigrationPhase\\\n            \\
    status, but partially correlates to it.\"\n        phaseTransitionTimestamp:\n
    \         $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.Time'\n
    \     description: VirtualMachineInstanceMigrationPhaseTransitionTimestamp gives
    a\n        timestamp in relation to when a phase is set on a vmi\n    v1.VirtualMachineInstanceMigrationSpec:\n
    \     type: object\n      properties:\n        vmiName:\n          type: string\n
    \         description: The name of the VMI to perform the migration on. VMI must
    exist\n            in the migration objects namespace\n    v1.VirtualMachineInstanceMigrationState:\n
    \     type: object\n      properties:\n        abortRequested:\n          type:
    boolean\n          description: Indicates that the migration has been requested
    to abort\n        abortStatus:\n          type: string\n          description:
    Indicates the final status of the live migration abortion\n        completed:\n
    \         type: boolean\n          description: Indicates the migration completed\n
    \       endTimestamp:\n          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.Time'\n
    \       failed:\n          type: boolean\n          description: Indicates that
    the migration failed\n        failureReason:\n          type: string\n          description:
    Contains the reason why the migration failed\n        migrationConfiguration:\n
    \         $ref: '#/components/schemas/v1.MigrationConfiguration'\n        migrationPolicyName:\n
    \         type: string\n          description: \"Name of the migration policy.
    If string is empty, no policy\\\n            \\ is matched\"\n        migrationUid:\n
    \         type: string\n          description: The VirtualMachineInstanceMigration
    object associated with\n            this migration\n        mode:\n          type:
    string\n          description: Lets us know if the vmi is currently running pre
    or post copy\n            migration\n        sourceNode:\n          type: string\n
    \         description: The source node that the VMI originated on\n        sourcePod:\n
    \         type: string\n        startTimestamp:\n          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.Time'\n
    \       targetAttachmentPodUID:\n          type: string\n          description:
    The UID of the target attachment pod for hotplug volumes\n        targetCPUSet:\n
    \         type: array\n          description: \"If the VMI requires dedicated
    CPUs, this field will hold the\\\n            \\ dedicated CPU set on the target
    node\"\n          items:\n            type: integer\n            format: int32\n
    \           default: 0\n          x-kubernetes-list-type: atomic\n        targetDirectMigrationNodePorts:\n
    \         type: object\n          additionalProperties:\n            type: integer\n
    \           format: int32\n            default: 0\n          description: The
    list of ports opened for live migration on the destination\n            node\n
    \       targetNode:\n          type: string\n          description: The target
    node that the VMI is moving to\n        targetNodeAddress:\n          type: string\n
    \         description: The address of the target node to use for the migration\n
    \       targetNodeDomainDetected:\n          type: boolean\n          description:
    The Target Node has seen the Domain Start Event\n        targetNodeDomainReadyTimestamp:\n
    \         $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.Time'\n
    \       targetNodeTopology:\n          type: string\n          description: \"If
    the VMI requires dedicated CPUs, this field will hold the\\\n            \\ numa
    topology on the target node\"\n        targetPod:\n          type: string\n          description:
    The target pod that the VMI is moving to\n    v1.VirtualMachineInstanceMigrationStatus:\n
    \     type: object\n      properties:\n        conditions:\n          type: array\n
    \         items:\n            $ref: '#/components/schemas/v1.VirtualMachineInstanceMigrationCondition'\n
    \       migrationState:\n          $ref: '#/components/schemas/v1.VirtualMachineInstanceMigrationState'\n
    \       phase:\n          type: string\n        phaseTransitionTimestamps:\n          type:
    array\n          description: PhaseTransitionTimestamp is the timestamp of when
    the last\n            phase change occurred\n          items:\n            $ref:
    '#/components/schemas/v1.VirtualMachineInstanceMigrationPhaseTransitionTimestamp'\n
    \         x-kubernetes-list-type: atomic\n      description: VirtualMachineInstanceMigration
    reprents information pertaining\n        to a VMI's migration.\n    v1.VirtualMachineInstanceNetworkInterface:\n
    \     type: object\n      properties:\n        infoSource:\n          type: string\n
    \         description: \"Specifies the origin of the interface data collected.
    values:\\\n            \\ domain, guest-agent, multus-status.\"\n        interfaceName:\n
    \         type: string\n          description: The interface name inside the Virtual
    Machine\n        ipAddress:\n          type: string\n          description: IP
    address of a Virtual Machine interface. It is always the\n            first item
    of IPs\n        ipAddresses:\n          type: array\n          description: List
    of all IP addresses of a Virtual Machine interface\n          items:\n            type:
    string\n            default: \"\"\n        mac:\n          type: string\n          description:
    Hardware address of a Virtual Machine interface\n        name:\n          type:
    string\n          description: \"Name of the interface, corresponds to name of
    the network\\\n            \\ assigned to the interface\"\n        queueCount:\n
    \         type: integer\n          description: Specifies how many queues are
    allocated by MultiQueue\n          format: int32\n    v1.VirtualMachineInstancePhaseTransitionTimestamp:\n
    \     type: object\n      properties:\n        phase:\n          type: string\n
    \         description: \"Phase is the status of the VirtualMachineInstance in
    kubernetes\\\n            \\ world. It is not the VirtualMachineInstance status,
    but partially correlates\\\n            \\ to it.\"\n        phaseTransitionTimestamp:\n
    \         $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.Time'\n
    \     description: VirtualMachineInstancePhaseTransitionTimestamp gives a timestamp\n
    \       in relation to when a phase is set on a vmi\n    v1.VirtualMachineInstancePreset:\n
    \     type: object\n      properties:\n        apiVersion:\n          type: string\n
    \         description: \"APIVersion defines the versioned schema of this representation\\\n
    \           \\ of an object. Servers should convert recognized schemas to the
    latest\\\n            \\ internal value, and may reject unrecognized values. More
    info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\"\n
    \       kind:\n          type: string\n          description: \"Kind is a string
    value representing the REST resource this\\\n            \\ object represents.
    Servers may infer this from the endpoint the client\\\n            \\ submits
    requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"\n
    \       metadata:\n          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta'\n
    \       spec:\n          $ref: '#/components/schemas/v1.VirtualMachineInstancePresetSpec'\n
    \     description: |-\n        Deprecated for removal in v2, please use VirtualMachineInstanceType
    and VirtualMachinePreference instead.\n\n        VirtualMachineInstancePreset
    defines a VMI spec.domain to be applied to all VMIs that match the provided label
    selector More info: https://kubevirt.io/user-guide/virtual_machines/presets/#overrides\n
    \   v1.VirtualMachineInstancePresetList:\n      required:\n      - items\n      type:
    object\n      properties:\n        apiVersion:\n          type: string\n          description:
    \"APIVersion defines the versioned schema of this representation\\\n            \\
    of an object. Servers should convert recognized schemas to the latest\\\n            \\
    internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\"\n
    \       items:\n          type: array\n          items:\n            $ref: '#/components/schemas/v1.VirtualMachineInstancePreset'\n
    \       kind:\n          type: string\n          description: \"Kind is a string
    value representing the REST resource this\\\n            \\ object represents.
    Servers may infer this from the endpoint the client\\\n            \\ submits
    requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"\n
    \       metadata:\n          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta'\n
    \     description: VirtualMachineInstancePresetList is a list of VirtualMachinePresets\n
    \   v1.VirtualMachineInstancePresetSpec:\n      required:\n      - selector\n
    \     type: object\n      properties:\n        domain:\n          $ref: '#/components/schemas/v1.DomainSpec'\n
    \       selector:\n          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector'\n
    \   v1.VirtualMachineInstanceProfile:\n      type: object\n      properties:\n
    \       customProfile:\n          $ref: '#/components/schemas/v1.CustomProfile'\n
    \   v1.VirtualMachineInstanceReplicaSet:\n      required:\n      - spec\n      type:
    object\n      properties:\n        apiVersion:\n          type: string\n          description:
    \"APIVersion defines the versioned schema of this representation\\\n            \\
    of an object. Servers should convert recognized schemas to the latest\\\n            \\
    internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\"\n
    \       kind:\n          type: string\n          description: \"Kind is a string
    value representing the REST resource this\\\n            \\ object represents.
    Servers may infer this from the endpoint the client\\\n            \\ submits
    requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"\n
    \       metadata:\n          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta'\n
    \       spec:\n          $ref: '#/components/schemas/v1.VirtualMachineInstanceReplicaSetSpec'\n
    \       status:\n          $ref: '#/components/schemas/v1.VirtualMachineInstanceReplicaSetStatus'\n
    \     description: VirtualMachineInstance is *the* VirtualMachineInstance Definition.\n
    \       It represents a virtual machine in the runtime environment of kubernetes.\n
    \   v1.VirtualMachineInstanceReplicaSetCondition:\n      required:\n      - status\n
    \     - type\n      type: object\n      properties:\n        message:\n          type:
    string\n        reason:\n          type: string\n        status:\n          type:
    string\n          default: \"\"\n        type:\n          type: string\n          default:
    \"\"\n    v1.VirtualMachineInstanceReplicaSetList:\n      required:\n      - items\n
    \     type: object\n      properties:\n        apiVersion:\n          type: string\n
    \         description: \"APIVersion defines the versioned schema of this representation\\\n
    \           \\ of an object. Servers should convert recognized schemas to the
    latest\\\n            \\ internal value, and may reject unrecognized values. More
    info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\"\n
    \       items:\n          type: array\n          items:\n            $ref: '#/components/schemas/v1.VirtualMachineInstanceReplicaSet'\n
    \       kind:\n          type: string\n          description: \"Kind is a string
    value representing the REST resource this\\\n            \\ object represents.
    Servers may infer this from the endpoint the client\\\n            \\ submits
    requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"\n
    \       metadata:\n          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta'\n
    \     description: VMIList is a list of VMIs\n    v1.VirtualMachineInstanceReplicaSetSpec:\n
    \     required:\n      - selector\n      - template\n      type: object\n      properties:\n
    \       paused:\n          type: boolean\n          description: Indicates that
    the replica set is paused.\n        replicas:\n          type: integer\n          description:
    Number of desired pods. This is a pointer to distinguish between\n            explicit
    zero and not specified. Defaults to 1.\n          format: int32\n        selector:\n
    \         $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector'\n
    \       template:\n          $ref: '#/components/schemas/v1.VirtualMachineInstanceTemplateSpec'\n
    \   v1.VirtualMachineInstanceReplicaSetStatus:\n      type: object\n      properties:\n
    \       conditions:\n          type: array\n          items:\n            $ref:
    '#/components/schemas/v1.VirtualMachineInstanceReplicaSetCondition'\n        labelSelector:\n
    \         type: string\n          description: Canonical form of the label selector
    for HPA which consumes\n            it through the scale subresource.\n        readyReplicas:\n
    \         type: integer\n          description: The number of ready replicas for
    this replica set.\n          format: int32\n        replicas:\n          type:
    integer\n          description: Total number of non-terminated pods targeted by
    this deployment\n            (their labels match the selector).\n          format:
    int32\n    v1.VirtualMachineInstanceSpec:\n      required:\n      - domain\n      type:
    object\n      properties:\n        accessCredentials:\n          type: array\n
    \         description: Specifies a set of public keys to inject into the vm guest\n
    \         items:\n            $ref: '#/components/schemas/v1.AccessCredential'\n
    \         x-kubernetes-list-type: atomic\n        affinity:\n          $ref: '#/components/schemas/k8s.io.api.core.v1.Affinity'\n
    \       architecture:\n          type: string\n          description: Specifies
    the architecture of the vm guest you are attempting\n            to run. Defaults
    to the compiled architecture of the KubeVirt components\n        dnsConfig:\n
    \         $ref: '#/components/schemas/k8s.io.api.core.v1.PodDNSConfig'\n        dnsPolicy:\n
    \         type: string\n          description: |-\n            Set DNS policy
    for the pod. Defaults to \"ClusterFirst\". Valid values are 'ClusterFirstWithHostNet',
    'ClusterFirst', 'Default' or 'None'. DNS parameters given in DNSConfig will be
    merged with the policy selected with DNSPolicy. To have DNS options set along
    with hostNetwork, you have to specify DNS policy explicitly to 'ClusterFirstWithHostNet'.\n\n
    \           Possible enum values:\n             - `\"ClusterFirst\"` indicates
    that the pod should use cluster DNS first unless hostNetwork is true, if it is
    available, then fall back on the default (as determined by kubelet) DNS settings.\n
    \            - `\"ClusterFirstWithHostNet\"` indicates that the pod should use
    cluster DNS first, if it is available, then fall back on the default (as determined
    by kubelet) DNS settings.\n             - `\"Default\"` indicates that the pod
    should use the default (as determined by kubelet) DNS settings.\n             -
    `\"None\"` indicates that the pod should use empty DNS settings. DNS parameters
    such as nameservers and search paths should be defined via DNSConfig.\n          enum:\n
    \         - ClusterFirst\n          - ClusterFirstWithHostNet\n          - Default\n
    \         - None\n        domain:\n          $ref: '#/components/schemas/v1.DomainSpec'\n
    \       evictionStrategy:\n          type: string\n          description: \"EvictionStrategy
    describes the strategy to follow when a node\\\n            \\ drain occurs. The
    possible options are: - \\\"None\\\": No action will be\\\n            \\ taken,
    according to the specified 'RunStrategy' the VirtualMachine will\\\n            \\
    be restarted or shutdown. - \\\"LiveMigrate\\\": the VirtualMachineInstance\\\n
    \           \\ will be migrated instead of being shutdown. - \\\"LiveMigrateIfPossible\\\"\\\n
    \           : the same as \\\"LiveMigrate\\\" but only if the VirtualMachine is
    Live-Migratable,\\\n            \\ otherwise it will behave as \\\"None\\\". -
    \\\"External\\\": the VirtualMachineInstance\\\n            \\ will be protected
    by a PDB and `vmi.Status.EvacuationNodeName` will\\\n            \\ be set on
    eviction. This is mainly useful for cluster-api-provider-kubevirt\\\n            \\
    (capk) which needs a way for VMI's to be blocked from eviction, yet\\\n            \\
    signal capk that eviction has been called on the VMI so the capk controller\\\n
    \           \\ can handle tearing the VMI down. Details can be found in the commit\\\n
    \           \\ description https://github.com/kubevirt/kubevirt/commit/c1d77face705c8b126696bac9a3ee3825f27f1fa.\"\n
    \       hostname:\n          type: string\n          description: \"Specifies
    the hostname of the vmi If not specified, the hostname\\\n            \\ will
    be set to the name of the vmi, if dhcp or cloud-init is configured\\\n            \\
    properly.\"\n        livenessProbe:\n          $ref: '#/components/schemas/v1.Probe'\n
    \       networks:\n          type: array\n          description: List of networks
    that can be attached to a vm's virtual interface.\n          items:\n            $ref:
    '#/components/schemas/v1.Network'\n        nodeSelector:\n          type: object\n
    \         additionalProperties:\n            type: string\n            default:
    \"\"\n          description: \"NodeSelector is a selector which must be true for
    the vmi\\\n            \\ to fit on a node. Selector which must match a node's
    labels for the\\\n            \\ vmi to be scheduled on that node. More info:
    https://kubernetes.io/docs/concepts/configuration/assign-pod-node/\"\n        priorityClassName:\n
    \         type: string\n          description: \"If specified, indicates the pod's
    priority. If not specified,\\\n            \\ the pod priority will be default
    or zero if there is no default.\"\n        readinessProbe:\n          $ref: '#/components/schemas/v1.Probe'\n
    \       schedulerName:\n          type: string\n          description: \"If specified,
    the VMI will be dispatched by specified scheduler.\\\n            \\ If not specified,
    the VMI will be dispatched by default scheduler.\"\n        startStrategy:\n          type:
    string\n          description: StartStrategy can be set to \"Paused\" if Virtual
    Machine should\n            be started in paused state.\n        subdomain:\n
    \         type: string\n          description: \"If specified, the fully qualified
    vmi hostname will be \\\"\\\n            <hostname>.<subdomain>.<pod namespace>.svc.<cluster
    domain>\\\". If not\\\n            \\ specified, the vmi will not have a domainname
    at all. The DNS entry\\\n            \\ will resolve to the vmi, no matter if
    the vmi itself can pick up a hostname.\"\n        terminationGracePeriodSeconds:\n
    \         type: integer\n          description: Grace period observed after signalling
    a VirtualMachineInstance\n            to stop after which the VirtualMachineInstance
    is force terminated.\n          format: int64\n        tolerations:\n          type:
    array\n          description: \"If toleration is specified, obey all the toleration
    rules.\"\n          items:\n            $ref: '#/components/schemas/k8s.io.api.core.v1.Toleration'\n
    \       topologySpreadConstraints:\n          type: array\n          description:
    TopologySpreadConstraints describes how a group of VMIs will\n            be spread
    across a given topology domains. K8s scheduler will schedule\n            VMI
    pods in a way which abides by the constraints.\n          items:\n            $ref:
    '#/components/schemas/k8s.io.api.core.v1.TopologySpreadConstraint'\n          x-kubernetes-patch-strategy:
    merge\n          x-kubernetes-list-type: map\n          x-kubernetes-list-map-keys:\n
    \         - topologyKey\n          - whenUnsatisfiable\n          x-kubernetes-patch-merge-key:
    topologyKey\n        volumes:\n          type: array\n          description: List
    of volumes that can be mounted by disks belonging to the\n            vmi.\n          items:\n
    \           $ref: '#/components/schemas/v1.Volume'\n      description: VirtualMachineInstanceSpec
    is a description of a VirtualMachineInstance.\n    v1.VirtualMachineInstanceStatus:\n
    \     type: object\n      properties:\n        VSOCKCID:\n          type: integer\n
    \         description: VSOCKCID is used to track the allocated VSOCK CID in the
    VM.\n          format: int64\n        activePods:\n          type: object\n          additionalProperties:\n
    \           type: string\n            default: \"\"\n          description: ActivePods
    is a mapping of pod UID to node name. It is possible\n            for multiple
    pods to be running for a single VMI during migration.\n        conditions:\n          type:
    array\n          description: Conditions are specific points in VirtualMachineInstance's\n
    \           pod runtime.\n          items:\n            $ref: '#/components/schemas/v1.VirtualMachineInstanceCondition'\n
    \       currentCPUTopology:\n          $ref: '#/components/schemas/v1.CPUTopology'\n
    \       evacuationNodeName:\n          type: string\n          description: EvacuationNodeName
    is used to track the eviction process of\n            a VMI. It stores the name
    of the node that we want to evacuate. It is\n            meant to be used by KubeVirt
    core components only and can't be set or\n            modified by users.\n        fsFreezeStatus:\n
    \         type: string\n          description: FSFreezeStatus is the state of
    the fs of the guest it can be\n            either frozen or thawed\n        guestOSInfo:\n
    \         $ref: '#/components/schemas/v1.VirtualMachineInstanceGuestOSInfo'\n
    \       interfaces:\n          type: array\n          description: Interfaces
    represent the details of available network interfaces.\n          items:\n            $ref:
    '#/components/schemas/v1.VirtualMachineInstanceNetworkInterface'\n        kernelBootStatus:\n
    \         $ref: '#/components/schemas/v1.KernelBootStatus'\n        launcherContainerImageVersion:\n
    \         type: string\n          description: LauncherContainerImageVersion indicates
    what container image\n            is currently active for the vmi.\n        machine:\n
    \         $ref: '#/components/schemas/v1.Machine'\n        memory:\n          $ref:
    '#/components/schemas/v1.MemoryStatus'\n        migrationMethod:\n          type:
    string\n          description: \"Represents the method using which the vmi can
    be migrated:\\\n            \\ live migration or block migration\"\n        migrationState:\n
    \         $ref: '#/components/schemas/v1.VirtualMachineInstanceMigrationState'\n
    \       migrationTransport:\n          type: string\n          description: This
    represents the migration transport\n        nodeName:\n          type: string\n
    \         description: NodeName is the name where the VirtualMachineInstance is
    currently\n            running.\n        phase:\n          type: string\n          description:
    \"Phase is the status of the VirtualMachineInstance in kubernetes\\\n            \\
    world. It is not the VirtualMachineInstance status, but partially correlates\\\n
    \           \\ to it.\"\n        phaseTransitionTimestamps:\n          type: array\n
    \         description: PhaseTransitionTimestamp is the timestamp of when the last\n
    \           phase change occurred\n          items:\n            $ref: '#/components/schemas/v1.VirtualMachineInstancePhaseTransitionTimestamp'\n
    \         x-kubernetes-list-type: atomic\n        qosClass:\n          type: string\n
    \         description: |-\n            The Quality of Service (QOS) classification
    assigned to the virtual machine instance based on resource requirements See PodQOSClass
    type for available QOS classes More info: https://git.k8s.io/community/contributors/design-proposals/node/resource-qos.md\n\n
    \           Possible enum values:\n             - `\"BestEffort\"` is the BestEffort
    qos class.\n             - `\"Burstable\"` is the Burstable qos class.\n             -
    `\"Guaranteed\"` is the Guaranteed qos class.\n          enum:\n          - BestEffort\n
    \         - Burstable\n          - Guaranteed\n        reason:\n          type:
    string\n          description: A brief CamelCase message indicating details about
    why the\n            VMI is in this state. e.g. 'NodeUnresponsive'\n        runtimeUser:\n
    \         type: integer\n          description: RuntimeUser is used to determine
    what user will be used in\n            launcher\n          format: int64\n          default:
    0\n        selinuxContext:\n          type: string\n          description: SELinuxContext
    is the actual SELinux context of the virt-launcher\n            pod\n        topologyHints:\n
    \         $ref: '#/components/schemas/v1.TopologyHints'\n        virtualMachineRevisionName:\n
    \         type: string\n          description: VirtualMachineRevisionName is used
    to get the vm revision of\n            the vmi when doing an online vm snapshot\n
    \       volumeStatus:\n          type: array\n          description: VolumeStatus
    contains the statuses of all the volumes\n          items:\n            $ref:
    '#/components/schemas/v1.VolumeStatus'\n          x-kubernetes-list-type: atomic\n
    \     description: VirtualMachineInstanceStatus represents information about the
    status\n        of a VirtualMachineInstance. Status may trail the actual state
    of a system.\n    v1.VirtualMachineInstanceTemplateSpec:\n      type: object\n
    \     properties:\n        metadata:\n          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta'\n
    \       spec:\n          $ref: '#/components/schemas/v1.VirtualMachineInstanceSpec'\n
    \   v1.VirtualMachineList:\n      required:\n      - items\n      type: object\n
    \     properties:\n        apiVersion:\n          type: string\n          description:
    \"APIVersion defines the versioned schema of this representation\\\n            \\
    of an object. Servers should convert recognized schemas to the latest\\\n            \\
    internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\"\n
    \       items:\n          type: array\n          items:\n            $ref: '#/components/schemas/v1.VirtualMachine'\n
    \       kind:\n          type: string\n          description: \"Kind is a string
    value representing the REST resource this\\\n            \\ object represents.
    Servers may infer this from the endpoint the client\\\n            \\ submits
    requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"\n
    \       metadata:\n          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta'\n
    \     description: VirtualMachineList is a list of virtualmachines\n    v1.VirtualMachineMemoryDumpRequest:\n
    \     required:\n      - claimName\n      - phase\n      type: object\n      properties:\n
    \       claimName:\n          type: string\n          description: ClaimName is
    the name of the pvc that will contain the memory\n            dump\n          default:
    \"\"\n        endTimestamp:\n          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.Time'\n
    \       fileName:\n          type: string\n          description: FileName represents
    the name of the output file\n        message:\n          type: string\n          description:
    Message is a detailed message about failure of the memory dump\n        phase:\n
    \         type: string\n          description: Phase represents the memory dump
    phase\n          default: \"\"\n        remove:\n          type: boolean\n          description:
    Remove represents request of dissociating the memory dump pvc\n        startTimestamp:\n
    \         $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.Time'\n
    \     description: VirtualMachineMemoryDumpRequest represent the memory dump request\n
    \       phase and info\n    v1.VirtualMachineOptions:\n      type: object\n      properties:\n
    \       disableFreePageReporting:\n          $ref: '#/components/schemas/v1.DisableFreePageReporting'\n
    \       disableSerialConsoleLog:\n          $ref: '#/components/schemas/v1.DisableSerialConsoleLog'\n
    \     description: VirtualMachineOptions holds the cluster level information regarding\n
    \       the virtual machine.\n    v1.VirtualMachineSpec:\n      required:\n      -
    template\n      type: object\n      properties:\n        dataVolumeTemplates:\n
    \         type: array\n          description: dataVolumeTemplates is a list of
    dataVolumes that the VirtualMachineInstance\n            template can reference.
    DataVolumes in this list are dynamically created\n            for the VirtualMachine
    and are tied to the VirtualMachine's life-cycle.\n          items:\n            $ref:
    '#/components/schemas/v1.DataVolumeTemplateSpec'\n        instancetype:\n          $ref:
    '#/components/schemas/v1.InstancetypeMatcher'\n        preference:\n          $ref:
    '#/components/schemas/v1.PreferenceMatcher'\n        runStrategy:\n          type:
    string\n          description: Running state indicates the requested running state
    of the\n            VirtualMachineInstance mutually exclusive with Running\n        running:\n
    \         type: boolean\n          description: Running controls whether the associatied
    VirtualMachineInstance\n            is created or not Mutually exclusive with
    RunStrategy\n        template:\n          $ref: '#/components/schemas/v1.VirtualMachineInstanceTemplateSpec'\n
    \       updateVolumesStrategy:\n          type: string\n          description:
    UpdateVolumesStrategy is the strategy to apply on volumes updates\n      description:
    VirtualMachineSpec describes how the proper VirtualMachine should\n        look
    like\n    v1.VirtualMachineStartFailure:\n      type: object\n      properties:\n
    \       consecutiveFailCount:\n          type: integer\n          format: int32\n
    \       lastFailedVMIUID:\n          type: string\n        retryAfterTimestamp:\n
    \         $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.Time'\n
    \     description: VirtualMachineStartFailure tracks VMIs which failed to transition\n
    \       successfully to running using the VM status\n    v1.VirtualMachineStateChangeRequest:\n
    \     required:\n      - action\n      type: object\n      properties:\n        action:\n
    \         type: string\n          description: Indicates the type of action that
    is requested. e.g. Start\n            or Stop\n          default: \"\"\n        data:\n
    \         type: object\n          additionalProperties:\n            type: string\n
    \           default: \"\"\n          description: Provides additional data in
    order to perform the Action\n        uid:\n          type: string\n          description:
    Indicates the UUID of an existing Virtual Machine Instance\n            that this
    change request applies to -- if applicable\n    v1.VirtualMachineStatus:\n      type:
    object\n      properties:\n        conditions:\n          type: array\n          description:
    Hold the state information of the VirtualMachine and its VirtualMachineInstance\n
    \         items:\n            $ref: '#/components/schemas/v1.VirtualMachineCondition'\n
    \       created:\n          type: boolean\n          description: Created indicates
    if the virtual machine is created in the\n            cluster\n        desiredGeneration:\n
    \         type: integer\n          description: DesiredGeneration is the generation
    which is desired for the\n            VMI. This will be used in comparisons with
    ObservedGeneration to understand\n            when the VMI is out of sync. This
    will be changed at the same time as\n            ObservedGeneration to remove
    errors which could occur if Generation is\n            updated through an Update()
    before ObservedGeneration in Status.\n          format: int64\n        memoryDumpRequest:\n
    \         $ref: '#/components/schemas/v1.VirtualMachineMemoryDumpRequest'\n        observedGeneration:\n
    \         type: integer\n          description: ObservedGeneration is the generation
    observed by the vmi when\n            started.\n          format: int64\n        printableStatus:\n
    \         type: string\n          description: \"PrintableStatus is a human readable,
    high-level representation\\\n            \\ of the status of the virtual machine\"\n
    \       ready:\n          type: boolean\n          description: Ready indicates
    if the virtual machine is running and ready\n        restoreInProgress:\n          type:
    string\n          description: RestoreInProgress is the name of the VirtualMachineRestore\n
    \           currently executing\n        runStrategy:\n          type: string\n
    \         description: RunStrategy tracks the last recorded RunStrategy used by
    the\n            VM. This is needed to correctly process the next strategy (for
    now only\n            the RerunOnFailure)\n        snapshotInProgress:\n          type:
    string\n          description: SnapshotInProgress is the name of the VirtualMachineSnapshot\n
    \           currently executing\n        startFailure:\n          $ref: '#/components/schemas/v1.VirtualMachineStartFailure'\n
    \       stateChangeRequests:\n          type: array\n          description: StateChangeRequests
    indicates a list of actions that should\n            be taken on a VMI e.g. stop
    a specific VMI then start a new one.\n          items:\n            $ref: '#/components/schemas/v1.VirtualMachineStateChangeRequest'\n
    \       volumeRequests:\n          type: array\n          description: VolumeRequests
    indicates a list of volumes add or remove from\n            the VMI template and
    hotplug on an active running VMI.\n          items:\n            $ref: '#/components/schemas/v1.VirtualMachineVolumeRequest'\n
    \         x-kubernetes-list-type: atomic\n        volumeSnapshotStatuses:\n          type:
    array\n          description: VolumeSnapshotStatuses indicates a list of statuses
    whether\n            snapshotting is supported by each volume.\n          items:\n
    \           $ref: '#/components/schemas/v1.VolumeSnapshotStatus'\n      description:
    VirtualMachineStatus represents the status returned by the controller\n        to
    describe how the VirtualMachine is doing\n    v1.VirtualMachineVolumeRequest:\n
    \     type: object\n      properties:\n        addVolumeOptions:\n          $ref:
    '#/components/schemas/v1.AddVolumeOptions'\n        removeVolumeOptions:\n          $ref:
    '#/components/schemas/v1.RemoveVolumeOptions'\n    v1.Volume:\n      required:\n
    \     - name\n      type: object\n      properties:\n        cloudInitConfigDrive:\n
    \         $ref: '#/components/schemas/v1.CloudInitConfigDriveSource'\n        cloudInitNoCloud:\n
    \         $ref: '#/components/schemas/v1.CloudInitNoCloudSource'\n        configMap:\n
    \         $ref: '#/components/schemas/v1.ConfigMapVolumeSource'\n        containerDisk:\n
    \         $ref: '#/components/schemas/v1.ContainerDiskSource'\n        dataVolume:\n
    \         $ref: '#/components/schemas/v1.DataVolumeSource'\n        downwardAPI:\n
    \         $ref: '#/components/schemas/v1.DownwardAPIVolumeSource'\n        downwardMetrics:\n
    \         $ref: '#/components/schemas/v1.DownwardMetricsVolumeSource'\n        emptyDisk:\n
    \         $ref: '#/components/schemas/v1.EmptyDiskSource'\n        ephemeral:\n
    \         $ref: '#/components/schemas/v1.EphemeralVolumeSource'\n        hostDisk:\n
    \         $ref: '#/components/schemas/v1.HostDisk'\n        memoryDump:\n          $ref:
    '#/components/schemas/v1.MemoryDumpVolumeSource'\n        name:\n          type:
    string\n          description: \"Volume's name. Must be a DNS_LABEL and unique
    within the vmi.\\\n            \\ More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"\n
    \         default: \"\"\n        persistentVolumeClaim:\n          $ref: '#/components/schemas/v1.PersistentVolumeClaimVolumeSource'\n
    \       secret:\n          $ref: '#/components/schemas/v1.SecretVolumeSource'\n
    \       serviceAccount:\n          $ref: '#/components/schemas/v1.ServiceAccountVolumeSource'\n
    \       sysprep:\n          $ref: '#/components/schemas/v1.SysprepSource'\n      description:
    Volume represents a named volume in a vmi.\n    v1.VolumeSnapshotStatus:\n      required:\n
    \     - enabled\n      - name\n      type: object\n      properties:\n        enabled:\n
    \         type: boolean\n          description: True if the volume supports snapshotting\n
    \         default: false\n        name:\n          type: string\n          description:
    Volume name\n          default: \"\"\n        reason:\n          type: string\n
    \         description: \"Empty if snapshotting is enabled, contains reason otherwise\"\n
    \   v1.VolumeStatus:\n      required:\n      - name\n      - target\n      type:
    object\n      properties:\n        containerDiskVolume:\n          $ref: '#/components/schemas/v1.ContainerDiskInfo'\n
    \       hotplugVolume:\n          $ref: '#/components/schemas/v1.HotplugVolumeStatus'\n
    \       memoryDumpVolume:\n          $ref: '#/components/schemas/v1.DomainMemoryDumpInfo'\n
    \       message:\n          type: string\n          description: Message is a
    detailed message about the current hotplug volume\n            phase\n        name:\n
    \         type: string\n          description: Name is the name of the volume\n
    \         default: \"\"\n        persistentVolumeClaimInfo:\n          $ref: '#/components/schemas/v1.PersistentVolumeClaimInfo'\n
    \       phase:\n          type: string\n          description: Phase is the phase\n
    \       reason:\n          type: string\n          description: Reason is a brief
    description of why we are in the current\n            hotplug volume phase\n        size:\n
    \         type: integer\n          description: Represents the size of the volume\n
    \         format: int64\n        target:\n          type: string\n          description:
    \"Target is the target name used when adding the volume to the\\\n            \\
    VM, eg: vda\"\n          default: \"\"\n      description: VolumeStatus represents
    information about the status of volumes\n        attached to the VirtualMachineInstance.\n
    \   v1.Watchdog:\n      required:\n      - name\n      type: object\n      properties:\n
    \       i6300esb:\n          $ref: '#/components/schemas/v1.I6300ESBWatchdog'\n
    \       name:\n          type: string\n          description: Name of the watchdog.\n
    \         default: \"\"\n      description: Named watchdog device.\n    v1alpha1.Condition:\n
    \     required:\n      - status\n      - type\n      type: object\n      properties:\n
    \       message:\n          type: string\n        reason:\n          type: string\n
    \       status:\n          type: string\n          default: \"\"\n        type:\n
    \         type: string\n          default: \"\"\n      description: Condition
    defines conditions\n    v1alpha1.Error:\n      type: object\n      properties:\n
    \       message:\n          type: string\n        time:\n          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.Time'\n
    \     description: Error is the last error encountered during the snapshot/restore\n
    \   v1alpha1.MigrationPolicy:\n      required:\n      - spec\n      type: object\n
    \     properties:\n        apiVersion:\n          type: string\n          description:
    \"APIVersion defines the versioned schema of this representation\\\n            \\
    of an object. Servers should convert recognized schemas to the latest\\\n            \\
    internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\"\n
    \       kind:\n          type: string\n          description: \"Kind is a string
    value representing the REST resource this\\\n            \\ object represents.
    Servers may infer this from the endpoint the client\\\n            \\ submits
    requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"\n
    \       metadata:\n          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta'\n
    \       spec:\n          $ref: '#/components/schemas/v1alpha1.MigrationPolicySpec'\n
    \       status:\n          $ref: '#/components/schemas/v1alpha1.MigrationPolicyStatus'\n
    \     description: MigrationPolicy holds migration policy (i.e. configurations)
    to\n        apply to a VM or group of VMs\n    v1alpha1.MigrationPolicyList:\n
    \     required:\n      - items\n      type: object\n      properties:\n        apiVersion:\n
    \         type: string\n          description: \"APIVersion defines the versioned
    schema of this representation\\\n            \\ of an object. Servers should convert
    recognized schemas to the latest\\\n            \\ internal value, and may reject
    unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\"\n
    \       items:\n          type: array\n          items:\n            $ref: '#/components/schemas/v1alpha1.MigrationPolicy'\n
    \         x-kubernetes-list-type: atomic\n        kind:\n          type: string\n
    \         description: \"Kind is a string value representing the REST resource
    this\\\n            \\ object represents. Servers may infer this from the endpoint
    the client\\\n            \\ submits requests to. Cannot be updated. In CamelCase.
    More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"\n
    \       metadata:\n          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta'\n
    \     description: MigrationPolicyList is a list of MigrationPolicy\n    v1alpha1.MigrationPolicySpec:\n
    \     required:\n      - selectors\n      type: object\n      properties:\n        allowAutoConverge:\n
    \         type: boolean\n        allowPostCopy:\n          type: boolean\n        bandwidthPerMigration:\n
    \         $ref: '#/components/schemas/k8s.io.apimachinery.pkg.api.resource.Quantity'\n
    \       completionTimeoutPerGiB:\n          type: integer\n          format: int64\n
    \       selectors:\n          $ref: '#/components/schemas/v1alpha1.Selectors'\n
    \   v1alpha1.MigrationPolicyStatus:\n      type: object\n    v1alpha1.PersistentVolumeClaim:\n
    \     type: object\n      properties:\n        metadata:\n          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta'\n
    \       spec:\n          $ref: '#/components/schemas/k8s.io.api.core.v1.PersistentVolumeClaimSpec'\n
    \   v1alpha1.Selectors:\n      type: object\n      properties:\n        namespaceSelector:\n
    \         type: object\n          additionalProperties:\n            type: string\n
    \           default: \"\"\n        virtualMachineInstanceSelector:\n          type:
    object\n          additionalProperties:\n            type: string\n            default:
    \"\"\n    v1alpha1.SnapshotVolumesLists:\n      type: object\n      properties:\n
    \       excludedVolumes:\n          type: array\n          items:\n            type:
    string\n            default: \"\"\n          x-kubernetes-list-type: set\n        includedVolumes:\n
    \         type: array\n          items:\n            type: string\n            default:
    \"\"\n          x-kubernetes-list-type: set\n      description: SnapshotVolumesLists
    includes the list of volumes which were included\n        in the snapshot and
    volumes which were excluded from the snapshot\n    v1alpha1.SourceSpec:\n      type:
    object\n      properties:\n        virtualMachine:\n          $ref: '#/components/schemas/v1alpha1.VirtualMachine'\n
    \     description: SourceSpec contains the appropriate spec for the resource being\n
    \       snapshotted\n    v1alpha1.VirtualMachine:\n      type: object\n      properties:\n
    \       metadata:\n          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta'\n
    \       spec:\n          $ref: '#/components/schemas/v1.VirtualMachineSpec'\n
    \       status:\n          $ref: '#/components/schemas/v1.VirtualMachineStatus'\n
    \   v1alpha1.VirtualMachineClone:\n      required:\n      - spec\n      type:
    object\n      properties:\n        apiVersion:\n          type: string\n          description:
    \"APIVersion defines the versioned schema of this representation\\\n            \\
    of an object. Servers should convert recognized schemas to the latest\\\n            \\
    internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\"\n
    \       kind:\n          type: string\n          description: \"Kind is a string
    value representing the REST resource this\\\n            \\ object represents.
    Servers may infer this from the endpoint the client\\\n            \\ submits
    requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"\n
    \       metadata:\n          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta'\n
    \       spec:\n          $ref: '#/components/schemas/v1alpha1.VirtualMachineCloneSpec'\n
    \       status:\n          $ref: '#/components/schemas/v1alpha1.VirtualMachineCloneStatus'\n
    \     description: VirtualMachineClone is a CRD that clones one VM into another.\n
    \   v1alpha1.VirtualMachineCloneList:\n      required:\n      - items\n      type:
    object\n      properties:\n        apiVersion:\n          type: string\n          description:
    \"APIVersion defines the versioned schema of this representation\\\n            \\
    of an object. Servers should convert recognized schemas to the latest\\\n            \\
    internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\"\n
    \       items:\n          type: array\n          items:\n            $ref: '#/components/schemas/v1alpha1.VirtualMachineClone'\n
    \         x-kubernetes-list-type: atomic\n        kind:\n          type: string\n
    \         description: \"Kind is a string value representing the REST resource
    this\\\n            \\ object represents. Servers may infer this from the endpoint
    the client\\\n            \\ submits requests to. Cannot be updated. In CamelCase.
    More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"\n
    \       metadata:\n          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta'\n
    \     description: VirtualMachineCloneList is a list of MigrationPolicy\n    v1alpha1.VirtualMachineCloneSpec:\n
    \     required:\n      - source\n      type: object\n      properties:\n        annotationFilters:\n
    \         type: array\n          description: \"Example use: \\\"!some/key*\\\".
    For a detailed description, please\\\n            \\ refer to https://kubevirt.io/user-guide/operations/clone_api/#label-annotation-filters.\"\n
    \         items:\n            type: string\n            default: \"\"\n          x-kubernetes-list-type:
    atomic\n        labelFilters:\n          type: array\n          description: \"Example
    use: \\\"!some/key*\\\". For a detailed description, please\\\n            \\
    refer to https://kubevirt.io/user-guide/operations/clone_api/#label-annotation-filters.\"\n
    \         items:\n            type: string\n            default: \"\"\n          x-kubernetes-list-type:
    atomic\n        newMacAddresses:\n          type: object\n          additionalProperties:\n
    \           type: string\n            default: \"\"\n          description: \"NewMacAddresses
    manually sets that target interfaces' mac\\\n            \\ addresses. The key
    is the interface name and the value is the new mac\\\n            \\ address.
    If this field is not specified, a new MAC address will be generated\\\n            \\
    automatically, as for any interface that is not included in this map.\"\n        newSMBiosSerial:\n
    \         type: string\n          description: \"NewSMBiosSerial manually sets
    that target's SMbios serial.\\\n            \\ If this field is not specified,
    a new serial will be generated automatically.\"\n        source:\n          $ref:
    '#/components/schemas/k8s.io.api.core.v1.TypedLocalObjectReference'\n        target:\n
    \         $ref: '#/components/schemas/k8s.io.api.core.v1.TypedLocalObjectReference'\n
    \       template:\n          $ref: '#/components/schemas/v1alpha1.VirtualMachineCloneTemplateFilters'\n
    \   v1alpha1.VirtualMachineCloneStatus:\n      type: object\n      properties:\n
    \       conditions:\n          type: array\n          items:\n            $ref:
    '#/components/schemas/v1alpha1.Condition'\n          x-kubernetes-list-type: atomic\n
    \       creationTime:\n          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.Time'\n
    \       phase:\n          type: string\n        restoreName:\n          type:
    string\n        snapshotName:\n          type: string\n        targetName:\n          type:
    string\n    v1alpha1.VirtualMachineCloneTemplateFilters:\n      type: object\n
    \     properties:\n        annotationFilters:\n          type: array\n          description:
    \"Example use: \\\"!some/key*\\\". For a detailed description, please\\\n            \\
    refer to https://kubevirt.io/user-guide/operations/clone_api/#label-annotation-filters.\"\n
    \         items:\n            type: string\n            default: \"\"\n          x-kubernetes-list-type:
    atomic\n        labelFilters:\n          type: array\n          description: \"Example
    use: \\\"!some/key*\\\". For a detailed description, please\\\n            \\
    refer to https://kubevirt.io/user-guide/operations/clone_api/#label-annotation-filters.\"\n
    \         items:\n            type: string\n            default: \"\"\n          x-kubernetes-list-type:
    atomic\n    v1alpha1.VirtualMachineExport:\n      required:\n      - spec\n      type:
    object\n      properties:\n        apiVersion:\n          type: string\n          description:
    \"APIVersion defines the versioned schema of this representation\\\n            \\
    of an object. Servers should convert recognized schemas to the latest\\\n            \\
    internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\"\n
    \       kind:\n          type: string\n          description: \"Kind is a string
    value representing the REST resource this\\\n            \\ object represents.
    Servers may infer this from the endpoint the client\\\n            \\ submits
    requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"\n
    \       metadata:\n          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta'\n
    \       spec:\n          $ref: '#/components/schemas/v1alpha1.VirtualMachineExportSpec'\n
    \       status:\n          $ref: '#/components/schemas/v1alpha1.VirtualMachineExportStatus'\n
    \     description: VirtualMachineExport defines the operation of exporting a VM
    source\n    v1alpha1.VirtualMachineExportLink:\n      required:\n      - cert\n
    \     type: object\n      properties:\n        cert:\n          type: string\n
    \         description: Cert is the public CA certificate base64 encoded\n          default:
    \"\"\n        manifests:\n          type: array\n          description: Manifests
    is a list of available manifests for the export\n          items:\n            $ref:
    '#/components/schemas/v1alpha1.VirtualMachineExportManifest'\n          x-kubernetes-list-type:
    map\n          x-kubernetes-list-map-keys:\n          - type\n        volumes:\n
    \         type: array\n          description: Volumes is a list of available volumes
    to export\n          items:\n            $ref: '#/components/schemas/v1alpha1.VirtualMachineExportVolume'\n
    \         x-kubernetes-list-type: map\n          x-kubernetes-list-map-keys:\n
    \         - name\n      description: \"VirtualMachineExportLink contains a list
    of volumes available\\\n        \\ for export, as well as the URLs to obtain these
    volumes\"\n    v1alpha1.VirtualMachineExportLinks:\n      type: object\n      properties:\n
    \       external:\n          $ref: '#/components/schemas/v1alpha1.VirtualMachineExportLink'\n
    \       internal:\n          $ref: '#/components/schemas/v1alpha1.VirtualMachineExportLink'\n
    \     description: VirtualMachineExportLinks contains the links that point the
    exported\n        VM resources\n    v1alpha1.VirtualMachineExportList:\n      required:\n
    \     - items\n      - metadata\n      type: object\n      properties:\n        apiVersion:\n
    \         type: string\n          description: \"APIVersion defines the versioned
    schema of this representation\\\n            \\ of an object. Servers should convert
    recognized schemas to the latest\\\n            \\ internal value, and may reject
    unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\"\n
    \       items:\n          type: array\n          items:\n            $ref: '#/components/schemas/v1alpha1.VirtualMachineExport'\n
    \         x-kubernetes-list-type: atomic\n        kind:\n          type: string\n
    \         description: \"Kind is a string value representing the REST resource
    this\\\n            \\ object represents. Servers may infer this from the endpoint
    the client\\\n            \\ submits requests to. Cannot be updated. In CamelCase.
    More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"\n
    \       metadata:\n          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta'\n
    \     description: VirtualMachineExportList is a list of VirtualMachineExport
    resources\n    v1alpha1.VirtualMachineExportManifest:\n      required:\n      -
    type\n      - url\n      type: object\n      properties:\n        type:\n          type:
    string\n          description: Type is the type of manifest returned\n          default:
    \"\"\n        url:\n          type: string\n          description: Url is the
    url of the endpoint that returns the manifest\n          default: \"\"\n      description:
    VirtualMachineExportManifest contains the type and URL of the exported\n        manifest\n
    \   v1alpha1.VirtualMachineExportSpec:\n      required:\n      - source\n      type:
    object\n      properties:\n        source:\n          $ref: '#/components/schemas/k8s.io.api.core.v1.TypedLocalObjectReference'\n
    \       tokenSecretRef:\n          type: string\n          description: TokenSecretRef
    is the name of the custom-defined secret that\n            contains the token
    used by the export server pod\n        ttlDuration:\n          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.Duration'\n
    \     description: VirtualMachineExportSpec is the spec for a VirtualMachineExport\n
    \       resource\n    v1alpha1.VirtualMachineExportStatus:\n      type: object\n
    \     properties:\n        conditions:\n          type: array\n          items:\n
    \           $ref: '#/components/schemas/v1alpha1.Condition'\n          x-kubernetes-list-type:
    atomic\n        links:\n          $ref: '#/components/schemas/v1alpha1.VirtualMachineExportLinks'\n
    \       phase:\n          type: string\n        serviceName:\n          type:
    string\n          description: ServiceName is the name of the service created
    associated with\n            the Virtual Machine export. It will be used to create
    the internal URLs\n            for downloading the images\n        tokenSecretRef:\n
    \         type: string\n          description: TokenSecretRef is the name of the
    secret that contains the\n            token used by the export server pod\n        ttlExpirationTime:\n
    \         $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.Time'\n
    \       virtualMachineName:\n          type: string\n          description: VirtualMachineName
    shows the name of the source virtual machine\n            if the source is either
    a VirtualMachine or a VirtualMachineSnapshot.\n            This is mainly to easily
    identify the source VirtualMachine in case of\n            a VirtualMachineSnapshot\n
    \     description: VirtualMachineExportStatus is the status for a VirtualMachineExport\n
    \       resource\n    v1alpha1.VirtualMachineExportVolume:\n      required:\n
    \     - name\n      type: object\n      properties:\n        formats:\n          type:
    array\n          items:\n            $ref: '#/components/schemas/v1alpha1.VirtualMachineExportVolumeFormat'\n
    \         x-kubernetes-list-type: map\n          x-kubernetes-list-map-keys:\n
    \         - format\n        name:\n          type: string\n          description:
    Name is the name of the exported volume\n          default: \"\"\n      description:
    VirtualMachineExportVolume contains the name and available formats\n        for
    the exported volume\n    v1alpha1.VirtualMachineExportVolumeFormat:\n      required:\n
    \     - format\n      - url\n      type: object\n      properties:\n        format:\n
    \         type: string\n          description: Format is the format of the image
    at the specified URL\n          default: \"\"\n        url:\n          type: string\n
    \         description: Url is the url that contains the volume in the format specified\n
    \         default: \"\"\n      description: VirtualMachineExportVolumeFormat contains
    the format type and URL\n        to get the volume in that format\n    v1alpha1.VirtualMachinePool:\n
    \     required:\n      - spec\n      type: object\n      properties:\n        apiVersion:\n
    \         type: string\n          description: \"APIVersion defines the versioned
    schema of this representation\\\n            \\ of an object. Servers should convert
    recognized schemas to the latest\\\n            \\ internal value, and may reject
    unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\"\n
    \       kind:\n          type: string\n          description: \"Kind is a string
    value representing the REST resource this\\\n            \\ object represents.
    Servers may infer this from the endpoint the client\\\n            \\ submits
    requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"\n
    \       metadata:\n          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta'\n
    \       spec:\n          $ref: '#/components/schemas/v1alpha1.VirtualMachinePoolSpec'\n
    \       status:\n          $ref: '#/components/schemas/v1alpha1.VirtualMachinePoolStatus'\n
    \     description: VirtualMachinePool resource contains a VirtualMachine configuration\n
    \       that can be used to replicate multiple VirtualMachine resources.\n    v1alpha1.VirtualMachinePoolCondition:\n
    \     required:\n      - status\n      - type\n      type: object\n      properties:\n
    \       message:\n          type: string\n        reason:\n          type: string\n
    \       status:\n          type: string\n          default: \"\"\n        type:\n
    \         type: string\n          default: \"\"\n    v1alpha1.VirtualMachinePoolList:\n
    \     required:\n      - items\n      type: object\n      properties:\n        apiVersion:\n
    \         type: string\n          description: \"APIVersion defines the versioned
    schema of this representation\\\n            \\ of an object. Servers should convert
    recognized schemas to the latest\\\n            \\ internal value, and may reject
    unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\"\n
    \       items:\n          type: array\n          items:\n            $ref: '#/components/schemas/v1alpha1.VirtualMachinePool'\n
    \       kind:\n          type: string\n          description: \"Kind is a string
    value representing the REST resource this\\\n            \\ object represents.
    Servers may infer this from the endpoint the client\\\n            \\ submits
    requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"\n
    \       metadata:\n          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta'\n
    \     description: VirtualMachinePoolList is a list of VirtualMachinePool resources.\n
    \   v1alpha1.VirtualMachinePoolSpec:\n      required:\n      - selector\n      -
    virtualMachineTemplate\n      type: object\n      properties:\n        paused:\n
    \         type: boolean\n          description: Indicates that the pool is paused.\n
    \       replicas:\n          type: integer\n          description: Number of desired
    pods. This is a pointer to distinguish between\n            explicit zero and
    not specified. Defaults to 1.\n          format: int32\n        selector:\n          $ref:
    '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector'\n        virtualMachineTemplate:\n
    \         $ref: '#/components/schemas/v1alpha1.VirtualMachineTemplateSpec'\n    v1alpha1.VirtualMachinePoolStatus:\n
    \     type: object\n      properties:\n        conditions:\n          type: array\n
    \         items:\n            $ref: '#/components/schemas/v1alpha1.VirtualMachinePoolCondition'\n
    \         x-kubernetes-list-type: atomic\n        labelSelector:\n          type:
    string\n          description: Canonical form of the label selector for HPA which
    consumes\n            it through the scale subresource.\n        readyReplicas:\n
    \         type: integer\n          format: int32\n        replicas:\n          type:
    integer\n          format: int32\n    v1alpha1.VirtualMachineRestore:\n      required:\n
    \     - spec\n      type: object\n      properties:\n        apiVersion:\n          type:
    string\n          description: \"APIVersion defines the versioned schema of this
    representation\\\n            \\ of an object. Servers should convert recognized
    schemas to the latest\\\n            \\ internal value, and may reject unrecognized
    values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\"\n
    \       kind:\n          type: string\n          description: \"Kind is a string
    value representing the REST resource this\\\n            \\ object represents.
    Servers may infer this from the endpoint the client\\\n            \\ submits
    requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"\n
    \       metadata:\n          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta'\n
    \       spec:\n          $ref: '#/components/schemas/v1alpha1.VirtualMachineRestoreSpec'\n
    \       status:\n          $ref: '#/components/schemas/v1alpha1.VirtualMachineRestoreStatus'\n
    \     description: VirtualMachineRestore defines the operation of restoring a
    VM\n    v1alpha1.VirtualMachineRestoreList:\n      required:\n      - items\n
    \     - metadata\n      type: object\n      properties:\n        apiVersion:\n
    \         type: string\n          description: \"APIVersion defines the versioned
    schema of this representation\\\n            \\ of an object. Servers should convert
    recognized schemas to the latest\\\n            \\ internal value, and may reject
    unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\"\n
    \       items:\n          type: array\n          items:\n            $ref: '#/components/schemas/v1alpha1.VirtualMachineRestore'\n
    \       kind:\n          type: string\n          description: \"Kind is a string
    value representing the REST resource this\\\n            \\ object represents.
    Servers may infer this from the endpoint the client\\\n            \\ submits
    requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"\n
    \       metadata:\n          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta'\n
    \     description: VirtualMachineRestoreList is a list of VirtualMachineRestore
    resources\n    v1alpha1.VirtualMachineRestoreSpec:\n      required:\n      - target\n
    \     - virtualMachineSnapshotName\n      type: object\n      properties:\n        patches:\n
    \         type: array\n          description: |-\n            If the target for
    the restore does not exist, it will be created. Patches holds JSON patches that
    would be applied to the target manifest before it's created. Patches should fit
    the target's Kind.\n\n            Example for a patch: {\"op\": \"replace\", \"path\":
    \"/metadata/name\", \"value\": \"new-vm-name\"}\n          items:\n            type:
    string\n            default: \"\"\n          x-kubernetes-list-type: atomic\n
    \       target:\n          $ref: '#/components/schemas/k8s.io.api.core.v1.TypedLocalObjectReference'\n
    \       virtualMachineSnapshotName:\n          type: string\n          default:
    \"\"\n      description: VirtualMachineRestoreSpec is the spec for a VirtualMachineRestoreresource\n
    \   v1alpha1.VirtualMachineRestoreStatus:\n      type: object\n      properties:\n
    \       complete:\n          type: boolean\n        conditions:\n          type:
    array\n          items:\n            $ref: '#/components/schemas/v1alpha1.Condition'\n
    \       deletedDataVolumes:\n          type: array\n          items:\n            type:
    string\n            default: \"\"\n        restoreTime:\n          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.Time'\n
    \       restores:\n          type: array\n          items:\n            $ref:
    '#/components/schemas/v1alpha1.VolumeRestore'\n      description: VirtualMachineRestoreStatus
    is the spec for a VirtualMachineRestoreresource\n    v1alpha1.VirtualMachineSnapshot:\n
    \     required:\n      - spec\n      type: object\n      properties:\n        apiVersion:\n
    \         type: string\n          description: \"APIVersion defines the versioned
    schema of this representation\\\n            \\ of an object. Servers should convert
    recognized schemas to the latest\\\n            \\ internal value, and may reject
    unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\"\n
    \       kind:\n          type: string\n          description: \"Kind is a string
    value representing the REST resource this\\\n            \\ object represents.
    Servers may infer this from the endpoint the client\\\n            \\ submits
    requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"\n
    \       metadata:\n          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta'\n
    \       spec:\n          $ref: '#/components/schemas/v1alpha1.VirtualMachineSnapshotSpec'\n
    \       status:\n          $ref: '#/components/schemas/v1alpha1.VirtualMachineSnapshotStatus'\n
    \     description: VirtualMachineSnapshot defines the operation of snapshotting
    a\n        VM\n    v1alpha1.VirtualMachineSnapshotContent:\n      required:\n
    \     - spec\n      type: object\n      properties:\n        apiVersion:\n          type:
    string\n          description: \"APIVersion defines the versioned schema of this
    representation\\\n            \\ of an object. Servers should convert recognized
    schemas to the latest\\\n            \\ internal value, and may reject unrecognized
    values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\"\n
    \       kind:\n          type: string\n          description: \"Kind is a string
    value representing the REST resource this\\\n            \\ object represents.
    Servers may infer this from the endpoint the client\\\n            \\ submits
    requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"\n
    \       metadata:\n          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta'\n
    \       spec:\n          $ref: '#/components/schemas/v1alpha1.VirtualMachineSnapshotContentSpec'\n
    \       status:\n          $ref: '#/components/schemas/v1alpha1.VirtualMachineSnapshotContentStatus'\n
    \     description: VirtualMachineSnapshotContent contains the snapshot data\n
    \   v1alpha1.VirtualMachineSnapshotContentList:\n      required:\n      - items\n
    \     - metadata\n      type: object\n      properties:\n        apiVersion:\n
    \         type: string\n          description: \"APIVersion defines the versioned
    schema of this representation\\\n            \\ of an object. Servers should convert
    recognized schemas to the latest\\\n            \\ internal value, and may reject
    unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\"\n
    \       items:\n          type: array\n          items:\n            $ref: '#/components/schemas/v1alpha1.VirtualMachineSnapshotContent'\n
    \       kind:\n          type: string\n          description: \"Kind is a string
    value representing the REST resource this\\\n            \\ object represents.
    Servers may infer this from the endpoint the client\\\n            \\ submits
    requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"\n
    \       metadata:\n          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta'\n
    \     description: VirtualMachineSnapshotContentList is a list of VirtualMachineSnapshot\n
    \       resources\n    v1alpha1.VirtualMachineSnapshotContentSpec:\n      required:\n
    \     - source\n      type: object\n      properties:\n        source:\n          $ref:
    '#/components/schemas/v1alpha1.SourceSpec'\n        virtualMachineSnapshotName:\n
    \         type: string\n        volumeBackups:\n          type: array\n          items:\n
    \           $ref: '#/components/schemas/v1alpha1.VolumeBackup'\n      description:
    VirtualMachineSnapshotContentSpec is the spec for a VirtualMachineSnapshotContent\n
    \       resource\n    v1alpha1.VirtualMachineSnapshotContentStatus:\n      type:
    object\n      properties:\n        creationTime:\n          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.Time'\n
    \       error:\n          $ref: '#/components/schemas/v1alpha1.Error'\n        readyToUse:\n
    \         type: boolean\n        volumeSnapshotStatus:\n          type: array\n
    \         items:\n            $ref: '#/components/schemas/v1alpha1.VolumeSnapshotStatus'\n
    \     description: VirtualMachineSnapshotContentStatus is the status for a VirtualMachineSnapshotStatus\n
    \       resource\n    v1alpha1.VirtualMachineSnapshotList:\n      required:\n
    \     - items\n      - metadata\n      type: object\n      properties:\n        apiVersion:\n
    \         type: string\n          description: \"APIVersion defines the versioned
    schema of this representation\\\n            \\ of an object. Servers should convert
    recognized schemas to the latest\\\n            \\ internal value, and may reject
    unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\"\n
    \       items:\n          type: array\n          items:\n            $ref: '#/components/schemas/v1alpha1.VirtualMachineSnapshot'\n
    \       kind:\n          type: string\n          description: \"Kind is a string
    value representing the REST resource this\\\n            \\ object represents.
    Servers may infer this from the endpoint the client\\\n            \\ submits
    requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"\n
    \       metadata:\n          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta'\n
    \     description: VirtualMachineSnapshotList is a list of VirtualMachineSnapshot\n
    \       resources\n    v1alpha1.VirtualMachineSnapshotSpec:\n      required:\n
    \     - source\n      type: object\n      properties:\n        deletionPolicy:\n
    \         type: string\n        failureDeadline:\n          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.Duration'\n
    \       source:\n          $ref: '#/components/schemas/k8s.io.api.core.v1.TypedLocalObjectReference'\n
    \     description: VirtualMachineSnapshotSpec is the spec for a VirtualMachineSnapshot\n
    \       resource\n    v1alpha1.VirtualMachineSnapshotStatus:\n      type: object\n
    \     properties:\n        conditions:\n          type: array\n          items:\n
    \           $ref: '#/components/schemas/v1alpha1.Condition'\n        creationTime:\n
    \         $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.Time'\n
    \       error:\n          $ref: '#/components/schemas/v1alpha1.Error'\n        indications:\n
    \         type: array\n          items:\n            type: string\n            default:
    \"\"\n          x-kubernetes-list-type: set\n        phase:\n          type: string\n
    \       readyToUse:\n          type: boolean\n        snapshotVolumes:\n          $ref:
    '#/components/schemas/v1alpha1.SnapshotVolumesLists'\n        sourceUID:\n          type:
    string\n        virtualMachineSnapshotContentName:\n          type: string\n      description:
    VirtualMachineSnapshotStatus is the status for a VirtualMachineSnapshot\n        resource\n
    \   v1alpha1.VirtualMachineTemplateSpec:\n      type: object\n      properties:\n
    \       metadata:\n          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta'\n
    \       spec:\n          $ref: '#/components/schemas/v1.VirtualMachineSpec'\n
    \   v1alpha1.VolumeBackup:\n      required:\n      - persistentVolumeClaim\n      -
    volumeName\n      type: object\n      properties:\n        persistentVolumeClaim:\n
    \         $ref: '#/components/schemas/v1alpha1.PersistentVolumeClaim'\n        volumeName:\n
    \         type: string\n          default: \"\"\n        volumeSnapshotName:\n
    \         type: string\n      description: VolumeBackup contains the data neeed
    to restore a PVC\n    v1alpha1.VolumeRestore:\n      required:\n      - persistentVolumeClaim\n
    \     - volumeName\n      - volumeSnapshotName\n      type: object\n      properties:\n
    \       dataVolumeName:\n          type: string\n        persistentVolumeClaim:\n
    \         type: string\n          default: \"\"\n        volumeName:\n          type:
    string\n          default: \"\"\n        volumeSnapshotName:\n          type:
    string\n          default: \"\"\n      description: VolumeRestore contains the
    data neeed to restore a PVC\n    v1alpha1.VolumeSnapshotStatus:\n      required:\n
    \     - volumeSnapshotName\n      type: object\n      properties:\n        creationTime:\n
    \         $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.Time'\n
    \       error:\n          $ref: '#/components/schemas/v1alpha1.Error'\n        readyToUse:\n
    \         type: boolean\n        volumeSnapshotName:\n          type: string\n
    \         default: \"\"\n      description: VolumeSnapshotStatus is the status
    of a VolumeSnapshot\n    v1beta1.CPUInstancetype:\n      required:\n      - guest\n
    \     type: object\n      properties:\n        dedicatedCPUPlacement:\n          type:
    boolean\n          description: DedicatedCPUPlacement requests the scheduler to
    place the VirtualMachineInstance\n            on a node with enough dedicated
    pCPUs and pin the vCPUs to it.\n        guest:\n          type: integer\n          description:
    |-\n            Required number of vCPUs to expose to the guest.\n\n            The
    resulting CPU topology being derived from the optional PreferredCPUTopology attribute
    of CPUPreferences that itself defaults to PreferSockets.\n          format: int64\n
    \         default: 0\n        isolateEmulatorThread:\n          type: boolean\n
    \         description: IsolateEmulatorThread requests one more dedicated pCPU
    to be\n            allocated for the VMI to place the emulator thread on it.\n
    \       model:\n          type: string\n          description: Model specifies
    the CPU model inside the VMI. List of available\n            models https://github.com/libvirt/libvirt/tree/master/src/cpu_map.
    It\n            is possible to specify special cases like \"host-passthrough\"
    to get the\n            same CPU as the node and \"host-model\" to get CPU closest
    to the node one.\n            Defaults to host-model.\n        numa:\n          $ref:
    '#/components/schemas/v1.NUMA'\n        realtime:\n          $ref: '#/components/schemas/v1.Realtime'\n
    \     description: |-\n        CPUInstancetype contains the CPU related configuration
    of a given VirtualMachineInstancetypeSpec.\n\n        Guest is a required attribute
    and defines the number of vCPUs to be exposed to the guest by the instancetype.\n
    \   v1beta1.CPUPreferenceRequirement:\n      required:\n      - guest\n      type:
    object\n      properties:\n        guest:\n          type: integer\n          description:
    Minimal number of vCPUs required by the preference.\n          format: int64\n
    \         default: 0\n    v1beta1.CPUPreferences:\n      type: object\n      properties:\n
    \       preferredCPUFeatures:\n          type: array\n          description: PreferredCPUFeatures
    optionally defines a slice of preferred\n            CPU features.\n          items:\n
    \           $ref: '#/components/schemas/v1.CPUFeature'\n        preferredCPUTopology:\n
    \         type: string\n          description: \"PreferredCPUTopology optionally
    defines the preferred guest\\\n            \\ visible CPU topology, defaults to
    PreferSockets.\"\n        spreadOptions:\n          $ref: '#/components/schemas/v1beta1.SpreadOptions'\n
    \     description: CPUPreferences contains various optional CPU preferences.\n
    \   v1beta1.ClockPreferences:\n      type: object\n      properties:\n        preferredClockOffset:\n
    \         $ref: '#/components/schemas/v1.ClockOffset'\n        preferredTimer:\n
    \         $ref: '#/components/schemas/v1.Timer'\n      description: ClockPreferences
    contains various optional defaults for Clock.\n    v1beta1.DataVolumeBlankImage:\n
    \     type: object\n      description: DataVolumeBlankImage provides the parameters
    to create a new raw\n        blank image for the PVC\n    v1beta1.DataVolumeCheckpoint:\n
    \     required:\n      - current\n      - previous\n      type: object\n      properties:\n
    \       current:\n          type: string\n          description: Current is the
    identifier of the snapshot created for this\n            checkpoint.\n          default:
    \"\"\n        previous:\n          type: string\n          description: Previous
    is the identifier of the snapshot from the previous\n            checkpoint.\n
    \         default: \"\"\n      description: DataVolumeCheckpoint defines a stage
    in a warm migration.\n    v1beta1.DataVolumeSource:\n      type: object\n      properties:\n
    \       blank:\n          $ref: '#/components/schemas/v1beta1.DataVolumeBlankImage'\n
    \       gcs:\n          $ref: '#/components/schemas/v1beta1.DataVolumeSourceGCS'\n
    \       http:\n          $ref: '#/components/schemas/v1beta1.DataVolumeSourceHTTP'\n
    \       imageio:\n          $ref: '#/components/schemas/v1beta1.DataVolumeSourceImageIO'\n
    \       pvc:\n          $ref: '#/components/schemas/v1beta1.DataVolumeSourcePVC'\n
    \       registry:\n          $ref: '#/components/schemas/v1beta1.DataVolumeSourceRegistry'\n
    \       s3:\n          $ref: '#/components/schemas/v1beta1.DataVolumeSourceS3'\n
    \       snapshot:\n          $ref: '#/components/schemas/v1beta1.DataVolumeSourceSnapshot'\n
    \       upload:\n          $ref: '#/components/schemas/v1beta1.DataVolumeSourceUpload'\n
    \       vddk:\n          $ref: '#/components/schemas/v1beta1.DataVolumeSourceVDDK'\n
    \     description: \"DataVolumeSource represents the source for our Data Volume,
    this\\\n        \\ can be HTTP, Imageio, S3, GCS, Registry or an existing PVC\"\n
    \   v1beta1.DataVolumeSourceGCS:\n      required:\n      - url\n      type: object\n
    \     properties:\n        secretRef:\n          type: string\n          description:
    SecretRef provides the secret reference needed to access the\n            GCS
    source\n        url:\n          type: string\n          description: URL is the
    url of the GCS source\n          default: \"\"\n      description: DataVolumeSourceGCS
    provides the parameters to create a Data Volume\n        from an GCS source\n
    \   v1beta1.DataVolumeSourceHTTP:\n      required:\n      - url\n      type: object\n
    \     properties:\n        certConfigMap:\n          type: string\n          description:
    \"CertConfigMap is a configmap reference, containing a Certificate\\\n            \\
    Authority(CA) public key, and a base64 encoded pem certificate\"\n        extraHeaders:\n
    \         type: array\n          description: ExtraHeaders is a list of strings
    containing extra headers\n            to include with HTTP transfer requests\n
    \         items:\n            type: string\n            default: \"\"\n        secretExtraHeaders:\n
    \         type: array\n          description: \"SecretExtraHeaders is a list of
    Secret references, each containing\\\n            \\ an extra HTTP header that
    may include sensitive information\"\n          items:\n            type: string\n
    \           default: \"\"\n        secretRef:\n          type: string\n          description:
    \"SecretRef A Secret reference, the secret should contain accessKeyId\\\n            \\
    (user name) base64 encoded, and secretKey (password) also base64 encoded\"\n        url:\n
    \         type: string\n          description: URL is the URL of the http(s) endpoint\n
    \         default: \"\"\n      description: \"DataVolumeSourceHTTP can be either
    an http or https endpoint,\\\n        \\ with an optional basic auth user name
    and password, and an optional configmap\\\n        \\ containing additional CAs\"\n
    \   v1beta1.DataVolumeSourceImageIO:\n      required:\n      - diskId\n      -
    url\n      type: object\n      properties:\n        certConfigMap:\n          type:
    string\n          description: CertConfigMap provides a reference to the CA cert\n
    \       diskId:\n          type: string\n          description: DiskID provides
    id of a disk to be imported\n          default: \"\"\n        secretRef:\n          type:
    string\n          description: SecretRef provides the secret reference needed
    to access the\n            ovirt-engine\n        url:\n          type: string\n
    \         description: URL is the URL of the ovirt-engine\n          default:
    \"\"\n      description: DataVolumeSourceImageIO provides the parameters to create
    a Data\n        Volume from an imageio source\n    v1beta1.DataVolumeSourcePVC:\n
    \     required:\n      - name\n      - namespace\n      type: object\n      properties:\n
    \       name:\n          type: string\n          description: The name of the
    source PVC\n          default: \"\"\n        namespace:\n          type: string\n
    \         description: The namespace of the source PVC\n          default: \"\"\n
    \     description: DataVolumeSourcePVC provides the parameters to create a Data
    Volume\n        from an existing PVC\n    v1beta1.DataVolumeSourceRef:\n      required:\n
    \     - kind\n      - name\n      type: object\n      properties:\n        kind:\n
    \         type: string\n          description: \"The kind of the source reference,
    currently only \\\"DataSource\\\"\\\n            \\ is supported\"\n          default:
    \"\"\n        name:\n          type: string\n          description: The name of
    the source reference\n          default: \"\"\n        namespace:\n          type:
    string\n          description: \"The namespace of the source reference, defaults
    to the DataVolume\\\n            \\ namespace\"\n      description: DataVolumeSourceRef
    defines an indirect reference to the source\n        of data for the DataVolume\n
    \   v1beta1.DataVolumeSourceRegistry:\n      type: object\n      properties:\n
    \       certConfigMap:\n          type: string\n          description: CertConfigMap
    provides a reference to the Registry certs\n        imageStream:\n          type:
    string\n          description: ImageStream is the name of image stream for import\n
    \       pullMethod:\n          type: string\n          description: \"PullMethod
    can be either \\\"pod\\\" (default import), or \\\"node\\\"\\\n            \\
    (node docker cache based import)\"\n        secretRef:\n          type: string\n
    \         description: SecretRef provides the secret reference needed to access
    the\n            Registry source\n        url:\n          type: string\n          description:
    \"URL is the url of the registry source (starting with the scheme:\\\n            \\
    docker, oci-archive)\"\n      description: DataVolumeSourceRegistry provides the
    parameters to create a Data\n        Volume from an registry source\n    v1beta1.DataVolumeSourceS3:\n
    \     required:\n      - url\n      type: object\n      properties:\n        certConfigMap:\n
    \         type: string\n          description: \"CertConfigMap is a configmap
    reference, containing a Certificate\\\n            \\ Authority(CA) public key,
    and a base64 encoded pem certificate\"\n        secretRef:\n          type: string\n
    \         description: SecretRef provides the secret reference needed to access
    the\n            S3 source\n        url:\n          type: string\n          description:
    URL is the url of the S3 source\n          default: \"\"\n      description: DataVolumeSourceS3
    provides the parameters to create a Data Volume\n        from an S3 source\n    v1beta1.DataVolumeSourceSnapshot:\n
    \     required:\n      - name\n      - namespace\n      type: object\n      properties:\n
    \       name:\n          type: string\n          description: The name of the
    source VolumeSnapshot\n          default: \"\"\n        namespace:\n          type:
    string\n          description: The namespace of the source VolumeSnapshot\n          default:
    \"\"\n      description: DataVolumeSourceSnapshot provides the parameters to create
    a Data\n        Volume from an existing VolumeSnapshot\n    v1beta1.DataVolumeSourceUpload:\n
    \     type: object\n      description: DataVolumeSourceUpload provides the parameters
    to create a Data\n        Volume by uploading the source\n    v1beta1.DataVolumeSourceVDDK:\n
    \     type: object\n      properties:\n        backingFile:\n          type: string\n
    \         description: BackingFile is the path to the virtual hard disk to migrate\n
    \           from vCenter/ESXi\n        initImageURL:\n          type: string\n
    \         description: \"InitImageURL is an optional URL to an image containing
    an\\\n            \\ extracted VDDK library, overrides v2v-vmware config map\"\n
    \       secretRef:\n          type: string\n          description: SecretRef provides
    a reference to a secret containing the username\n            and password needed
    to access the vCenter or ESXi host\n        thumbprint:\n          type: string\n
    \         description: Thumbprint is the certificate thumbprint of the vCenter
    or\n            ESXi host\n        url:\n          type: string\n          description:
    URL is the URL of the vCenter or ESXi host with the VM to migrate\n        uuid:\n
    \         type: string\n          description: UUID is the UUID of the virtual
    machine that the backing file\n            is attached to in vCenter/ESXi\n      description:
    DataVolumeSourceVDDK provides the parameters to create a Data Volume\n        from
    a Vmware source\n    v1beta1.DataVolumeSpec:\n      type: object\n      properties:\n
    \       checkpoints:\n          type: array\n          description: \"Checkpoints
    is a list of DataVolumeCheckpoints, representing\\\n            \\ stages in a
    multistage import.\"\n          items:\n            $ref: '#/components/schemas/v1beta1.DataVolumeCheckpoint'\n
    \       contentType:\n          type: string\n          description: \"DataVolumeContentType
    options: \\\"kubevirt\\\", \\\"archive\\\"\"\n        finalCheckpoint:\n          type:
    boolean\n          description: FinalCheckpoint indicates whether the current
    DataVolumeCheckpoint\n            is the final checkpoint.\n        preallocation:\n
    \         type: boolean\n          description: Preallocation controls whether
    storage for DataVolumes should\n            be allocated in advance.\n        priorityClassName:\n
    \         type: string\n          description: \"PriorityClassName for Importer,
    Cloner and Uploader pod\"\n        pvc:\n          $ref: '#/components/schemas/k8s.io.api.core.v1.PersistentVolumeClaimSpec'\n
    \       source:\n          $ref: '#/components/schemas/v1beta1.DataVolumeSource'\n
    \       sourceRef:\n          $ref: '#/components/schemas/v1beta1.DataVolumeSourceRef'\n
    \       storage:\n          $ref: '#/components/schemas/v1beta1.StorageSpec'\n
    \     description: DataVolumeSpec defines the DataVolume type specification\n
    \   v1beta1.DevicePreferences:\n      type: object\n      properties:\n        preferredAutoattachGraphicsDevice:\n
    \         type: boolean\n          description: PreferredAutoattachGraphicsDevice
    optionally defines the preferred\n            value of AutoattachGraphicsDevice\n
    \       preferredAutoattachInputDevice:\n          type: boolean\n          description:
    PreferredAutoattachInputDevice optionally defines the preferred\n            value
    of AutoattachInputDevice\n        preferredAutoattachMemBalloon:\n          type:
    boolean\n          description: PreferredAutoattachMemBalloon optionally defines
    the preferred\n            value of AutoattachMemBalloon\n        preferredAutoattachPodInterface:\n
    \         type: boolean\n          description: PreferredAutoattachPodInterface
    optionally defines the preferred\n            value of AutoattachPodInterface\n
    \       preferredAutoattachSerialConsole:\n          type: boolean\n          description:
    PreferredAutoattachSerialConsole optionally defines the preferred\n            value
    of AutoattachSerialConsole\n        preferredBlockMultiQueue:\n          type:
    boolean\n          description: PreferredBlockMultiQueue optionally enables the
    vhost multiqueue\n            feature for virtio disks.\n        preferredCdromBus:\n
    \         type: string\n          description: PreferredCdromBus optionally defines
    the preferred bus for\n            Cdrom Disk devices.\n        preferredDisableHotplug:\n
    \         type: boolean\n          description: PreferredDisableHotplug optionally
    defines the preferred value\n            of DisableHotplug\n        preferredDiskBlockSize:\n
    \         $ref: '#/components/schemas/v1.BlockSize'\n        preferredDiskBus:\n
    \         type: string\n          description: PreferredDiskBus optionally defines
    the preferred bus for Disk\n            Disk devices.\n        preferredDiskCache:\n
    \         type: string\n          description: PreferredCache optionally defines
    the DriverCache to be used\n            by Disk devices.\n        preferredDiskDedicatedIoThread:\n
    \         type: boolean\n          description: PreferredDedicatedIoThread optionally
    enables dedicated IO\n            threads for Disk devices.\n        preferredDiskIO:\n
    \         type: string\n          description: PreferredIo optionally defines
    the QEMU disk IO mode to be\n            used by Disk devices.\n        preferredInputBus:\n
    \         type: string\n          description: PreferredInputBus optionally defines
    the preferred bus for\n            Input devices.\n        preferredInputType:\n
    \         type: string\n          description: PreferredInputType optionally defines
    the preferred type for\n            Input devices.\n        preferredInterfaceMasquerade:\n
    \         $ref: '#/components/schemas/v1.InterfaceMasquerade'\n        preferredInterfaceModel:\n
    \         type: string\n          description: PreferredInterfaceModel optionally
    defines the preferred model\n            to be used by Interface devices.\n        preferredLunBus:\n
    \         type: string\n          description: PreferredLunBus optionally defines
    the preferred bus for Lun\n            Disk devices.\n        preferredNetworkInterfaceMultiQueue:\n
    \         type: boolean\n          description: PreferredNetworkInterfaceMultiQueue
    optionally enables the\n            vhost multiqueue feature for virtio interfaces.\n
    \       preferredRng:\n          $ref: '#/components/schemas/v1.Rng'\n        preferredSoundModel:\n
    \         type: string\n          description: PreferredSoundModel optionally
    defines the preferred model\n            for Sound devices.\n        preferredTPM:\n
    \         $ref: '#/components/schemas/v1.TPMDevice'\n        preferredUseVirtioTransitional:\n
    \         type: boolean\n          description: PreferredUseVirtioTransitional
    optionally defines the preferred\n            value of UseVirtioTransitional\n
    \       preferredVirtualGPUOptions:\n          $ref: '#/components/schemas/v1.VGPUOptions'\n
    \     description: DevicePreferences contains various optional Device preferences.\n
    \   v1beta1.FeaturePreferences:\n      type: object\n      properties:\n        preferredAcpi:\n
    \         $ref: '#/components/schemas/v1.FeatureState'\n        preferredApic:\n
    \         $ref: '#/components/schemas/v1.FeatureAPIC'\n        preferredHyperv:\n
    \         $ref: '#/components/schemas/v1.FeatureHyperv'\n        preferredKvm:\n
    \         $ref: '#/components/schemas/v1.FeatureKVM'\n        preferredPvspinlock:\n
    \         $ref: '#/components/schemas/v1.FeatureState'\n        preferredSmm:\n
    \         $ref: '#/components/schemas/v1.FeatureState'\n      description: FeaturePreferences
    contains various optional defaults for Features.\n    v1beta1.FirmwarePreferences:\n
    \     type: object\n      properties:\n        preferredUseBios:\n          type:
    boolean\n          description: PreferredUseBios optionally enables BIOS\n        preferredUseBiosSerial:\n
    \         type: boolean\n          description: |-\n            PreferredUseBiosSerial
    optionally transmitts BIOS output over the serial.\n\n            Requires PreferredUseBios
    to be enabled.\n        preferredUseEfi:\n          type: boolean\n          description:
    PreferredUseEfi optionally enables EFI\n        preferredUseSecureBoot:\n          type:
    boolean\n          description: |-\n            PreferredUseSecureBoot optionally
    enables SecureBoot and the OVMF roms will be swapped for SecureBoot-enabled ones.\n\n
    \           Requires PreferredUseEfi and PreferredSmm to be enabled.\n      description:
    FirmwarePreferences contains various optional defaults for Firmware.\n    v1beta1.MachinePreferences:\n
    \     type: object\n      properties:\n        preferredMachineType:\n          type:
    string\n          description: PreferredMachineType optionally defines the preferred
    machine\n            type to use.\n      description: MachinePreferences contains
    various optional defaults for Machine.\n    v1beta1.MemoryInstancetype:\n      required:\n
    \     - guest\n      type: object\n      properties:\n        guest:\n          $ref:
    '#/components/schemas/k8s.io.apimachinery.pkg.api.resource.Quantity'\n        hugepages:\n
    \         $ref: '#/components/schemas/v1.Hugepages'\n        overcommitPercent:\n
    \         type: integer\n          description: \"OvercommitPercent is the percentage
    of the guest memory which\\\n            \\ will be overcommitted. This means
    that the VMIs parent pod (virt-launcher)\\\n            \\ will request less physical
    memory by a factor specified by the OvercommitPercent.\\\n            \\ Overcommits
    can lead to memory exhaustion, which in turn can lead to\\\n            \\ crashes.
    Use carefully. Defaults to 0\"\n          format: int32\n      description: |-\n
    \       MemoryInstancetype contains the Memory related configuration of a given
    VirtualMachineInstancetypeSpec.\n\n        Guest is a required attribute and defines
    the amount of RAM to be exposed to the guest by the instancetype.\n    v1beta1.MemoryPreferenceRequirement:\n
    \     required:\n      - guest\n      type: object\n      properties:\n        guest:\n
    \         $ref: '#/components/schemas/k8s.io.apimachinery.pkg.api.resource.Quantity'\n
    \   v1beta1.PreferenceRequirements:\n      type: object\n      properties:\n        cpu:\n
    \         $ref: '#/components/schemas/v1beta1.CPUPreferenceRequirement'\n        memory:\n
    \         $ref: '#/components/schemas/v1beta1.MemoryPreferenceRequirement'\n    v1beta1.SpreadOptions:\n
    \     type: object\n      properties:\n        across:\n          type: string\n
    \         description: \"Across optionally defines how to spread vCPUs across
    the guest\\\n            \\ visible topology. Default: SocketsCores\"\n        ratio:\n
    \         type: integer\n          description: |-\n            Ratio optionally
    defines the ratio to spread vCPUs across the guest visible topology:\n\n            CoresThreads
    \       - 1:2   - Controls the ratio of cores to threads. Only a ratio of 2 is
    currently accepted. SocketsCores        - 1:N   - Controls the ratio of socket
    to cores. SocketsCoresThreads - 1:N:2 - Controls the ratio of socket to cores.
    Each core providing 2 threads.\n\n            Default: 2\n          format: int64\n
    \   v1beta1.StorageSpec:\n      type: object\n      properties:\n        accessModes:\n
    \         type: array\n          description: \"AccessModes contains the desired
    access modes the volume should\\\n            \\ have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1\"\n
    \         items:\n            type: string\n            default: \"\"\n        dataSource:\n
    \         $ref: '#/components/schemas/k8s.io.api.core.v1.TypedLocalObjectReference'\n
    \       dataSourceRef:\n          $ref: '#/components/schemas/k8s.io.api.core.v1.TypedObjectReference'\n
    \       resources:\n          $ref: '#/components/schemas/k8s.io.api.core.v1.ResourceRequirements'\n
    \       selector:\n          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector'\n
    \       storageClassName:\n          type: string\n          description: \"Name
    of the StorageClass required by the claim. More info:\\\n            \\ https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1\"\n
    \       volumeMode:\n          type: string\n          description: |-\n            volumeMode
    defines what type of volume is required by the claim. Value of Filesystem is implied
    when not included in claim spec.\n\n            Possible enum values:\n             -
    `\"Block\"` means the volume will not be formatted with a filesystem and will
    remain a raw block device.\n             - `\"Filesystem\"` means the volume will
    be or is formatted with a filesystem.\n          enum:\n          - Block\n          -
    Filesystem\n        volumeName:\n          type: string\n          description:
    VolumeName is the binding reference to the PersistentVolume\n            backing
    this claim.\n      description: StorageSpec defines the Storage type specification\n
    \   v1beta1.VirtualMachineClusterInstancetype:\n      required:\n      - spec\n
    \     type: object\n      properties:\n        apiVersion:\n          type: string\n
    \         description: \"APIVersion defines the versioned schema of this representation\\\n
    \           \\ of an object. Servers should convert recognized schemas to the
    latest\\\n            \\ internal value, and may reject unrecognized values. More
    info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\"\n
    \       kind:\n          type: string\n          description: \"Kind is a string
    value representing the REST resource this\\\n            \\ object represents.
    Servers may infer this from the endpoint the client\\\n            \\ submits
    requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"\n
    \       metadata:\n          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta'\n
    \       spec:\n          $ref: '#/components/schemas/v1beta1.VirtualMachineInstancetypeSpec'\n
    \     description: VirtualMachineClusterInstancetype is a cluster scoped version
    of\n        VirtualMachineInstancetype resource.\n    v1beta1.VirtualMachineClusterInstancetypeList:\n
    \     required:\n      - items\n      type: object\n      properties:\n        apiVersion:\n
    \         type: string\n          description: \"APIVersion defines the versioned
    schema of this representation\\\n            \\ of an object. Servers should convert
    recognized schemas to the latest\\\n            \\ internal value, and may reject
    unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\"\n
    \       items:\n          type: array\n          items:\n            $ref: '#/components/schemas/v1beta1.VirtualMachineClusterInstancetype'\n
    \       kind:\n          type: string\n          description: \"Kind is a string
    value representing the REST resource this\\\n            \\ object represents.
    Servers may infer this from the endpoint the client\\\n            \\ submits
    requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"\n
    \       metadata:\n          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta'\n
    \     description: VirtualMachineClusterInstancetypeList is a list of VirtualMachineClusterInstancetype\n
    \       resources.\n    v1beta1.VirtualMachineClusterPreference:\n      required:\n
    \     - spec\n      type: object\n      properties:\n        apiVersion:\n          type:
    string\n          description: \"APIVersion defines the versioned schema of this
    representation\\\n            \\ of an object. Servers should convert recognized
    schemas to the latest\\\n            \\ internal value, and may reject unrecognized
    values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\"\n
    \       kind:\n          type: string\n          description: \"Kind is a string
    value representing the REST resource this\\\n            \\ object represents.
    Servers may infer this from the endpoint the client\\\n            \\ submits
    requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"\n
    \       metadata:\n          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta'\n
    \       spec:\n          $ref: '#/components/schemas/v1beta1.VirtualMachinePreferenceSpec'\n
    \     description: VirtualMachineClusterPreference is a cluster scoped version
    of\n        the VirtualMachinePreference resource.\n    v1beta1.VirtualMachineClusterPreferenceList:\n
    \     required:\n      - items\n      type: object\n      properties:\n        apiVersion:\n
    \         type: string\n          description: \"APIVersion defines the versioned
    schema of this representation\\\n            \\ of an object. Servers should convert
    recognized schemas to the latest\\\n            \\ internal value, and may reject
    unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\"\n
    \       items:\n          type: array\n          items:\n            $ref: '#/components/schemas/v1beta1.VirtualMachineClusterPreference'\n
    \         x-kubernetes-list-type: set\n        kind:\n          type: string\n
    \         description: \"Kind is a string value representing the REST resource
    this\\\n            \\ object represents. Servers may infer this from the endpoint
    the client\\\n            \\ submits requests to. Cannot be updated. In CamelCase.
    More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"\n
    \       metadata:\n          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta'\n
    \     description: VirtualMachineClusterPreferenceList is a list of VirtualMachineClusterPreference\n
    \       resources.\n    v1beta1.VirtualMachineInstancetype:\n      required:\n
    \     - spec\n      type: object\n      properties:\n        apiVersion:\n          type:
    string\n          description: \"APIVersion defines the versioned schema of this
    representation\\\n            \\ of an object. Servers should convert recognized
    schemas to the latest\\\n            \\ internal value, and may reject unrecognized
    values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\"\n
    \       kind:\n          type: string\n          description: \"Kind is a string
    value representing the REST resource this\\\n            \\ object represents.
    Servers may infer this from the endpoint the client\\\n            \\ submits
    requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"\n
    \       metadata:\n          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta'\n
    \       spec:\n          $ref: '#/components/schemas/v1beta1.VirtualMachineInstancetypeSpec'\n
    \     description: VirtualMachineInstancetype resource contains quantitative and
    resource\n        related VirtualMachine configuration that can be used by multiple
    VirtualMachine\n        resources.\n    v1beta1.VirtualMachineInstancetypeList:\n
    \     required:\n      - items\n      type: object\n      properties:\n        apiVersion:\n
    \         type: string\n          description: \"APIVersion defines the versioned
    schema of this representation\\\n            \\ of an object. Servers should convert
    recognized schemas to the latest\\\n            \\ internal value, and may reject
    unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\"\n
    \       items:\n          type: array\n          items:\n            $ref: '#/components/schemas/v1beta1.VirtualMachineInstancetype'\n
    \       kind:\n          type: string\n          description: \"Kind is a string
    value representing the REST resource this\\\n            \\ object represents.
    Servers may infer this from the endpoint the client\\\n            \\ submits
    requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"\n
    \       metadata:\n          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta'\n
    \     description: VirtualMachineInstancetypeList is a list of VirtualMachineInstancetype\n
    \       resources.\n    v1beta1.VirtualMachineInstancetypeSpec:\n      required:\n
    \     - cpu\n      - memory\n      type: object\n      properties:\n        annotations:\n
    \         type: object\n          additionalProperties:\n            type: string\n
    \           default: \"\"\n          description: Optionally defines the required
    Annotations to be used by the\n            instance type and applied to the VirtualMachineInstance\n
    \       cpu:\n          $ref: '#/components/schemas/v1beta1.CPUInstancetype'\n
    \       gpus:\n          type: array\n          description: Optionally defines
    any GPU devices associated with the instancetype.\n          items:\n            $ref:
    '#/components/schemas/v1.GPU'\n          x-kubernetes-list-type: atomic\n        hostDevices:\n
    \         type: array\n          description: Optionally defines any HostDevices
    associated with the instancetype.\n          items:\n            $ref: '#/components/schemas/v1.HostDevice'\n
    \         x-kubernetes-list-type: atomic\n        ioThreadsPolicy:\n          type:
    string\n          description: Optionally defines the IOThreadsPolicy to be used
    by the instancetype.\n        launchSecurity:\n          $ref: '#/components/schemas/v1.LaunchSecurity'\n
    \       memory:\n          $ref: '#/components/schemas/v1beta1.MemoryInstancetype'\n
    \       nodeSelector:\n          type: object\n          additionalProperties:\n
    \           type: string\n            default: \"\"\n          description: |-\n
    \           NodeSelector is a selector which must be true for the vmi to fit on
    a node. Selector which must match a node's labels for the vmi to be scheduled
    on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/\n\n
    \           NodeSelector is the name of the custom node selector for the instancetype.\n
    \       schedulerName:\n          type: string\n          description: |-\n            If
    specified, the VMI will be dispatched by specified scheduler. If not specified,
    the VMI will be dispatched by default scheduler.\n\n            SchedulerName
    is the name of the custom K8s scheduler for the instancetype.\n      description:
    |-\n        VirtualMachineInstancetypeSpec is a description of the VirtualMachineInstancetype
    or VirtualMachineClusterInstancetype.\n\n        CPU and Memory are required attributes
    with both requiring that their Guest attribute is defined, ensuring a number of
    vCPUs and amount of RAM is always provided by each instancetype.\n    v1beta1.VirtualMachinePreference:\n
    \     required:\n      - spec\n      type: object\n      properties:\n        apiVersion:\n
    \         type: string\n          description: \"APIVersion defines the versioned
    schema of this representation\\\n            \\ of an object. Servers should convert
    recognized schemas to the latest\\\n            \\ internal value, and may reject
    unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\"\n
    \       kind:\n          type: string\n          description: \"Kind is a string
    value representing the REST resource this\\\n            \\ object represents.
    Servers may infer this from the endpoint the client\\\n            \\ submits
    requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"\n
    \       metadata:\n          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta'\n
    \       spec:\n          $ref: '#/components/schemas/v1beta1.VirtualMachinePreferenceSpec'\n
    \     description: VirtualMachinePreference resource contains optional preferences\n
    \       related to the VirtualMachine.\n    v1beta1.VirtualMachinePreferenceList:\n
    \     required:\n      - items\n      type: object\n      properties:\n        apiVersion:\n
    \         type: string\n          description: \"APIVersion defines the versioned
    schema of this representation\\\n            \\ of an object. Servers should convert
    recognized schemas to the latest\\\n            \\ internal value, and may reject
    unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\"\n
    \       items:\n          type: array\n          items:\n            $ref: '#/components/schemas/v1beta1.VirtualMachinePreference'\n
    \         x-kubernetes-list-type: set\n        kind:\n          type: string\n
    \         description: \"Kind is a string value representing the REST resource
    this\\\n            \\ object represents. Servers may infer this from the endpoint
    the client\\\n            \\ submits requests to. Cannot be updated. In CamelCase.
    More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"\n
    \       metadata:\n          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta'\n
    \     description: VirtualMachinePreferenceList is a list of VirtualMachinePreference\n
    \       resources.\n    v1beta1.VirtualMachinePreferenceSpec:\n      type: object\n
    \     properties:\n        annotations:\n          type: object\n          additionalProperties:\n
    \           type: string\n            default: \"\"\n          description: Optionally
    defines preferred Annotations to be applied to the\n            VirtualMachineInstance\n
    \       clock:\n          $ref: '#/components/schemas/v1beta1.ClockPreferences'\n
    \       cpu:\n          $ref: '#/components/schemas/v1beta1.CPUPreferences'\n
    \       devices:\n          $ref: '#/components/schemas/v1beta1.DevicePreferences'\n
    \       features:\n          $ref: '#/components/schemas/v1beta1.FeaturePreferences'\n
    \       firmware:\n          $ref: '#/components/schemas/v1beta1.FirmwarePreferences'\n
    \       machine:\n          $ref: '#/components/schemas/v1beta1.MachinePreferences'\n
    \       preferSpreadSocketToCoreRatio:\n          type: integer\n          description:
    \"PreferSpreadSocketToCoreRatio defines the ratio to spread\\\n            \\
    vCPUs between cores and sockets, it defaults to 2.\"\n          format: int64\n
    \       preferredSubdomain:\n          type: string\n          description: Subdomain
    of the VirtualMachineInstance\n        preferredTerminationGracePeriodSeconds:\n
    \         type: integer\n          description: Grace period observed after signalling
    a VirtualMachineInstance\n            to stop after which the VirtualMachineInstance
    is force terminated.\n          format: int64\n        requirements:\n          $ref:
    '#/components/schemas/v1beta1.PreferenceRequirements'\n        volumes:\n          $ref:
    '#/components/schemas/v1beta1.VolumePreferences'\n      description: VirtualMachinePreferenceSpec
    is a description of the VirtualMachinePreference\n        or VirtualMachineClusterPreference.\n
    \   v1beta1.VolumePreferences:\n      type: object\n      properties:\n        preferredStorageClassName:\n
    \         type: string\n          description: PreffereedStorageClassName optionally
    defines the preferred\n            storageClass\n  securitySchemes:\n    BearerToken:\n
    \     type: http\n      scheme: bearer\n      description: Bearer Token authentication\nx-original-swagger-version:
    \"2.0\"\n"
kind: ConfigMap
metadata:
  creationTimestamp: null
  name: 02-modify-vm-resources-resources-specs
