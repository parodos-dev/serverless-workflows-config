apiVersion: sonataflow.org/v1alpha08
kind: SonataFlow
metadata:
  annotations:
    sonataflow.org/description: YAML based greeting workflow
    sonataflow.org/expressionLang: jsonpath
    sonataflow.org/profile: prod
    sonataflow.org/version: "1.0"
  creationTimestamp: null
  labels:
    app: greeting
    sonataflow.org/workflow-app: greeting
  name: greeting
spec:
  flow:
    annotations:
      - workflow-type/infrastructure
    dataInputSchema:
      failOnValidationErrors: true
      schema: schemas/greeting.sw.input-schema.json
    functions:
      - name: greetFunction
        operation: sysout
        type: custom
    start:
      stateName: ChooseOnLanguage
    states:
      - dataConditions:
          - condition: ${$.[?(@.language  == 'English')]}
            transition:
              nextState: GreetInEnglish
          - condition: ${$.[?(@.language  == 'Spanish')]}
            transition:
              nextState: GreetInSpanish
        defaultCondition:
          transition:
            nextState: GreetInEnglish
        name: ChooseOnLanguage
        type: switch
      - data:
          greeting: 'Hello from YAML Workflow, '
        name: GreetInEnglish
        transition:
          nextState: GreetPerson
        type: inject
      - data:
          greeting: 'Saludos desde YAML Workflow, '
        name: GreetInSpanish
        transition:
          nextState: GreetPerson
        type: inject
      - actionMode: sequential
        actions:
          - actionDataFilter:
              useResults: true
            functionRef:
              arguments:
                message: $.greeting $.name
              invoke: sync
              refName: greetFunction
            name: greetAction
        end:
          terminate: true
        name: GreetPerson
        type: operation
  podTemplate:
    container:
      resources: {}
      image: quay.io/orchestrator/serverless-workflow-greeting:a97f59ffe7cd9c29807ea246b6d1708aedcb09a1
  resources:
    configMaps:
      - configMap:
          name: 01-greeting-resources-schemas
        workflowPath: schemas
  persistence:
    postgresql:
      secretRef:
        name: sonataflow-psql-postgresql
        userKey: postgres-username
        passwordKey: postgres-password
      serviceRef:
        name: sonataflow-psql-postgresql
        port: 5432
        databaseName: sonataflow
        databaseSchema: greeting
status:
  address: {}
  lastTimeRecoverAttempt: null
