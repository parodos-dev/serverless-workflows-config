apiVersion: sonataflow.org/v1alpha08
kind: SonataFlow
metadata:
  annotations:
    sonataflow.org/description: YAML based extendable-workflow workflow
    sonataflow.org/expressionLang: jq
    sonataflow.org/profile: gitops
    sonataflow.org/version: "1.0"
  creationTimestamp: null
  labels:
    app: extendable-workflow
    sonataflow.org/workflow-app: extendable-workflow
  name: extendable-workflow
spec:
  flow:
    annotations:
      - workflow-type/infrastructure
    dataInputSchema:
      failOnValidationErrors: true
      schema: schemas/extendable-workflow.sw.input-schema.json
    functions:
      - name: successResult
        operation: '{ "result": { "completedWith":"success", "message": "Extendable workflow completed successfully", "outputs":[ { "key":"Language", "value": .languageInfo.language }, { "key":"Personnal info", "value": "Name: " + .personalInfo.firstName + " " + .personalInfo.lastName + "; Country: " + .personalInfo.country } ] } }'
        type: expression
    start:
      stateName: OutputInputs
    states:
      - actionMode: sequential
        actions:
          - actionDataFilter:
              useResults: true
            functionRef:
              invoke: sync
              refName: successResult
            name: setOutput
        end:
          terminate: true
        name: OutputInputs
        type: operation
  podTemplate:
    container:
      resources: {}
      image: quay.io/orchestrator/serverless-workflow-extendable-workflow:a7e71756da5a3a3bcc7cbd6308bf6de053281fd5
  resources:
    configMaps:
      - configMap:
          name: 01-extendable-workflow-resources-schemas
        workflowPath: schemas
  persistence:
    postgresql:
      secretRef:
        name: sonataflow-psql-postgresql
        userKey: postgres-username
        passwordKey: postgres-password
      serviceRef:
        name: sonataflow-psql-postgresql
        port: 5432
        databaseName: sonataflow
        databaseSchema: extendable-workflow
status:
  address: {}
  lastTimeRecoverAttempt: null
